// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListDesignerPanel existing list 1`] = `
<ComponentWithBaseDomainDesigner
  initModel={
    Immutable.Record {
      "exception": undefined,
      "domain": Immutable.Record {
        "name": "NIMHDemographics",
        "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
        "description": null,
        "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
        "domainId": 2280,
        "allowFileLinkProperties": false,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "allowSampleSubjectProperties": true,
        "allowTextChoiceProperties": true,
        "allowTimepointProperties": false,
        "showDefaultValueSettings": true,
        "defaultDefaultValueType": "FIXED_EDITABLE",
        "defaultValueOptions": Immutable.List [
          "FIXED_EDITABLE",
          "LAST_ENTERED",
        ],
        "fields": Immutable.List [
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Subject ID",
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "SubjectID",
            "PHI": "NotPHI",
            "propertyId": 26820,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
            "propertyValidators": [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": true,
            "scale": 10,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Integer",
              "name": "int",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": "xsd:int",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "SubjectID",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
            },
            "updatedField": false,
            "isPrimaryKey": true,
            "lockType": "PKLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Name",
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "Name",
            "PHI": "NotPHI",
            "propertyId": 26821,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
            "propertyValidators": [
              {
                "description": null,
                "errorMessage": null,
                "expression": "~lte=4000",
                "name": "Text Length",
                "new": true,
                "properties": {},
                "rowId": 14802,
                "type": "Length",
              },
            ],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "Name",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Family",
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "Family",
            "PHI": "NotPHI",
            "propertyId": 26822,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
            "propertyValidators": [
              {
                "description": null,
                "errorMessage": null,
                "expression": "~lte=4000",
                "name": "Text Length",
                "new": true,
                "properties": {},
                "rowId": 14803,
                "type": "Length",
              },
            ],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "Family",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": true,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Mother'",
            "lookupContainer": undefined,
            "lookupQuery": "NIMHDemographics",
            "lookupSchema": "lists",
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "Mothers",
            "PHI": "NotPHI",
            "propertyId": 26823,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
            "propertyValidators": [
              {
                "description": null,
                "errorMessage": null,
                "expression": "~lte=4000",
                "name": "Text Length",
                "new": true,
                "properties": {},
                "rowId": 14804,
                "type": "Length",
              },
            ],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": undefined,
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": undefined,
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "Mothers",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": true,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Fathersdaf",
            "lookupContainer": undefined,
            "lookupQuery": "NIMHDemographics",
            "lookupSchema": "lists",
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "Father",
            "PHI": "NotPHI",
            "propertyId": 26824,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
            "propertyValidators": [
              {
                "description": null,
                "errorMessage": null,
                "expression": "~lte=4000",
                "name": "Text Length",
                "new": true,
                "properties": {},
                "rowId": 14805,
                "type": "Length",
              },
            ],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": undefined,
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": undefined,
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "Father",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Species",
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "Species",
            "PHI": "NotPHI",
            "propertyId": 26825,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
            "propertyValidators": [
              {
                "description": null,
                "errorMessage": null,
                "expression": "~lte=4000",
                "name": "Text Length",
                "new": true,
                "properties": {},
                "rowId": 14806,
                "type": "Length",
              },
            ],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "Species",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Image",
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "Image",
            "PHI": "NotPHI",
            "propertyId": 26826,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
            "propertyValidators": [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.labkey.org/exp/xml#attachment",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Attachment",
              "name": "attachment",
              "rangeURI": "http://www.labkey.org/exp/xml#attachment",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.labkey.org/exp/xml#attachment",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Attachment",
                "name": "attachment",
                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "Image",
              "rangeURI": "http://www.labkey.org/exp/xml#attachment",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": true,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Occupation",
            "lookupContainer": undefined,
            "lookupQuery": "LookUpToSampleset2",
            "lookupSchema": "samples",
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "Occupation",
            "PHI": "NotPHI",
            "propertyId": 26827,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
            "propertyValidators": [
              {
                "description": null,
                "errorMessage": null,
                "expression": "~lte=4000",
                "name": "Text Length",
                "new": true,
                "properties": {},
                "rowId": 14807,
                "type": "Length",
              },
            ],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": undefined,
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": undefined,
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "Occupation",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Marital Status",
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "MaritalStatus",
            "PHI": "NotPHI",
            "propertyId": 26828,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
            "propertyValidators": [
              {
                "description": null,
                "errorMessage": null,
                "expression": "~lte=4000",
                "name": "Text Length",
                "new": true,
                "properties": {},
                "rowId": 14808,
                "type": "Length",
              },
            ],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "MaritalStatus",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Current Status",
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "CurrentStatus",
            "PHI": "NotPHI",
            "propertyId": 26829,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
            "propertyValidators": [
              {
                "description": null,
                "errorMessage": null,
                "expression": "~lte=4000",
                "name": "Text Length",
                "new": true,
                "properties": {},
                "rowId": 14809,
                "type": "Length",
              },
            ],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "CurrentStatus",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Gender",
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "Gender",
            "PHI": "NotPHI",
            "propertyId": 26830,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
            "propertyValidators": [
              {
                "description": null,
                "errorMessage": null,
                "expression": "~lte=4000",
                "name": "Text Length",
                "new": true,
                "properties": {},
                "rowId": 14810,
                "type": "Length",
              },
            ],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 4000,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "Gender",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Birth Date",
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "BirthDate",
            "PHI": "NotPHI",
            "propertyId": 26831,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
            "propertyValidators": [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 100,
            "URL": null,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Date Time",
              "name": "dateTime",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": "xsd:dateTime",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "BirthDate",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
          Immutable.Record {
            "conceptURI": null,
            "conditionalFormats": Immutable.List [],
            "defaultScale": "LINEAR",
            "defaultValueType": null,
            "defaultValue": null,
            "defaultDisplayValue": "[none]",
            "description": null,
            "dimension": false,
            "excludeFromShifting": false,
            "format": null,
            "hidden": false,
            "importAliases": null,
            "label": "Cartoon Available",
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": false,
            "mvEnabled": false,
            "name": "CartoonAvailable",
            "PHI": "NotPHI",
            "propertyId": 26832,
            "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
            "propertyValidators": [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
            "regexValidators": Immutable.List [],
            "textChoiceValidator": undefined,
            "recommendedVariable": false,
            "required": false,
            "scale": 10,
            "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Boolean",
              "name": "boolean",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
              "alternateRangeURI": "xsd:boolean",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": {
              "conceptURI": null,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Boolean",
                "name": "boolean",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                "alternateRangeURI": "xsd:boolean",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "name": "CartoonAvailable",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
            "wrappedColumnName": undefined,
            "disablePhiLevel": false,
            "lockExistingField": false,
            "sourceOntology": undefined,
            "conceptSubtree": undefined,
            "conceptLabelColumn": undefined,
            "conceptImportColumn": undefined,
            "principalConceptCode": undefined,
            "derivationDataScope": undefined,
            "selected": false,
            "scannable": false,
          },
        ],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": null,
        "domainKindName": "List",
        "schemaName": null,
        "queryName": null,
        "disabledSystemFields": undefined,
      },
      "entityId": "ea23d3e0-acd6-1037-8e6d-25f311da6f8b",
      "createdBy": 1005,
      "created": 1567119770398,
      "modifiedBy": 1005,
      "modified": 1581358929514,
      "containerId": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
      "name": "NIMHDemographics",
      "domainKindName": undefined,
      "description": null,
      "lastIndexed": 1581358687000,
      "keyName": "SubjectID",
      "titleColumn": "Name",
      "domainId": 2280,
      "keyType": "Integer",
      "discussionSetting": 1,
      "allowDelete": true,
      "allowUpload": true,
      "allowExport": true,
      "entireListIndex": false,
      "entireListIndexSetting": 0,
      "entireListTitleTemplate": null,
      "entireListBodySetting": 1,
      "entireListBodyTemplate": null,
      "eachItemIndex": true,
      "eachItemTitleTemplate": "dafsfadsfdsa",
      "eachItemBodySetting": 0,
      "eachItemBodyTemplate": null,
      "fileAttachmentIndex": false,
      "listId": 277,
      "discussionSettingEnum": "OnePerItem",
      "containerPath": "/Tutorials/Lists",
      "category": undefined,
    }
  }
  onCancel={[MockFunction]}
  onComplete={[MockFunction]}
  testMode={true}
>
  <ListDesignerPanelsImpl
    currentPanelIndex={0}
    firstState={true}
    initModel={
      Immutable.Record {
        "exception": undefined,
        "domain": Immutable.Record {
          "name": "NIMHDemographics",
          "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
          "description": null,
          "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
          "domainId": 2280,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "allowSampleSubjectProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": true,
          "defaultDefaultValueType": "FIXED_EDITABLE",
          "defaultValueOptions": Immutable.List [
            "FIXED_EDITABLE",
            "LAST_ENTERED",
          ],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Subject ID",
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "SubjectID",
              "PHI": "NotPHI",
              "propertyId": 26820,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
              "propertyValidators": [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": true,
              "scale": 10,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "SubjectID",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              },
              "updatedField": false,
              "isPrimaryKey": true,
              "lockType": "PKLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Name",
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "Name",
              "PHI": "NotPHI",
              "propertyId": 26821,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
              "propertyValidators": [
                {
                  "description": null,
                  "errorMessage": null,
                  "expression": "~lte=4000",
                  "name": "Text Length",
                  "new": true,
                  "properties": {},
                  "rowId": 14802,
                  "type": "Length",
                },
              ],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "Name",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Family",
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "Family",
              "PHI": "NotPHI",
              "propertyId": 26822,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
              "propertyValidators": [
                {
                  "description": null,
                  "errorMessage": null,
                  "expression": "~lte=4000",
                  "name": "Text Length",
                  "new": true,
                  "properties": {},
                  "rowId": 14803,
                  "type": "Length",
                },
              ],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "Family",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": true,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Mother'",
              "lookupContainer": undefined,
              "lookupQuery": "NIMHDemographics",
              "lookupSchema": "lists",
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "Mothers",
              "PHI": "NotPHI",
              "propertyId": 26823,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
              "propertyValidators": [
                {
                  "description": null,
                  "errorMessage": null,
                  "expression": "~lte=4000",
                  "name": "Text Length",
                  "new": true,
                  "properties": {},
                  "rowId": 14804,
                  "type": "Length",
                },
              ],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": undefined,
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": undefined,
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "Mothers",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": true,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Fathersdaf",
              "lookupContainer": undefined,
              "lookupQuery": "NIMHDemographics",
              "lookupSchema": "lists",
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "Father",
              "PHI": "NotPHI",
              "propertyId": 26824,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
              "propertyValidators": [
                {
                  "description": null,
                  "errorMessage": null,
                  "expression": "~lte=4000",
                  "name": "Text Length",
                  "new": true,
                  "properties": {},
                  "rowId": 14805,
                  "type": "Length",
                },
              ],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": undefined,
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": undefined,
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "Father",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Species",
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "Species",
              "PHI": "NotPHI",
              "propertyId": 26825,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
              "propertyValidators": [
                {
                  "description": null,
                  "errorMessage": null,
                  "expression": "~lte=4000",
                  "name": "Text Length",
                  "new": true,
                  "properties": {},
                  "rowId": 14806,
                  "type": "Length",
                },
              ],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "Species",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Image",
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "Image",
              "PHI": "NotPHI",
              "propertyId": 26826,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
              "propertyValidators": [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.labkey.org/exp/xml#attachment",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Attachment",
                "name": "attachment",
                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Attachment",
                  "name": "attachment",
                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "Image",
                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": true,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Occupation",
              "lookupContainer": undefined,
              "lookupQuery": "LookUpToSampleset2",
              "lookupSchema": "samples",
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "Occupation",
              "PHI": "NotPHI",
              "propertyId": 26827,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
              "propertyValidators": [
                {
                  "description": null,
                  "errorMessage": null,
                  "expression": "~lte=4000",
                  "name": "Text Length",
                  "new": true,
                  "properties": {},
                  "rowId": 14807,
                  "type": "Length",
                },
              ],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": undefined,
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": undefined,
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "Occupation",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Marital Status",
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "MaritalStatus",
              "PHI": "NotPHI",
              "propertyId": 26828,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
              "propertyValidators": [
                {
                  "description": null,
                  "errorMessage": null,
                  "expression": "~lte=4000",
                  "name": "Text Length",
                  "new": true,
                  "properties": {},
                  "rowId": 14808,
                  "type": "Length",
                },
              ],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "MaritalStatus",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Current Status",
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "CurrentStatus",
              "PHI": "NotPHI",
              "propertyId": 26829,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
              "propertyValidators": [
                {
                  "description": null,
                  "errorMessage": null,
                  "expression": "~lte=4000",
                  "name": "Text Length",
                  "new": true,
                  "properties": {},
                  "rowId": 14809,
                  "type": "Length",
                },
              ],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "CurrentStatus",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Gender",
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "Gender",
              "PHI": "NotPHI",
              "propertyId": 26830,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
              "propertyValidators": [
                {
                  "description": null,
                  "errorMessage": null,
                  "expression": "~lte=4000",
                  "name": "Text Length",
                  "new": true,
                  "properties": {},
                  "rowId": 14810,
                  "type": "Length",
                },
              ],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 4000,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "Gender",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Birth Date",
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "BirthDate",
              "PHI": "NotPHI",
              "propertyId": 26831,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
              "propertyValidators": [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 100,
              "URL": null,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "BirthDate",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
            Immutable.Record {
              "conceptURI": null,
              "conditionalFormats": Immutable.List [],
              "defaultScale": "LINEAR",
              "defaultValueType": null,
              "defaultValue": null,
              "defaultDisplayValue": "[none]",
              "description": null,
              "dimension": false,
              "excludeFromShifting": false,
              "format": null,
              "hidden": false,
              "importAliases": null,
              "label": "Cartoon Available",
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": false,
              "mvEnabled": false,
              "name": "CartoonAvailable",
              "PHI": "NotPHI",
              "propertyId": 26832,
              "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
              "propertyValidators": [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
              "regexValidators": Immutable.List [],
              "textChoiceValidator": undefined,
              "recommendedVariable": false,
              "required": false,
              "scale": 10,
              "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Boolean",
                "name": "boolean",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                "alternateRangeURI": "xsd:boolean",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": {
                "conceptURI": null,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Boolean",
                  "name": "boolean",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                  "alternateRangeURI": "xsd:boolean",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "name": "CartoonAvailable",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
              "wrappedColumnName": undefined,
              "disablePhiLevel": false,
              "lockExistingField": false,
              "sourceOntology": undefined,
              "conceptSubtree": undefined,
              "conceptLabelColumn": undefined,
              "conceptImportColumn": undefined,
              "principalConceptCode": undefined,
              "derivationDataScope": undefined,
              "selected": false,
              "scannable": false,
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": null,
          "domainKindName": "List",
          "schemaName": null,
          "queryName": null,
          "disabledSystemFields": undefined,
        },
        "entityId": "ea23d3e0-acd6-1037-8e6d-25f311da6f8b",
        "createdBy": 1005,
        "created": 1567119770398,
        "modifiedBy": 1005,
        "modified": 1581358929514,
        "containerId": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
        "name": "NIMHDemographics",
        "domainKindName": undefined,
        "description": null,
        "lastIndexed": 1581358687000,
        "keyName": "SubjectID",
        "titleColumn": "Name",
        "domainId": 2280,
        "keyType": "Integer",
        "discussionSetting": 1,
        "allowDelete": true,
        "allowUpload": true,
        "allowExport": true,
        "entireListIndex": false,
        "entireListIndexSetting": 0,
        "entireListTitleTemplate": null,
        "entireListBodySetting": 1,
        "entireListBodyTemplate": null,
        "eachItemIndex": true,
        "eachItemTitleTemplate": "dafsfadsfdsa",
        "eachItemBodySetting": 0,
        "eachItemBodyTemplate": null,
        "fileAttachmentIndex": false,
        "listId": 277,
        "discussionSettingEnum": "OnePerItem",
        "containerPath": "/Tutorials/Lists",
        "category": undefined,
      }
    }
    onCancel={[MockFunction]}
    onComplete={[MockFunction]}
    onFinish={[Function]}
    onTogglePanel={[Function]}
    setSubmitting={[Function]}
    submitting={false}
    testMode={true}
    visitedPanels={Immutable.List []}
  >
    <BaseDomainDesigner
      domains={
        Immutable.List [
          Immutable.Record {
            "name": "NIMHDemographics",
            "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
            "description": null,
            "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
            "domainId": 2280,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": true,
            "defaultDefaultValueType": "FIXED_EDITABLE",
            "defaultValueOptions": Immutable.List [
              "FIXED_EDITABLE",
              "LAST_ENTERED",
            ],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Subject ID",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "SubjectID",
                "PHI": "NotPHI",
                "propertyId": 26820,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                "propertyValidators": [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": true,
                "scale": 10,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "SubjectID",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                },
                "updatedField": false,
                "isPrimaryKey": true,
                "lockType": "PKLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Name",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Name",
                "PHI": "NotPHI",
                "propertyId": 26821,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14802,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Name",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Family",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Family",
                "PHI": "NotPHI",
                "propertyId": 26822,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14803,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Family",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": true,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Mother'",
                "lookupContainer": undefined,
                "lookupQuery": "NIMHDemographics",
                "lookupSchema": "lists",
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Mothers",
                "PHI": "NotPHI",
                "propertyId": 26823,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14804,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": undefined,
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": undefined,
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Mothers",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": true,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Fathersdaf",
                "lookupContainer": undefined,
                "lookupQuery": "NIMHDemographics",
                "lookupSchema": "lists",
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Father",
                "PHI": "NotPHI",
                "propertyId": 26824,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14805,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": undefined,
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": undefined,
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Father",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Species",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Species",
                "PHI": "NotPHI",
                "propertyId": 26825,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14806,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Species",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Image",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Image",
                "PHI": "NotPHI",
                "propertyId": 26826,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                "propertyValidators": [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Attachment",
                  "name": "attachment",
                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Attachment",
                    "name": "attachment",
                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Image",
                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": true,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Occupation",
                "lookupContainer": undefined,
                "lookupQuery": "LookUpToSampleset2",
                "lookupSchema": "samples",
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Occupation",
                "PHI": "NotPHI",
                "propertyId": 26827,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14807,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": undefined,
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": undefined,
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Occupation",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Marital Status",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "MaritalStatus",
                "PHI": "NotPHI",
                "propertyId": 26828,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14808,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "MaritalStatus",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Current Status",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "CurrentStatus",
                "PHI": "NotPHI",
                "propertyId": 26829,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14809,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "CurrentStatus",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Gender",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Gender",
                "PHI": "NotPHI",
                "propertyId": 26830,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14810,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Gender",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Birth Date",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "BirthDate",
                "PHI": "NotPHI",
                "propertyId": 26831,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                "propertyValidators": [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 100,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "BirthDate",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Cartoon Available",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "CartoonAvailable",
                "PHI": "NotPHI",
                "propertyId": 26832,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                "propertyValidators": [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 10,
                "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Boolean",
                  "name": "boolean",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                  "alternateRangeURI": "xsd:boolean",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Boolean",
                    "name": "boolean",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                    "alternateRangeURI": "xsd:boolean",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "CartoonAvailable",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": null,
            "domainKindName": "List",
            "schemaName": null,
            "queryName": null,
            "disabledSystemFields": undefined,
          },
        ]
      }
      hasValidProperties={true}
      name="NIMHDemographics"
      onCancel={[MockFunction]}
      onFinish={[Function]}
      saveBtnText="Save"
      submitting={false}
      visitedPanels={Immutable.List []}
    >
      <ComponentWithDomainPropertiesPanelCollapse
        controlledCollapse={true}
        initCollapsed={false}
        model={
          Immutable.Record {
            "exception": undefined,
            "domain": Immutable.Record {
              "name": "NIMHDemographics",
              "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
              "description": null,
              "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
              "domainId": 2280,
              "allowFileLinkProperties": false,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "allowSampleSubjectProperties": true,
              "allowTextChoiceProperties": true,
              "allowTimepointProperties": false,
              "showDefaultValueSettings": true,
              "defaultDefaultValueType": "FIXED_EDITABLE",
              "defaultValueOptions": Immutable.List [
                "FIXED_EDITABLE",
                "LAST_ENTERED",
              ],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Subject ID",
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "SubjectID",
                  "PHI": "NotPHI",
                  "propertyId": 26820,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                  "propertyValidators": [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": true,
                  "scale": 10,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "SubjectID",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  },
                  "updatedField": false,
                  "isPrimaryKey": true,
                  "lockType": "PKLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Name",
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "Name",
                  "PHI": "NotPHI",
                  "propertyId": 26821,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                  "propertyValidators": [
                    {
                      "description": null,
                      "errorMessage": null,
                      "expression": "~lte=4000",
                      "name": "Text Length",
                      "new": true,
                      "properties": {},
                      "rowId": 14802,
                      "type": "Length",
                    },
                  ],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "Name",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Family",
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "Family",
                  "PHI": "NotPHI",
                  "propertyId": 26822,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                  "propertyValidators": [
                    {
                      "description": null,
                      "errorMessage": null,
                      "expression": "~lte=4000",
                      "name": "Text Length",
                      "new": true,
                      "properties": {},
                      "rowId": 14803,
                      "type": "Length",
                    },
                  ],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "Family",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": true,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Mother'",
                  "lookupContainer": undefined,
                  "lookupQuery": "NIMHDemographics",
                  "lookupSchema": "lists",
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "Mothers",
                  "PHI": "NotPHI",
                  "propertyId": 26823,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                  "propertyValidators": [
                    {
                      "description": null,
                      "errorMessage": null,
                      "expression": "~lte=4000",
                      "name": "Text Length",
                      "new": true,
                      "properties": {},
                      "rowId": 14804,
                      "type": "Length",
                    },
                  ],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": undefined,
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "Mothers",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": true,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Fathersdaf",
                  "lookupContainer": undefined,
                  "lookupQuery": "NIMHDemographics",
                  "lookupSchema": "lists",
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "Father",
                  "PHI": "NotPHI",
                  "propertyId": 26824,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                  "propertyValidators": [
                    {
                      "description": null,
                      "errorMessage": null,
                      "expression": "~lte=4000",
                      "name": "Text Length",
                      "new": true,
                      "properties": {},
                      "rowId": 14805,
                      "type": "Length",
                    },
                  ],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": undefined,
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "Father",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Species",
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "Species",
                  "PHI": "NotPHI",
                  "propertyId": 26825,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                  "propertyValidators": [
                    {
                      "description": null,
                      "errorMessage": null,
                      "expression": "~lte=4000",
                      "name": "Text Length",
                      "new": true,
                      "properties": {},
                      "rowId": 14806,
                      "type": "Length",
                    },
                  ],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "Species",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Image",
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "Image",
                  "PHI": "NotPHI",
                  "propertyId": 26826,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                  "propertyValidators": [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Attachment",
                    "name": "attachment",
                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "Image",
                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": true,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Occupation",
                  "lookupContainer": undefined,
                  "lookupQuery": "LookUpToSampleset2",
                  "lookupSchema": "samples",
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "Occupation",
                  "PHI": "NotPHI",
                  "propertyId": 26827,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                  "propertyValidators": [
                    {
                      "description": null,
                      "errorMessage": null,
                      "expression": "~lte=4000",
                      "name": "Text Length",
                      "new": true,
                      "properties": {},
                      "rowId": 14807,
                      "type": "Length",
                    },
                  ],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": undefined,
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "Occupation",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Marital Status",
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "MaritalStatus",
                  "PHI": "NotPHI",
                  "propertyId": 26828,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                  "propertyValidators": [
                    {
                      "description": null,
                      "errorMessage": null,
                      "expression": "~lte=4000",
                      "name": "Text Length",
                      "new": true,
                      "properties": {},
                      "rowId": 14808,
                      "type": "Length",
                    },
                  ],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "MaritalStatus",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Current Status",
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "CurrentStatus",
                  "PHI": "NotPHI",
                  "propertyId": 26829,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                  "propertyValidators": [
                    {
                      "description": null,
                      "errorMessage": null,
                      "expression": "~lte=4000",
                      "name": "Text Length",
                      "new": true,
                      "properties": {},
                      "rowId": 14809,
                      "type": "Length",
                    },
                  ],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "CurrentStatus",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Gender",
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "Gender",
                  "PHI": "NotPHI",
                  "propertyId": 26830,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                  "propertyValidators": [
                    {
                      "description": null,
                      "errorMessage": null,
                      "expression": "~lte=4000",
                      "name": "Text Length",
                      "new": true,
                      "properties": {},
                      "rowId": 14810,
                      "type": "Length",
                    },
                  ],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 4000,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "Gender",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Birth Date",
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "BirthDate",
                  "PHI": "NotPHI",
                  "propertyId": 26831,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                  "propertyValidators": [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 100,
                  "URL": null,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "BirthDate",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
                Immutable.Record {
                  "conceptURI": null,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": "LINEAR",
                  "defaultValueType": null,
                  "defaultValue": null,
                  "defaultDisplayValue": "[none]",
                  "description": null,
                  "dimension": false,
                  "excludeFromShifting": false,
                  "format": null,
                  "hidden": false,
                  "importAliases": null,
                  "label": "Cartoon Available",
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": false,
                  "mvEnabled": false,
                  "name": "CartoonAvailable",
                  "PHI": "NotPHI",
                  "propertyId": 26832,
                  "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                  "propertyValidators": [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                  "regexValidators": Immutable.List [],
                  "textChoiceValidator": undefined,
                  "recommendedVariable": false,
                  "required": false,
                  "scale": 10,
                  "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Boolean",
                    "name": "boolean",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                    "alternateRangeURI": "xsd:boolean",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": {
                    "conceptURI": null,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Boolean",
                      "name": "boolean",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": "xsd:boolean",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "name": "CartoonAvailable",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                  "wrappedColumnName": undefined,
                  "disablePhiLevel": false,
                  "lockExistingField": false,
                  "sourceOntology": undefined,
                  "conceptSubtree": undefined,
                  "conceptLabelColumn": undefined,
                  "conceptImportColumn": undefined,
                  "principalConceptCode": undefined,
                  "derivationDataScope": undefined,
                  "selected": false,
                  "scannable": false,
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": null,
              "domainKindName": "List",
              "schemaName": null,
              "queryName": null,
              "disabledSystemFields": undefined,
            },
            "entityId": "ea23d3e0-acd6-1037-8e6d-25f311da6f8b",
            "createdBy": 1005,
            "created": 1567119770398,
            "modifiedBy": 1005,
            "modified": 1581358929514,
            "containerId": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
            "name": "NIMHDemographics",
            "domainKindName": undefined,
            "description": null,
            "lastIndexed": 1581358687000,
            "keyName": "SubjectID",
            "titleColumn": "Name",
            "domainId": 2280,
            "keyType": "Integer",
            "discussionSetting": 1,
            "allowDelete": true,
            "allowUpload": true,
            "allowExport": true,
            "entireListIndex": false,
            "entireListIndexSetting": 0,
            "entireListTitleTemplate": null,
            "entireListBodySetting": 1,
            "entireListBodyTemplate": null,
            "eachItemIndex": true,
            "eachItemTitleTemplate": "dafsfadsfdsa",
            "eachItemBodySetting": 0,
            "eachItemBodyTemplate": null,
            "fileAttachmentIndex": false,
            "listId": 277,
            "discussionSettingEnum": "OnePerItem",
            "containerPath": "/Tutorials/Lists",
            "category": undefined,
          }
        }
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        validate={false}
      >
        <ListPropertiesPanelImpl
          collapsed={false}
          controlledCollapse={true}
          model={
            Immutable.Record {
              "exception": undefined,
              "domain": Immutable.Record {
                "name": "NIMHDemographics",
                "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                "description": null,
                "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
                "domainId": 2280,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": true,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": true,
                "defaultDefaultValueType": "FIXED_EDITABLE",
                "defaultValueOptions": Immutable.List [
                  "FIXED_EDITABLE",
                  "LAST_ENTERED",
                ],
                "fields": Immutable.List [
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Subject ID",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "SubjectID",
                    "PHI": "NotPHI",
                    "propertyId": 26820,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                    "propertyValidators": [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": true,
                    "scale": 10,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "SubjectID",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    },
                    "updatedField": false,
                    "isPrimaryKey": true,
                    "lockType": "PKLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Name",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Name",
                    "PHI": "NotPHI",
                    "propertyId": 26821,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14802,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Name",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Family",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Family",
                    "PHI": "NotPHI",
                    "propertyId": 26822,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14803,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Family",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": true,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Mother'",
                    "lookupContainer": undefined,
                    "lookupQuery": "NIMHDemographics",
                    "lookupSchema": "lists",
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Mothers",
                    "PHI": "NotPHI",
                    "propertyId": 26823,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14804,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": undefined,
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Mothers",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": true,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Fathersdaf",
                    "lookupContainer": undefined,
                    "lookupQuery": "NIMHDemographics",
                    "lookupSchema": "lists",
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Father",
                    "PHI": "NotPHI",
                    "propertyId": 26824,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14805,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": undefined,
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Father",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Species",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Species",
                    "PHI": "NotPHI",
                    "propertyId": 26825,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14806,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Species",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Image",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Image",
                    "PHI": "NotPHI",
                    "propertyId": 26826,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                    "propertyValidators": [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Attachment",
                        "name": "attachment",
                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Image",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": true,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Occupation",
                    "lookupContainer": undefined,
                    "lookupQuery": "LookUpToSampleset2",
                    "lookupSchema": "samples",
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Occupation",
                    "PHI": "NotPHI",
                    "propertyId": 26827,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14807,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": undefined,
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Occupation",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Marital Status",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "MaritalStatus",
                    "PHI": "NotPHI",
                    "propertyId": 26828,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14808,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "MaritalStatus",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Current Status",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "CurrentStatus",
                    "PHI": "NotPHI",
                    "propertyId": 26829,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14809,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "CurrentStatus",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Gender",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Gender",
                    "PHI": "NotPHI",
                    "propertyId": 26830,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14810,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Gender",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Birth Date",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "BirthDate",
                    "PHI": "NotPHI",
                    "propertyId": 26831,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                    "propertyValidators": [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 100,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "BirthDate",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Cartoon Available",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "CartoonAvailable",
                    "PHI": "NotPHI",
                    "propertyId": 26832,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                    "propertyValidators": [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 10,
                    "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Boolean",
                      "name": "boolean",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": "xsd:boolean",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Boolean",
                        "name": "boolean",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                        "alternateRangeURI": "xsd:boolean",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "CartoonAvailable",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                ],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": null,
                "domainKindName": "List",
                "schemaName": null,
                "queryName": null,
                "disabledSystemFields": undefined,
              },
              "entityId": "ea23d3e0-acd6-1037-8e6d-25f311da6f8b",
              "createdBy": 1005,
              "created": 1567119770398,
              "modifiedBy": 1005,
              "modified": 1581358929514,
              "containerId": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
              "name": "NIMHDemographics",
              "domainKindName": undefined,
              "description": null,
              "lastIndexed": 1581358687000,
              "keyName": "SubjectID",
              "titleColumn": "Name",
              "domainId": 2280,
              "keyType": "Integer",
              "discussionSetting": 1,
              "allowDelete": true,
              "allowUpload": true,
              "allowExport": true,
              "entireListIndex": false,
              "entireListIndexSetting": 0,
              "entireListTitleTemplate": null,
              "entireListBodySetting": 1,
              "entireListBodyTemplate": null,
              "eachItemIndex": true,
              "eachItemTitleTemplate": "dafsfadsfdsa",
              "eachItemBodySetting": 0,
              "eachItemBodyTemplate": null,
              "fileAttachmentIndex": false,
              "listId": 277,
              "discussionSettingEnum": "OnePerItem",
              "containerPath": "/Tutorials/Lists",
              "category": undefined,
            }
          }
          onChange={[Function]}
          panelStatus="COMPLETE"
          togglePanel={[Function]}
          validate={false}
        >
          <BasePropertiesPanel
            collapsed={false}
            controlledCollapse={true}
            headerId="list-properties-hdr"
            isValid={true}
            model={
              Immutable.Record {
                "exception": undefined,
                "domain": Immutable.Record {
                  "name": "NIMHDemographics",
                  "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                  "description": null,
                  "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
                  "domainId": 2280,
                  "allowFileLinkProperties": false,
                  "allowAttachmentProperties": true,
                  "allowFlagProperties": true,
                  "allowSampleSubjectProperties": true,
                  "allowTextChoiceProperties": true,
                  "allowTimepointProperties": false,
                  "showDefaultValueSettings": true,
                  "defaultDefaultValueType": "FIXED_EDITABLE",
                  "defaultValueOptions": Immutable.List [
                    "FIXED_EDITABLE",
                    "LAST_ENTERED",
                  ],
                  "fields": Immutable.List [
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Subject ID",
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "SubjectID",
                      "PHI": "NotPHI",
                      "propertyId": 26820,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                      "propertyValidators": [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": true,
                      "scale": 10,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Integer",
                          "name": "int",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                          "alternateRangeURI": "xsd:int",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "SubjectID",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      },
                      "updatedField": false,
                      "isPrimaryKey": true,
                      "lockType": "PKLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Name",
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "Name",
                      "PHI": "NotPHI",
                      "propertyId": 26821,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                      "propertyValidators": [
                        {
                          "description": null,
                          "errorMessage": null,
                          "expression": "~lte=4000",
                          "name": "Text Length",
                          "new": true,
                          "properties": {},
                          "rowId": 14802,
                          "type": "Length",
                        },
                      ],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "Name",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Family",
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "Family",
                      "PHI": "NotPHI",
                      "propertyId": 26822,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                      "propertyValidators": [
                        {
                          "description": null,
                          "errorMessage": null,
                          "expression": "~lte=4000",
                          "name": "Text Length",
                          "new": true,
                          "properties": {},
                          "rowId": 14803,
                          "type": "Length",
                        },
                      ],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "Family",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": true,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Mother'",
                      "lookupContainer": undefined,
                      "lookupQuery": "NIMHDemographics",
                      "lookupSchema": "lists",
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "Mothers",
                      "PHI": "NotPHI",
                      "propertyId": 26823,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                      "propertyValidators": [
                        {
                          "description": null,
                          "errorMessage": null,
                          "expression": "~lte=4000",
                          "name": "Text Length",
                          "new": true,
                          "properties": {},
                          "rowId": 14804,
                          "type": "Length",
                        },
                      ],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": undefined,
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": undefined,
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "Mothers",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": true,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Fathersdaf",
                      "lookupContainer": undefined,
                      "lookupQuery": "NIMHDemographics",
                      "lookupSchema": "lists",
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "Father",
                      "PHI": "NotPHI",
                      "propertyId": 26824,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                      "propertyValidators": [
                        {
                          "description": null,
                          "errorMessage": null,
                          "expression": "~lte=4000",
                          "name": "Text Length",
                          "new": true,
                          "properties": {},
                          "rowId": 14805,
                          "type": "Length",
                        },
                      ],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": undefined,
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": undefined,
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "Father",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Species",
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "Species",
                      "PHI": "NotPHI",
                      "propertyId": 26825,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                      "propertyValidators": [
                        {
                          "description": null,
                          "errorMessage": null,
                          "expression": "~lte=4000",
                          "name": "Text Length",
                          "new": true,
                          "properties": {},
                          "rowId": 14806,
                          "type": "Length",
                        },
                      ],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "Species",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Image",
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "Image",
                      "PHI": "NotPHI",
                      "propertyId": 26826,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                      "propertyValidators": [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Attachment",
                        "name": "attachment",
                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Attachment",
                          "name": "attachment",
                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "Image",
                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": true,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Occupation",
                      "lookupContainer": undefined,
                      "lookupQuery": "LookUpToSampleset2",
                      "lookupSchema": "samples",
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "Occupation",
                      "PHI": "NotPHI",
                      "propertyId": 26827,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                      "propertyValidators": [
                        {
                          "description": null,
                          "errorMessage": null,
                          "expression": "~lte=4000",
                          "name": "Text Length",
                          "new": true,
                          "properties": {},
                          "rowId": 14807,
                          "type": "Length",
                        },
                      ],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": undefined,
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Lookup",
                          "name": "lookup",
                          "rangeURI": undefined,
                          "alternateRangeURI": undefined,
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "Occupation",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Marital Status",
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "MaritalStatus",
                      "PHI": "NotPHI",
                      "propertyId": 26828,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                      "propertyValidators": [
                        {
                          "description": null,
                          "errorMessage": null,
                          "expression": "~lte=4000",
                          "name": "Text Length",
                          "new": true,
                          "properties": {},
                          "rowId": 14808,
                          "type": "Length",
                        },
                      ],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "MaritalStatus",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Current Status",
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "CurrentStatus",
                      "PHI": "NotPHI",
                      "propertyId": 26829,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                      "propertyValidators": [
                        {
                          "description": null,
                          "errorMessage": null,
                          "expression": "~lte=4000",
                          "name": "Text Length",
                          "new": true,
                          "properties": {},
                          "rowId": 14809,
                          "type": "Length",
                        },
                      ],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "CurrentStatus",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Gender",
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "Gender",
                      "PHI": "NotPHI",
                      "propertyId": 26830,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                      "propertyValidators": [
                        {
                          "description": null,
                          "errorMessage": null,
                          "expression": "~lte=4000",
                          "name": "Text Length",
                          "new": true,
                          "properties": {},
                          "rowId": 14810,
                          "type": "Length",
                        },
                      ],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 4000,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Text",
                          "name": "string",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                          "alternateRangeURI": "xsd:string",
                          "shortDisplay": "String",
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "Gender",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Birth Date",
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "BirthDate",
                      "PHI": "NotPHI",
                      "propertyId": 26831,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                      "propertyValidators": [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 100,
                      "URL": null,
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Date Time",
                          "name": "dateTime",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                          "alternateRangeURI": "xsd:dateTime",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "BirthDate",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                    Immutable.Record {
                      "conceptURI": null,
                      "conditionalFormats": Immutable.List [],
                      "defaultScale": "LINEAR",
                      "defaultValueType": null,
                      "defaultValue": null,
                      "defaultDisplayValue": "[none]",
                      "description": null,
                      "dimension": false,
                      "excludeFromShifting": false,
                      "format": null,
                      "hidden": false,
                      "importAliases": null,
                      "label": "Cartoon Available",
                      "lookupContainer": undefined,
                      "lookupQuery": undefined,
                      "lookupSchema": undefined,
                      "lookupValidator": undefined,
                      "measure": false,
                      "mvEnabled": false,
                      "name": "CartoonAvailable",
                      "PHI": "NotPHI",
                      "propertyId": 26832,
                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                      "propertyValidators": [],
                      "rangeValidators": Immutable.List [],
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "regexValidators": Immutable.List [],
                      "textChoiceValidator": undefined,
                      "recommendedVariable": false,
                      "required": false,
                      "scale": 10,
                      "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                      "shownInDetailsView": true,
                      "shownInInsertView": true,
                      "shownInUpdateView": true,
                      "visible": true,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Boolean",
                        "name": "boolean",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                        "alternateRangeURI": "xsd:boolean",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "lookupQueryValue": undefined,
                      "lookupType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "original": {
                        "conceptURI": null,
                        "dataType": Immutable.Record {
                          "conceptURI": undefined,
                          "display": "Boolean",
                          "name": "boolean",
                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                          "alternateRangeURI": "xsd:boolean",
                          "shortDisplay": undefined,
                          "lookupSchema": undefined,
                          "lookupQuery": undefined,
                        },
                        "name": "CartoonAvailable",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      },
                      "updatedField": false,
                      "isPrimaryKey": false,
                      "lockType": "NotLocked",
                      "wrappedColumnName": undefined,
                      "disablePhiLevel": false,
                      "lockExistingField": false,
                      "sourceOntology": undefined,
                      "conceptSubtree": undefined,
                      "conceptLabelColumn": undefined,
                      "conceptImportColumn": undefined,
                      "principalConceptCode": undefined,
                      "derivationDataScope": undefined,
                      "selected": false,
                      "scannable": false,
                    },
                  ],
                  "indices": Immutable.List [],
                  "domainException": undefined,
                  "mandatoryFieldNames": Immutable.List [],
                  "reservedFieldNames": Immutable.List [],
                  "newDesignFields": undefined,
                  "instructions": null,
                  "domainKindName": "List",
                  "schemaName": null,
                  "queryName": null,
                  "disabledSystemFields": undefined,
                },
                "entityId": "ea23d3e0-acd6-1037-8e6d-25f311da6f8b",
                "createdBy": 1005,
                "created": 1567119770398,
                "modifiedBy": 1005,
                "modified": 1581358929514,
                "containerId": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                "name": "NIMHDemographics",
                "domainKindName": undefined,
                "description": null,
                "lastIndexed": 1581358687000,
                "keyName": "SubjectID",
                "titleColumn": "Name",
                "domainId": 2280,
                "keyType": "Integer",
                "discussionSetting": 1,
                "allowDelete": true,
                "allowUpload": true,
                "allowExport": true,
                "entireListIndex": false,
                "entireListIndexSetting": 0,
                "entireListTitleTemplate": null,
                "entireListBodySetting": 1,
                "entireListBodyTemplate": null,
                "eachItemIndex": true,
                "eachItemTitleTemplate": "dafsfadsfdsa",
                "eachItemBodySetting": 0,
                "eachItemBodyTemplate": null,
                "fileAttachmentIndex": false,
                "listId": 277,
                "discussionSettingEnum": "OnePerItem",
                "containerPath": "/Tutorials/Lists",
                "category": undefined,
              }
            }
            onChange={[Function]}
            panelStatus="COMPLETE"
            title="List Properties"
            titlePrefix="NIMHDemographics"
            togglePanel={[Function]}
            updateValidStatus={[Function]}
            useTheme={false}
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel domain-panel-no-theme"
              expanded={true}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel domain-panel-no-theme"
                expanded={true}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel domain-panel-no-theme"
                  expanded={true}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel domain-panel-no-theme panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={false}
                      controlledCollapse={true}
                      iconHelpMsg="Contains errors or is missing required values."
                      id="list-properties-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="List Properties"
                      titlePrefix="NIMHDemographics"
                      togglePanel={[Function]}
                      useTheme={false}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme"
                        componentClass="div"
                        id="list-properties-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                          id="list-properties-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon"
                          >
                            <span
                              className="fa fa-check-circle"
                            />
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            NIMHDemographics - List Properties
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-minus-square domain-form-collapse-btn"
                            />
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={true}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={true}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse in"
                            >
                              <div
                                className="panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className="margin-bottom"
                                  componentClass="div"
                                >
                                  <div
                                    className="margin-bottom row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      >
                                        <HelpTopicURL
                                          helpTopic="createListOptions"
                                          nounPlural="lists"
                                        >
                                          <Row
                                            bsClass="row"
                                            componentClass="div"
                                          >
                                            <div
                                              className="row"
                                            >
                                              <Col
                                                bsClass="col"
                                                componentClass="div"
                                                xs={12}
                                              >
                                                <div
                                                  className="col-xs-12"
                                                >
                                                  <HelpLink
                                                    className="domain-field-float-right"
                                                    topic="createListOptions"
                                                  >
                                                    <a
                                                      className="domain-field-float-right"
                                                      href="https://www.labkey.org/Documentation/wiki-page.view?referrer=inPage&name=createListOptions"
                                                      rel="noopener noreferrer"
                                                      target="_blank"
                                                    >
                                                      Learn more about designing lists
                                                    </a>
                                                  </HelpLink>
                                                </div>
                                              </Col>
                                            </div>
                                          </Row>
                                        </HelpTopicURL>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                                <Form
                                  bsClass="form"
                                  componentClass="form"
                                  horizontal={false}
                                  inline={false}
                                >
                                  <form
                                    className=""
                                  >
                                    <Memo()
                                      model={
                                        Immutable.Record {
                                          "exception": undefined,
                                          "domain": Immutable.Record {
                                            "name": "NIMHDemographics",
                                            "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                            "description": null,
                                            "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
                                            "domainId": 2280,
                                            "allowFileLinkProperties": false,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "allowSampleSubjectProperties": true,
                                            "allowTextChoiceProperties": true,
                                            "allowTimepointProperties": false,
                                            "showDefaultValueSettings": true,
                                            "defaultDefaultValueType": "FIXED_EDITABLE",
                                            "defaultValueOptions": Immutable.List [
                                              "FIXED_EDITABLE",
                                              "LAST_ENTERED",
                                            ],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Subject ID",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "SubjectID",
                                                "PHI": "NotPHI",
                                                "propertyId": 26820,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": true,
                                                "scale": 10,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "SubjectID",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": true,
                                                "lockType": "PKLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Name",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Name",
                                                "PHI": "NotPHI",
                                                "propertyId": 26821,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14802,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Name",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Family",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Family",
                                                "PHI": "NotPHI",
                                                "propertyId": 26822,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14803,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Family",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": true,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Mother'",
                                                "lookupContainer": undefined,
                                                "lookupQuery": "NIMHDemographics",
                                                "lookupSchema": "lists",
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Mothers",
                                                "PHI": "NotPHI",
                                                "propertyId": 26823,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14804,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": undefined,
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Lookup",
                                                    "name": "lookup",
                                                    "rangeURI": undefined,
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Mothers",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": true,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Fathersdaf",
                                                "lookupContainer": undefined,
                                                "lookupQuery": "NIMHDemographics",
                                                "lookupSchema": "lists",
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Father",
                                                "PHI": "NotPHI",
                                                "propertyId": 26824,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14805,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": undefined,
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Lookup",
                                                    "name": "lookup",
                                                    "rangeURI": undefined,
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Father",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Species",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Species",
                                                "PHI": "NotPHI",
                                                "propertyId": 26825,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14806,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Species",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Image",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Image",
                                                "PHI": "NotPHI",
                                                "propertyId": 26826,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Attachment",
                                                  "name": "attachment",
                                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Attachment",
                                                    "name": "attachment",
                                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Image",
                                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": true,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Occupation",
                                                "lookupContainer": undefined,
                                                "lookupQuery": "LookUpToSampleset2",
                                                "lookupSchema": "samples",
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Occupation",
                                                "PHI": "NotPHI",
                                                "propertyId": 26827,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14807,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": undefined,
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Lookup",
                                                    "name": "lookup",
                                                    "rangeURI": undefined,
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Occupation",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Marital Status",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "MaritalStatus",
                                                "PHI": "NotPHI",
                                                "propertyId": 26828,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14808,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "MaritalStatus",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Current Status",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "CurrentStatus",
                                                "PHI": "NotPHI",
                                                "propertyId": 26829,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14809,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "CurrentStatus",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Gender",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Gender",
                                                "PHI": "NotPHI",
                                                "propertyId": 26830,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14810,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Gender",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Birth Date",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "BirthDate",
                                                "PHI": "NotPHI",
                                                "propertyId": 26831,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 100,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "BirthDate",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Cartoon Available",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "CartoonAvailable",
                                                "PHI": "NotPHI",
                                                "propertyId": 26832,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 10,
                                                "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Boolean",
                                                  "name": "boolean",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                  "alternateRangeURI": "xsd:boolean",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Boolean",
                                                    "name": "boolean",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                    "alternateRangeURI": "xsd:boolean",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "CartoonAvailable",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": null,
                                            "domainKindName": "List",
                                            "schemaName": null,
                                            "queryName": null,
                                            "disabledSystemFields": undefined,
                                          },
                                          "entityId": "ea23d3e0-acd6-1037-8e6d-25f311da6f8b",
                                          "createdBy": 1005,
                                          "created": 1567119770398,
                                          "modifiedBy": 1005,
                                          "modified": 1581358929514,
                                          "containerId": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                          "name": "NIMHDemographics",
                                          "domainKindName": undefined,
                                          "description": null,
                                          "lastIndexed": 1581358687000,
                                          "keyName": "SubjectID",
                                          "titleColumn": "Name",
                                          "domainId": 2280,
                                          "keyType": "Integer",
                                          "discussionSetting": 1,
                                          "allowDelete": true,
                                          "allowUpload": true,
                                          "allowExport": true,
                                          "entireListIndex": false,
                                          "entireListIndexSetting": 0,
                                          "entireListTitleTemplate": null,
                                          "entireListBodySetting": 1,
                                          "entireListBodyTemplate": null,
                                          "eachItemIndex": true,
                                          "eachItemTitleTemplate": "dafsfadsfdsa",
                                          "eachItemBodySetting": 0,
                                          "eachItemBodyTemplate": null,
                                          "fileAttachmentIndex": false,
                                          "listId": 277,
                                          "discussionSettingEnum": "OnePerItem",
                                          "containerPath": "/Tutorials/Lists",
                                          "category": undefined,
                                        }
                                      }
                                      onInputChange={[Function]}
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        md={7}
                                        xs={12}
                                      >
                                        <div
                                          className="col-md-7 col-xs-12"
                                        >
                                          <SectionHeading
                                            title="Basic Properties"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Basic Properties
                                            </div>
                                          </SectionHeading>
                                          <Memo()
                                            model={
                                              Immutable.Record {
                                                "exception": undefined,
                                                "domain": Immutable.Record {
                                                  "name": "NIMHDemographics",
                                                  "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                                  "description": null,
                                                  "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
                                                  "domainId": 2280,
                                                  "allowFileLinkProperties": false,
                                                  "allowAttachmentProperties": true,
                                                  "allowFlagProperties": true,
                                                  "allowSampleSubjectProperties": true,
                                                  "allowTextChoiceProperties": true,
                                                  "allowTimepointProperties": false,
                                                  "showDefaultValueSettings": true,
                                                  "defaultDefaultValueType": "FIXED_EDITABLE",
                                                  "defaultValueOptions": Immutable.List [
                                                    "FIXED_EDITABLE",
                                                    "LAST_ENTERED",
                                                  ],
                                                  "fields": Immutable.List [
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Subject ID",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "SubjectID",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26820,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": true,
                                                      "scale": 10,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "SubjectID",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": true,
                                                      "lockType": "PKLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Name",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Name",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26821,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14802,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Name",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Family",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Family",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26822,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14803,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Family",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": true,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Mother'",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": "NIMHDemographics",
                                                      "lookupSchema": "lists",
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Mothers",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26823,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14804,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Mothers",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": true,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Fathersdaf",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": "NIMHDemographics",
                                                      "lookupSchema": "lists",
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Father",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26824,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14805,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Father",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Species",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Species",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26825,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14806,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Species",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Image",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Image",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26826,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Image",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": true,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Occupation",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": "LookUpToSampleset2",
                                                      "lookupSchema": "samples",
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Occupation",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26827,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14807,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Occupation",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Marital Status",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "MaritalStatus",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26828,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14808,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "MaritalStatus",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Current Status",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "CurrentStatus",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26829,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14809,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "CurrentStatus",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Gender",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Gender",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26830,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14810,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Gender",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Birth Date",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "BirthDate",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26831,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 100,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "BirthDate",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Cartoon Available",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "CartoonAvailable",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26832,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 10,
                                                      "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "CartoonAvailable",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                  ],
                                                  "indices": Immutable.List [],
                                                  "domainException": undefined,
                                                  "mandatoryFieldNames": Immutable.List [],
                                                  "reservedFieldNames": Immutable.List [],
                                                  "newDesignFields": undefined,
                                                  "instructions": null,
                                                  "domainKindName": "List",
                                                  "schemaName": null,
                                                  "queryName": null,
                                                  "disabledSystemFields": undefined,
                                                },
                                                "entityId": "ea23d3e0-acd6-1037-8e6d-25f311da6f8b",
                                                "createdBy": 1005,
                                                "created": 1567119770398,
                                                "modifiedBy": 1005,
                                                "modified": 1581358929514,
                                                "containerId": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                                "name": "NIMHDemographics",
                                                "domainKindName": undefined,
                                                "description": null,
                                                "lastIndexed": 1581358687000,
                                                "keyName": "SubjectID",
                                                "titleColumn": "Name",
                                                "domainId": 2280,
                                                "keyType": "Integer",
                                                "discussionSetting": 1,
                                                "allowDelete": true,
                                                "allowUpload": true,
                                                "allowExport": true,
                                                "entireListIndex": false,
                                                "entireListIndexSetting": 0,
                                                "entireListTitleTemplate": null,
                                                "entireListBodySetting": 1,
                                                "entireListBodyTemplate": null,
                                                "eachItemIndex": true,
                                                "eachItemTitleTemplate": "dafsfadsfdsa",
                                                "eachItemBodySetting": 0,
                                                "eachItemBodyTemplate": null,
                                                "fileAttachmentIndex": false,
                                                "listId": 277,
                                                "discussionSettingEnum": "OnePerItem",
                                                "containerPath": "/Tutorials/Lists",
                                                "category": undefined,
                                              }
                                            }
                                            onInputChange={[Function]}
                                          >
                                            <Row
                                              bsClass="row"
                                              className="margin-top"
                                              componentClass="div"
                                            >
                                              <div
                                                className="margin-top row"
                                              >
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  lg={2}
                                                  xs={3}
                                                >
                                                  <div
                                                    className="col-lg-2 col-xs-3"
                                                  >
                                                    <DomainFieldLabel
                                                      helpTipBody="The name for this list. Note that this can be changed after list creation."
                                                      label="Name"
                                                      required={true}
                                                    >
                                                      <span
                                                        className="domain-no-wrap"
                                                      >
                                                        Name
                                                        <Component
                                                          id="tooltip"
                                                          required={true}
                                                          title="Name"
                                                        >
                                                          <span
                                                            className="label-help-target"
                                                            onMouseOut={[Function]}
                                                            onMouseOver={[Function]}
                                                          >
                                                            <span
                                                              className="label-help-icon fa fa-question-circle"
                                                            />
                                                            <Overlay
                                                              animation={[Function]}
                                                              placement="right"
                                                              rootClose={false}
                                                              show={false}
                                                            >
                                                              <Overlay
                                                                placement="right"
                                                                rootClose={false}
                                                                show={false}
                                                                transition={[Function]}
                                                              />
                                                            </Overlay>
                                                          </span>
                                                        </Component>
                                                         *
                                                      </span>
                                                    </DomainFieldLabel>
                                                  </div>
                                                </Col>
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  lg={8}
                                                  xs={9}
                                                >
                                                  <div
                                                    className="col-lg-8 col-xs-9"
                                                  >
                                                    <FormControl
                                                      bsClass="form-control"
                                                      componentClass="input"
                                                      id="name"
                                                      onChange={[Function]}
                                                      placeholder="Enter a name for this list"
                                                      type="text"
                                                      value="NIMHDemographics"
                                                    >
                                                      <input
                                                        className="form-control"
                                                        id="name"
                                                        onChange={[Function]}
                                                        placeholder="Enter a name for this list"
                                                        type="text"
                                                        value="NIMHDemographics"
                                                      />
                                                    </FormControl>
                                                  </div>
                                                </Col>
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  lg={2}
                                                >
                                                  <div
                                                    className="col-lg-2"
                                                  />
                                                </Col>
                                              </div>
                                            </Row>
                                          </Memo()>
                                          <Memo()
                                            model={
                                              Immutable.Record {
                                                "exception": undefined,
                                                "domain": Immutable.Record {
                                                  "name": "NIMHDemographics",
                                                  "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                                  "description": null,
                                                  "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
                                                  "domainId": 2280,
                                                  "allowFileLinkProperties": false,
                                                  "allowAttachmentProperties": true,
                                                  "allowFlagProperties": true,
                                                  "allowSampleSubjectProperties": true,
                                                  "allowTextChoiceProperties": true,
                                                  "allowTimepointProperties": false,
                                                  "showDefaultValueSettings": true,
                                                  "defaultDefaultValueType": "FIXED_EDITABLE",
                                                  "defaultValueOptions": Immutable.List [
                                                    "FIXED_EDITABLE",
                                                    "LAST_ENTERED",
                                                  ],
                                                  "fields": Immutable.List [
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Subject ID",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "SubjectID",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26820,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": true,
                                                      "scale": 10,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "SubjectID",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": true,
                                                      "lockType": "PKLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Name",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Name",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26821,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14802,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Name",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Family",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Family",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26822,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14803,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Family",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": true,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Mother'",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": "NIMHDemographics",
                                                      "lookupSchema": "lists",
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Mothers",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26823,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14804,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Mothers",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": true,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Fathersdaf",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": "NIMHDemographics",
                                                      "lookupSchema": "lists",
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Father",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26824,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14805,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Father",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Species",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Species",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26825,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14806,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Species",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Image",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Image",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26826,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Image",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": true,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Occupation",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": "LookUpToSampleset2",
                                                      "lookupSchema": "samples",
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Occupation",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26827,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14807,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Occupation",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Marital Status",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "MaritalStatus",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26828,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14808,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "MaritalStatus",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Current Status",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "CurrentStatus",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26829,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14809,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "CurrentStatus",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Gender",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Gender",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26830,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14810,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Gender",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Birth Date",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "BirthDate",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26831,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 100,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "BirthDate",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Cartoon Available",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "CartoonAvailable",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26832,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 10,
                                                      "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "CartoonAvailable",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                  ],
                                                  "indices": Immutable.List [],
                                                  "domainException": undefined,
                                                  "mandatoryFieldNames": Immutable.List [],
                                                  "reservedFieldNames": Immutable.List [],
                                                  "newDesignFields": undefined,
                                                  "instructions": null,
                                                  "domainKindName": "List",
                                                  "schemaName": null,
                                                  "queryName": null,
                                                  "disabledSystemFields": undefined,
                                                },
                                                "entityId": "ea23d3e0-acd6-1037-8e6d-25f311da6f8b",
                                                "createdBy": 1005,
                                                "created": 1567119770398,
                                                "modifiedBy": 1005,
                                                "modified": 1581358929514,
                                                "containerId": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                                "name": "NIMHDemographics",
                                                "domainKindName": undefined,
                                                "description": null,
                                                "lastIndexed": 1581358687000,
                                                "keyName": "SubjectID",
                                                "titleColumn": "Name",
                                                "domainId": 2280,
                                                "keyType": "Integer",
                                                "discussionSetting": 1,
                                                "allowDelete": true,
                                                "allowUpload": true,
                                                "allowExport": true,
                                                "entireListIndex": false,
                                                "entireListIndexSetting": 0,
                                                "entireListTitleTemplate": null,
                                                "entireListBodySetting": 1,
                                                "entireListBodyTemplate": null,
                                                "eachItemIndex": true,
                                                "eachItemTitleTemplate": "dafsfadsfdsa",
                                                "eachItemBodySetting": 0,
                                                "eachItemBodyTemplate": null,
                                                "fileAttachmentIndex": false,
                                                "listId": 277,
                                                "discussionSettingEnum": "OnePerItem",
                                                "containerPath": "/Tutorials/Lists",
                                                "category": undefined,
                                              }
                                            }
                                            onInputChange={[Function]}
                                          >
                                            <Row
                                              bsClass="row"
                                              className="margin-top"
                                              componentClass="div"
                                            >
                                              <div
                                                className="margin-top row"
                                              >
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  lg={2}
                                                  xs={3}
                                                >
                                                  <div
                                                    className="col-lg-2 col-xs-3"
                                                  >
                                                    <DomainFieldLabel
                                                      label="Description"
                                                    >
                                                      <span
                                                        className="domain-no-wrap"
                                                      >
                                                        Description
                                                      </span>
                                                    </DomainFieldLabel>
                                                  </div>
                                                </Col>
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  lg={8}
                                                  xs={9}
                                                >
                                                  <div
                                                    className="col-lg-8 col-xs-9"
                                                  >
                                                    <textarea
                                                      className="form-control"
                                                      id="description"
                                                      onChange={[Function]}
                                                      value=""
                                                    />
                                                  </div>
                                                </Col>
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  lg={2}
                                                >
                                                  <div
                                                    className="col-lg-2"
                                                  />
                                                </Col>
                                              </div>
                                            </Row>
                                          </Memo()>
                                        </div>
                                      </Col>
                                    </Memo()>
                                    <AllowableActions
                                      model={
                                        Immutable.Record {
                                          "exception": undefined,
                                          "domain": Immutable.Record {
                                            "name": "NIMHDemographics",
                                            "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                            "description": null,
                                            "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
                                            "domainId": 2280,
                                            "allowFileLinkProperties": false,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "allowSampleSubjectProperties": true,
                                            "allowTextChoiceProperties": true,
                                            "allowTimepointProperties": false,
                                            "showDefaultValueSettings": true,
                                            "defaultDefaultValueType": "FIXED_EDITABLE",
                                            "defaultValueOptions": Immutable.List [
                                              "FIXED_EDITABLE",
                                              "LAST_ENTERED",
                                            ],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Subject ID",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "SubjectID",
                                                "PHI": "NotPHI",
                                                "propertyId": 26820,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": true,
                                                "scale": 10,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "SubjectID",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": true,
                                                "lockType": "PKLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Name",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Name",
                                                "PHI": "NotPHI",
                                                "propertyId": 26821,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14802,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Name",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Family",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Family",
                                                "PHI": "NotPHI",
                                                "propertyId": 26822,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14803,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Family",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": true,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Mother'",
                                                "lookupContainer": undefined,
                                                "lookupQuery": "NIMHDemographics",
                                                "lookupSchema": "lists",
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Mothers",
                                                "PHI": "NotPHI",
                                                "propertyId": 26823,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14804,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": undefined,
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Lookup",
                                                    "name": "lookup",
                                                    "rangeURI": undefined,
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Mothers",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": true,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Fathersdaf",
                                                "lookupContainer": undefined,
                                                "lookupQuery": "NIMHDemographics",
                                                "lookupSchema": "lists",
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Father",
                                                "PHI": "NotPHI",
                                                "propertyId": 26824,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14805,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": undefined,
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Lookup",
                                                    "name": "lookup",
                                                    "rangeURI": undefined,
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Father",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Species",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Species",
                                                "PHI": "NotPHI",
                                                "propertyId": 26825,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14806,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Species",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Image",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Image",
                                                "PHI": "NotPHI",
                                                "propertyId": 26826,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Attachment",
                                                  "name": "attachment",
                                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Attachment",
                                                    "name": "attachment",
                                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Image",
                                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": true,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Occupation",
                                                "lookupContainer": undefined,
                                                "lookupQuery": "LookUpToSampleset2",
                                                "lookupSchema": "samples",
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Occupation",
                                                "PHI": "NotPHI",
                                                "propertyId": 26827,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14807,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": undefined,
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Lookup",
                                                    "name": "lookup",
                                                    "rangeURI": undefined,
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Occupation",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Marital Status",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "MaritalStatus",
                                                "PHI": "NotPHI",
                                                "propertyId": 26828,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14808,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "MaritalStatus",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Current Status",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "CurrentStatus",
                                                "PHI": "NotPHI",
                                                "propertyId": 26829,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14809,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "CurrentStatus",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Gender",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Gender",
                                                "PHI": "NotPHI",
                                                "propertyId": 26830,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14810,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Gender",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Birth Date",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "BirthDate",
                                                "PHI": "NotPHI",
                                                "propertyId": 26831,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 100,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "BirthDate",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Cartoon Available",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "CartoonAvailable",
                                                "PHI": "NotPHI",
                                                "propertyId": 26832,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 10,
                                                "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Boolean",
                                                  "name": "boolean",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                  "alternateRangeURI": "xsd:boolean",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Boolean",
                                                    "name": "boolean",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                    "alternateRangeURI": "xsd:boolean",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "CartoonAvailable",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": null,
                                            "domainKindName": "List",
                                            "schemaName": null,
                                            "queryName": null,
                                            "disabledSystemFields": undefined,
                                          },
                                          "entityId": "ea23d3e0-acd6-1037-8e6d-25f311da6f8b",
                                          "createdBy": 1005,
                                          "created": 1567119770398,
                                          "modifiedBy": 1005,
                                          "modified": 1581358929514,
                                          "containerId": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                          "name": "NIMHDemographics",
                                          "domainKindName": undefined,
                                          "description": null,
                                          "lastIndexed": 1581358687000,
                                          "keyName": "SubjectID",
                                          "titleColumn": "Name",
                                          "domainId": 2280,
                                          "keyType": "Integer",
                                          "discussionSetting": 1,
                                          "allowDelete": true,
                                          "allowUpload": true,
                                          "allowExport": true,
                                          "entireListIndex": false,
                                          "entireListIndexSetting": 0,
                                          "entireListTitleTemplate": null,
                                          "entireListBodySetting": 1,
                                          "entireListBodyTemplate": null,
                                          "eachItemIndex": true,
                                          "eachItemTitleTemplate": "dafsfadsfdsa",
                                          "eachItemBodySetting": 0,
                                          "eachItemBodyTemplate": null,
                                          "fileAttachmentIndex": false,
                                          "listId": 277,
                                          "discussionSettingEnum": "OnePerItem",
                                          "containerPath": "/Tutorials/Lists",
                                          "category": undefined,
                                        }
                                      }
                                      onChange={[Function]}
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        md={3}
                                        xs={12}
                                      >
                                        <div
                                          className="col-md-3 col-xs-12"
                                        >
                                          <SectionHeading
                                            title="Allow these Actions"
                                          >
                                            <div
                                              className="domain-field-section-heading"
                                            >
                                              Allow these Actions
                                            </div>
                                          </SectionHeading>
                                          <Memo()
                                            model={
                                              Immutable.Record {
                                                "exception": undefined,
                                                "domain": Immutable.Record {
                                                  "name": "NIMHDemographics",
                                                  "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                                  "description": null,
                                                  "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
                                                  "domainId": 2280,
                                                  "allowFileLinkProperties": false,
                                                  "allowAttachmentProperties": true,
                                                  "allowFlagProperties": true,
                                                  "allowSampleSubjectProperties": true,
                                                  "allowTextChoiceProperties": true,
                                                  "allowTimepointProperties": false,
                                                  "showDefaultValueSettings": true,
                                                  "defaultDefaultValueType": "FIXED_EDITABLE",
                                                  "defaultValueOptions": Immutable.List [
                                                    "FIXED_EDITABLE",
                                                    "LAST_ENTERED",
                                                  ],
                                                  "fields": Immutable.List [
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Subject ID",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "SubjectID",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26820,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": true,
                                                      "scale": 10,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Integer",
                                                        "name": "int",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": "xsd:int",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "SubjectID",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": true,
                                                      "lockType": "PKLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Name",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Name",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26821,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14802,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Name",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Family",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Family",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26822,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14803,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Family",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": true,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Mother'",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": "NIMHDemographics",
                                                      "lookupSchema": "lists",
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Mothers",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26823,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14804,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Mothers",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": true,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Fathersdaf",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": "NIMHDemographics",
                                                      "lookupSchema": "lists",
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Father",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26824,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14805,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Father",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Species",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Species",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26825,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14806,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Species",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Image",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Image",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26826,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Attachment",
                                                        "name": "attachment",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Image",
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": true,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Occupation",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": "LookUpToSampleset2",
                                                      "lookupSchema": "samples",
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Occupation",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26827,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14807,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": undefined,
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Occupation",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Marital Status",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "MaritalStatus",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26828,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14808,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "MaritalStatus",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Current Status",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "CurrentStatus",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26829,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14809,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "CurrentStatus",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Gender",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "Gender",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26830,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                                                      "propertyValidators": [
                                                        {
                                                          "description": null,
                                                          "errorMessage": null,
                                                          "expression": "~lte=4000",
                                                          "name": "Text Length",
                                                          "new": true,
                                                          "properties": {},
                                                          "rowId": 14810,
                                                          "type": "Length",
                                                        },
                                                      ],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 4000,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Text",
                                                        "name": "string",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": "xsd:string",
                                                        "shortDisplay": "String",
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "Gender",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Birth Date",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "BirthDate",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26831,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 100,
                                                      "URL": null,
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Date Time",
                                                        "name": "dateTime",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": "xsd:dateTime",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "BirthDate",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                    Immutable.Record {
                                                      "conceptURI": null,
                                                      "conditionalFormats": Immutable.List [],
                                                      "defaultScale": "LINEAR",
                                                      "defaultValueType": null,
                                                      "defaultValue": null,
                                                      "defaultDisplayValue": "[none]",
                                                      "description": null,
                                                      "dimension": false,
                                                      "excludeFromShifting": false,
                                                      "format": null,
                                                      "hidden": false,
                                                      "importAliases": null,
                                                      "label": "Cartoon Available",
                                                      "lookupContainer": undefined,
                                                      "lookupQuery": undefined,
                                                      "lookupSchema": undefined,
                                                      "lookupValidator": undefined,
                                                      "measure": false,
                                                      "mvEnabled": false,
                                                      "name": "CartoonAvailable",
                                                      "PHI": "NotPHI",
                                                      "propertyId": 26832,
                                                      "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                                                      "propertyValidators": [],
                                                      "rangeValidators": Immutable.List [],
                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                      "regexValidators": Immutable.List [],
                                                      "textChoiceValidator": undefined,
                                                      "recommendedVariable": false,
                                                      "required": false,
                                                      "scale": 10,
                                                      "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                      "shownInDetailsView": true,
                                                      "shownInInsertView": true,
                                                      "shownInUpdateView": true,
                                                      "visible": true,
                                                      "dataType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Boolean",
                                                        "name": "boolean",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": "xsd:boolean",
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "lookupQueryValue": undefined,
                                                      "lookupType": Immutable.Record {
                                                        "conceptURI": undefined,
                                                        "display": "Lookup",
                                                        "name": "lookup",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "alternateRangeURI": undefined,
                                                        "shortDisplay": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupQuery": undefined,
                                                      },
                                                      "original": {
                                                        "conceptURI": null,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "name": "CartoonAvailable",
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                      },
                                                      "updatedField": false,
                                                      "isPrimaryKey": false,
                                                      "lockType": "NotLocked",
                                                      "wrappedColumnName": undefined,
                                                      "disablePhiLevel": false,
                                                      "lockExistingField": false,
                                                      "sourceOntology": undefined,
                                                      "conceptSubtree": undefined,
                                                      "conceptLabelColumn": undefined,
                                                      "conceptImportColumn": undefined,
                                                      "principalConceptCode": undefined,
                                                      "derivationDataScope": undefined,
                                                      "selected": false,
                                                      "scannable": false,
                                                    },
                                                  ],
                                                  "indices": Immutable.List [],
                                                  "domainException": undefined,
                                                  "mandatoryFieldNames": Immutable.List [],
                                                  "reservedFieldNames": Immutable.List [],
                                                  "newDesignFields": undefined,
                                                  "instructions": null,
                                                  "domainKindName": "List",
                                                  "schemaName": null,
                                                  "queryName": null,
                                                  "disabledSystemFields": undefined,
                                                },
                                                "entityId": "ea23d3e0-acd6-1037-8e6d-25f311da6f8b",
                                                "createdBy": 1005,
                                                "created": 1567119770398,
                                                "modifiedBy": 1005,
                                                "modified": 1581358929514,
                                                "containerId": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                                "name": "NIMHDemographics",
                                                "domainKindName": undefined,
                                                "description": null,
                                                "lastIndexed": 1581358687000,
                                                "keyName": "SubjectID",
                                                "titleColumn": "Name",
                                                "domainId": 2280,
                                                "keyType": "Integer",
                                                "discussionSetting": 1,
                                                "allowDelete": true,
                                                "allowUpload": true,
                                                "allowExport": true,
                                                "entireListIndex": false,
                                                "entireListIndexSetting": 0,
                                                "entireListTitleTemplate": null,
                                                "entireListBodySetting": 1,
                                                "entireListBodyTemplate": null,
                                                "eachItemIndex": true,
                                                "eachItemTitleTemplate": "dafsfadsfdsa",
                                                "eachItemBodySetting": 0,
                                                "eachItemBodyTemplate": null,
                                                "fileAttachmentIndex": false,
                                                "listId": 277,
                                                "discussionSettingEnum": "OnePerItem",
                                                "containerPath": "/Tutorials/Lists",
                                                "category": undefined,
                                              }
                                            }
                                            onChange={[Function]}
                                          >
                                            <div
                                              className="list__properties__allowable-actions"
                                            >
                                              <CheckBoxRow
                                                checked={true}
                                                name="allowDelete"
                                                onChange={[Function]}
                                                text="Delete"
                                              >
                                                <div
                                                  className="list__properties__checkbox-row"
                                                >
                                                  <div
                                                    className="form-group"
                                                  >
                                                    <label>
                                                      <input
                                                        checked={true}
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                      />
                                                      Delete
                                                    </label>
                                                  </div>
                                                </div>
                                              </CheckBoxRow>
                                              <CheckBoxRow
                                                checked={true}
                                                name="allowUpload"
                                                onChange={[Function]}
                                                text="Upload"
                                              >
                                                <div
                                                  className="list__properties__checkbox-row"
                                                >
                                                  <div
                                                    className="form-group"
                                                  >
                                                    <label>
                                                      <input
                                                        checked={true}
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                      />
                                                      Upload
                                                    </label>
                                                  </div>
                                                </div>
                                              </CheckBoxRow>
                                              <CheckBoxRow
                                                checked={true}
                                                name="allowExport"
                                                onChange={[Function]}
                                                text="Export & Print"
                                              >
                                                <div
                                                  className="list__properties__checkbox-row"
                                                >
                                                  <div
                                                    className="form-group"
                                                  >
                                                    <label>
                                                      <input
                                                        checked={true}
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                      />
                                                      Export & Print
                                                    </label>
                                                  </div>
                                                </div>
                                              </CheckBoxRow>
                                            </div>
                                          </Memo()>
                                        </div>
                                      </Col>
                                    </AllowableActions>
                                    <AdvancedSettings
                                      applyAdvancedProperties={[Function]}
                                      model={
                                        Immutable.Record {
                                          "exception": undefined,
                                          "domain": Immutable.Record {
                                            "name": "NIMHDemographics",
                                            "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                            "description": null,
                                            "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
                                            "domainId": 2280,
                                            "allowFileLinkProperties": false,
                                            "allowAttachmentProperties": true,
                                            "allowFlagProperties": true,
                                            "allowSampleSubjectProperties": true,
                                            "allowTextChoiceProperties": true,
                                            "allowTimepointProperties": false,
                                            "showDefaultValueSettings": true,
                                            "defaultDefaultValueType": "FIXED_EDITABLE",
                                            "defaultValueOptions": Immutable.List [
                                              "FIXED_EDITABLE",
                                              "LAST_ENTERED",
                                            ],
                                            "fields": Immutable.List [
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Subject ID",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "SubjectID",
                                                "PHI": "NotPHI",
                                                "propertyId": 26820,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": true,
                                                "scale": 10,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Integer",
                                                  "name": "int",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": "xsd:int",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Integer",
                                                    "name": "int",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                    "alternateRangeURI": "xsd:int",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "SubjectID",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": true,
                                                "lockType": "PKLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Name",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Name",
                                                "PHI": "NotPHI",
                                                "propertyId": 26821,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14802,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Name",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Family",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Family",
                                                "PHI": "NotPHI",
                                                "propertyId": 26822,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14803,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Family",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": true,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Mother'",
                                                "lookupContainer": undefined,
                                                "lookupQuery": "NIMHDemographics",
                                                "lookupSchema": "lists",
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Mothers",
                                                "PHI": "NotPHI",
                                                "propertyId": 26823,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14804,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": undefined,
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Lookup",
                                                    "name": "lookup",
                                                    "rangeURI": undefined,
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Mothers",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": true,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Fathersdaf",
                                                "lookupContainer": undefined,
                                                "lookupQuery": "NIMHDemographics",
                                                "lookupSchema": "lists",
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Father",
                                                "PHI": "NotPHI",
                                                "propertyId": 26824,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14805,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": undefined,
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Lookup",
                                                    "name": "lookup",
                                                    "rangeURI": undefined,
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Father",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Species",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Species",
                                                "PHI": "NotPHI",
                                                "propertyId": 26825,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14806,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Species",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Image",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Image",
                                                "PHI": "NotPHI",
                                                "propertyId": 26826,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Attachment",
                                                  "name": "attachment",
                                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Attachment",
                                                    "name": "attachment",
                                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Image",
                                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": true,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Occupation",
                                                "lookupContainer": undefined,
                                                "lookupQuery": "LookUpToSampleset2",
                                                "lookupSchema": "samples",
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Occupation",
                                                "PHI": "NotPHI",
                                                "propertyId": 26827,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14807,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": undefined,
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Lookup",
                                                    "name": "lookup",
                                                    "rangeURI": undefined,
                                                    "alternateRangeURI": undefined,
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Occupation",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Marital Status",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "MaritalStatus",
                                                "PHI": "NotPHI",
                                                "propertyId": 26828,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14808,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "MaritalStatus",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Current Status",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "CurrentStatus",
                                                "PHI": "NotPHI",
                                                "propertyId": 26829,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14809,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "CurrentStatus",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Gender",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "Gender",
                                                "PHI": "NotPHI",
                                                "propertyId": 26830,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                                                "propertyValidators": [
                                                  {
                                                    "description": null,
                                                    "errorMessage": null,
                                                    "expression": "~lte=4000",
                                                    "name": "Text Length",
                                                    "new": true,
                                                    "properties": {},
                                                    "rowId": 14810,
                                                    "type": "Length",
                                                  },
                                                ],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 4000,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Text",
                                                  "name": "string",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": "xsd:string",
                                                  "shortDisplay": "String",
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Text",
                                                    "name": "string",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                    "alternateRangeURI": "xsd:string",
                                                    "shortDisplay": "String",
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "Gender",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Birth Date",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "BirthDate",
                                                "PHI": "NotPHI",
                                                "propertyId": 26831,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 100,
                                                "URL": null,
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Date Time",
                                                  "name": "dateTime",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": "xsd:dateTime",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Date Time",
                                                    "name": "dateTime",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                    "alternateRangeURI": "xsd:dateTime",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "BirthDate",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                              Immutable.Record {
                                                "conceptURI": null,
                                                "conditionalFormats": Immutable.List [],
                                                "defaultScale": "LINEAR",
                                                "defaultValueType": null,
                                                "defaultValue": null,
                                                "defaultDisplayValue": "[none]",
                                                "description": null,
                                                "dimension": false,
                                                "excludeFromShifting": false,
                                                "format": null,
                                                "hidden": false,
                                                "importAliases": null,
                                                "label": "Cartoon Available",
                                                "lookupContainer": undefined,
                                                "lookupQuery": undefined,
                                                "lookupSchema": undefined,
                                                "lookupValidator": undefined,
                                                "measure": false,
                                                "mvEnabled": false,
                                                "name": "CartoonAvailable",
                                                "PHI": "NotPHI",
                                                "propertyId": 26832,
                                                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                                                "propertyValidators": [],
                                                "rangeValidators": Immutable.List [],
                                                "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                "regexValidators": Immutable.List [],
                                                "textChoiceValidator": undefined,
                                                "recommendedVariable": false,
                                                "required": false,
                                                "scale": 10,
                                                "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                "shownInDetailsView": true,
                                                "shownInInsertView": true,
                                                "shownInUpdateView": true,
                                                "visible": true,
                                                "dataType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Boolean",
                                                  "name": "boolean",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                  "alternateRangeURI": "xsd:boolean",
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "lookupQueryValue": undefined,
                                                "lookupType": Immutable.Record {
                                                  "conceptURI": undefined,
                                                  "display": "Lookup",
                                                  "name": "lookup",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                  "alternateRangeURI": undefined,
                                                  "shortDisplay": undefined,
                                                  "lookupSchema": undefined,
                                                  "lookupQuery": undefined,
                                                },
                                                "original": {
                                                  "conceptURI": null,
                                                  "dataType": Immutable.Record {
                                                    "conceptURI": undefined,
                                                    "display": "Boolean",
                                                    "name": "boolean",
                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                    "alternateRangeURI": "xsd:boolean",
                                                    "shortDisplay": undefined,
                                                    "lookupSchema": undefined,
                                                    "lookupQuery": undefined,
                                                  },
                                                  "name": "CartoonAvailable",
                                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                },
                                                "updatedField": false,
                                                "isPrimaryKey": false,
                                                "lockType": "NotLocked",
                                                "wrappedColumnName": undefined,
                                                "disablePhiLevel": false,
                                                "lockExistingField": false,
                                                "sourceOntology": undefined,
                                                "conceptSubtree": undefined,
                                                "conceptLabelColumn": undefined,
                                                "conceptImportColumn": undefined,
                                                "principalConceptCode": undefined,
                                                "derivationDataScope": undefined,
                                                "selected": false,
                                                "scannable": false,
                                              },
                                            ],
                                            "indices": Immutable.List [],
                                            "domainException": undefined,
                                            "mandatoryFieldNames": Immutable.List [],
                                            "reservedFieldNames": Immutable.List [],
                                            "newDesignFields": undefined,
                                            "instructions": null,
                                            "domainKindName": "List",
                                            "schemaName": null,
                                            "queryName": null,
                                            "disabledSystemFields": undefined,
                                          },
                                          "entityId": "ea23d3e0-acd6-1037-8e6d-25f311da6f8b",
                                          "createdBy": 1005,
                                          "created": 1567119770398,
                                          "modifiedBy": 1005,
                                          "modified": 1581358929514,
                                          "containerId": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                                          "name": "NIMHDemographics",
                                          "domainKindName": undefined,
                                          "description": null,
                                          "lastIndexed": 1581358687000,
                                          "keyName": "SubjectID",
                                          "titleColumn": "Name",
                                          "domainId": 2280,
                                          "keyType": "Integer",
                                          "discussionSetting": 1,
                                          "allowDelete": true,
                                          "allowUpload": true,
                                          "allowExport": true,
                                          "entireListIndex": false,
                                          "entireListIndexSetting": 0,
                                          "entireListTitleTemplate": null,
                                          "entireListBodySetting": 1,
                                          "entireListBodyTemplate": null,
                                          "eachItemIndex": true,
                                          "eachItemTitleTemplate": "dafsfadsfdsa",
                                          "eachItemBodySetting": 0,
                                          "eachItemBodyTemplate": null,
                                          "fileAttachmentIndex": false,
                                          "listId": 277,
                                          "discussionSettingEnum": "OnePerItem",
                                          "containerPath": "/Tutorials/Lists",
                                          "category": undefined,
                                        }
                                      }
                                      title="Advanced Settings"
                                    >
                                      <Button
                                        active={false}
                                        block={false}
                                        bsClass="btn"
                                        bsStyle="default"
                                        className="domain-field-float-right"
                                        disabled={false}
                                        onClick={[Function]}
                                      >
                                        <button
                                          className="domain-field-float-right btn btn-default"
                                          disabled={false}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          Advanced Settings
                                        </button>
                                      </Button>
                                      <Modal
                                        animation={true}
                                        autoFocus={true}
                                        backdrop={true}
                                        bsClass="modal"
                                        dialogComponentClass={[Function]}
                                        enforceFocus={true}
                                        keyboard={true}
                                        manager={
                                          ModalManager {
                                            "add": [Function],
                                            "containers": [],
                                            "data": [],
                                            "handleContainerOverflow": true,
                                            "hideSiblingNodes": true,
                                            "isTopModal": [Function],
                                            "modals": [],
                                            "remove": [Function],
                                          }
                                        }
                                        onHide={[Function]}
                                        renderBackdrop={[Function]}
                                        restoreFocus={true}
                                        show={false}
                                      >
                                        <Modal
                                          autoFocus={true}
                                          backdrop={true}
                                          backdropClassName="modal-backdrop"
                                          backdropTransition={[Function]}
                                          containerClassName="modal-open"
                                          enforceFocus={true}
                                          keyboard={true}
                                          manager={
                                            ModalManager {
                                              "add": [Function],
                                              "containers": [],
                                              "data": [],
                                              "handleContainerOverflow": true,
                                              "hideSiblingNodes": true,
                                              "isTopModal": [Function],
                                              "modals": [],
                                              "remove": [Function],
                                            }
                                          }
                                          onEntering={[Function]}
                                          onExited={[Function]}
                                          onHide={[Function]}
                                          onMouseUp={[Function]}
                                          renderBackdrop={[Function]}
                                          restoreFocus={true}
                                          show={false}
                                          transition={[Function]}
                                        />
                                      </Modal>
                                    </AdvancedSettings>
                                  </form>
                                </Form>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </BasePropertiesPanel>
        </ListPropertiesPanelImpl>
      </ComponentWithDomainPropertiesPanelCollapse>
      <DomainForm
        appDomainHeaderRenderer={false}
        controlledCollapse={true}
        domain={
          Immutable.Record {
            "name": "NIMHDemographics",
            "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
            "description": null,
            "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
            "domainId": 2280,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "allowSampleSubjectProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": true,
            "defaultDefaultValueType": "FIXED_EDITABLE",
            "defaultValueOptions": Immutable.List [
              "FIXED_EDITABLE",
              "LAST_ENTERED",
            ],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Subject ID",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "SubjectID",
                "PHI": "NotPHI",
                "propertyId": 26820,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                "propertyValidators": [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": true,
                "scale": 10,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "SubjectID",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                },
                "updatedField": false,
                "isPrimaryKey": true,
                "lockType": "PKLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Name",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Name",
                "PHI": "NotPHI",
                "propertyId": 26821,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14802,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Name",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Family",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Family",
                "PHI": "NotPHI",
                "propertyId": 26822,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14803,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Family",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": true,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Mother'",
                "lookupContainer": undefined,
                "lookupQuery": "NIMHDemographics",
                "lookupSchema": "lists",
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Mothers",
                "PHI": "NotPHI",
                "propertyId": 26823,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14804,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": undefined,
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": undefined,
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Mothers",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": true,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Fathersdaf",
                "lookupContainer": undefined,
                "lookupQuery": "NIMHDemographics",
                "lookupSchema": "lists",
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Father",
                "PHI": "NotPHI",
                "propertyId": 26824,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14805,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": undefined,
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": undefined,
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Father",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Species",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Species",
                "PHI": "NotPHI",
                "propertyId": 26825,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14806,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Species",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Image",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Image",
                "PHI": "NotPHI",
                "propertyId": 26826,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                "propertyValidators": [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Attachment",
                  "name": "attachment",
                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Attachment",
                    "name": "attachment",
                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Image",
                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": true,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Occupation",
                "lookupContainer": undefined,
                "lookupQuery": "LookUpToSampleset2",
                "lookupSchema": "samples",
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Occupation",
                "PHI": "NotPHI",
                "propertyId": 26827,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14807,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": undefined,
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": undefined,
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Occupation",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Marital Status",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "MaritalStatus",
                "PHI": "NotPHI",
                "propertyId": 26828,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14808,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "MaritalStatus",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Current Status",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "CurrentStatus",
                "PHI": "NotPHI",
                "propertyId": 26829,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14809,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "CurrentStatus",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Gender",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "Gender",
                "PHI": "NotPHI",
                "propertyId": 26830,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                "propertyValidators": [
                  {
                    "description": null,
                    "errorMessage": null,
                    "expression": "~lte=4000",
                    "name": "Text Length",
                    "new": true,
                    "properties": {},
                    "rowId": 14810,
                    "type": "Length",
                  },
                ],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 4000,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "Gender",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Birth Date",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "BirthDate",
                "PHI": "NotPHI",
                "propertyId": 26831,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                "propertyValidators": [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 100,
                "URL": null,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "BirthDate",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
              Immutable.Record {
                "conceptURI": null,
                "conditionalFormats": Immutable.List [],
                "defaultScale": "LINEAR",
                "defaultValueType": null,
                "defaultValue": null,
                "defaultDisplayValue": "[none]",
                "description": null,
                "dimension": false,
                "excludeFromShifting": false,
                "format": null,
                "hidden": false,
                "importAliases": null,
                "label": "Cartoon Available",
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": false,
                "mvEnabled": false,
                "name": "CartoonAvailable",
                "PHI": "NotPHI",
                "propertyId": 26832,
                "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                "propertyValidators": [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                "regexValidators": Immutable.List [],
                "textChoiceValidator": undefined,
                "recommendedVariable": false,
                "required": false,
                "scale": 10,
                "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Boolean",
                  "name": "boolean",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                  "alternateRangeURI": "xsd:boolean",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": {
                  "conceptURI": null,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Boolean",
                    "name": "boolean",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                    "alternateRangeURI": "xsd:boolean",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "name": "CartoonAvailable",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
                "wrappedColumnName": undefined,
                "disablePhiLevel": false,
                "lockExistingField": false,
                "sourceOntology": undefined,
                "conceptSubtree": undefined,
                "conceptLabelColumn": undefined,
                "conceptImportColumn": undefined,
                "principalConceptCode": undefined,
                "derivationDataScope": undefined,
                "selected": false,
                "scannable": false,
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": null,
            "domainKindName": "List",
            "schemaName": null,
            "queryName": null,
            "disabledSystemFields": undefined,
          }
        }
        domainIndex={0}
        headerTitle="Fields"
        helpNoun="list"
        helpTopic={null}
        initCollapsed={true}
        key="2280"
        onChange={[Function]}
        onToggle={[Function]}
        panelStatus="COMPLETE"
        setFileImportData={[Function]}
        testMode={true}
        todoIconHelpMsg="This section does not contain any user-defined fields and requires a selection for the Key Field Name property."
        validate={false}
      >
        <LookupProvider>
          <DomainFormImpl
            appDomainHeaderRenderer={false}
            appPropertiesOnly={false}
            controlledCollapse={true}
            domain={
              Immutable.Record {
                "name": "NIMHDemographics",
                "container": "ea23d322-acd6-1037-8e6d-25f311da6f8b",
                "description": null,
                "domainURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics",
                "domainId": 2280,
                "allowFileLinkProperties": false,
                "allowAttachmentProperties": true,
                "allowFlagProperties": true,
                "allowSampleSubjectProperties": true,
                "allowTextChoiceProperties": true,
                "allowTimepointProperties": false,
                "showDefaultValueSettings": true,
                "defaultDefaultValueType": "FIXED_EDITABLE",
                "defaultValueOptions": Immutable.List [
                  "FIXED_EDITABLE",
                  "LAST_ENTERED",
                ],
                "fields": Immutable.List [
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Subject ID",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "SubjectID",
                    "PHI": "NotPHI",
                    "propertyId": 26820,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                    "propertyValidators": [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": true,
                    "scale": 10,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Integer",
                        "name": "int",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                        "alternateRangeURI": "xsd:int",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "SubjectID",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    },
                    "updatedField": false,
                    "isPrimaryKey": true,
                    "lockType": "PKLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Name",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Name",
                    "PHI": "NotPHI",
                    "propertyId": 26821,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14802,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Name",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Family",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Family",
                    "PHI": "NotPHI",
                    "propertyId": 26822,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14803,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Family",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": true,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Mother'",
                    "lookupContainer": undefined,
                    "lookupQuery": "NIMHDemographics",
                    "lookupSchema": "lists",
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Mothers",
                    "PHI": "NotPHI",
                    "propertyId": 26823,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14804,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": undefined,
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Mothers",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": true,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Fathersdaf",
                    "lookupContainer": undefined,
                    "lookupQuery": "NIMHDemographics",
                    "lookupSchema": "lists",
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Father",
                    "PHI": "NotPHI",
                    "propertyId": 26824,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14805,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": undefined,
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Father",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Species",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Species",
                    "PHI": "NotPHI",
                    "propertyId": 26825,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14806,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Species",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Image",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Image",
                    "PHI": "NotPHI",
                    "propertyId": 26826,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                    "propertyValidators": [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Attachment",
                        "name": "attachment",
                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Image",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": true,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Occupation",
                    "lookupContainer": undefined,
                    "lookupQuery": "LookUpToSampleset2",
                    "lookupSchema": "samples",
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Occupation",
                    "PHI": "NotPHI",
                    "propertyId": 26827,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14807,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Lookup",
                        "name": "lookup",
                        "rangeURI": undefined,
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Occupation",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Marital Status",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "MaritalStatus",
                    "PHI": "NotPHI",
                    "propertyId": 26828,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14808,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "MaritalStatus",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Current Status",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "CurrentStatus",
                    "PHI": "NotPHI",
                    "propertyId": 26829,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14809,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "CurrentStatus",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Gender",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "Gender",
                    "PHI": "NotPHI",
                    "propertyId": 26830,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                    "propertyValidators": [
                      {
                        "description": null,
                        "errorMessage": null,
                        "expression": "~lte=4000",
                        "name": "Text Length",
                        "new": true,
                        "properties": {},
                        "rowId": 14810,
                        "type": "Length",
                      },
                    ],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 4000,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "Gender",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Birth Date",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "BirthDate",
                    "PHI": "NotPHI",
                    "propertyId": 26831,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                    "propertyValidators": [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 100,
                    "URL": null,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "BirthDate",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                  Immutable.Record {
                    "conceptURI": null,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": "LINEAR",
                    "defaultValueType": null,
                    "defaultValue": null,
                    "defaultDisplayValue": "[none]",
                    "description": null,
                    "dimension": false,
                    "excludeFromShifting": false,
                    "format": null,
                    "hidden": false,
                    "importAliases": null,
                    "label": "Cartoon Available",
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": false,
                    "mvEnabled": false,
                    "name": "CartoonAvailable",
                    "PHI": "NotPHI",
                    "propertyId": 26832,
                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                    "propertyValidators": [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                    "regexValidators": Immutable.List [],
                    "textChoiceValidator": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": 10,
                    "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Boolean",
                      "name": "boolean",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": "xsd:boolean",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": {
                      "conceptURI": null,
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Boolean",
                        "name": "boolean",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                        "alternateRangeURI": "xsd:boolean",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "name": "CartoonAvailable",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                    "wrappedColumnName": undefined,
                    "disablePhiLevel": false,
                    "lockExistingField": false,
                    "sourceOntology": undefined,
                    "conceptSubtree": undefined,
                    "conceptLabelColumn": undefined,
                    "conceptImportColumn": undefined,
                    "principalConceptCode": undefined,
                    "derivationDataScope": undefined,
                    "selected": false,
                    "scannable": false,
                  },
                ],
                "indices": Immutable.List [],
                "domainException": undefined,
                "mandatoryFieldNames": Immutable.List [],
                "reservedFieldNames": Immutable.List [],
                "newDesignFields": undefined,
                "instructions": null,
                "domainKindName": "List",
                "schemaName": null,
                "queryName": null,
                "disabledSystemFields": undefined,
              }
            }
            domainFormDisplayOptions={
              {
                "disableMvEnabled": false,
                "hideAddFieldsButton": false,
                "hideConditionalFormatting": false,
                "hideFilePropertyType": false,
                "hideImportData": false,
                "hideImportExport": false,
                "hideRequired": false,
                "hideStudyPropertyTypes": false,
                "hideTextOptions": false,
                "hideValidators": false,
                "isDragDisabled": false,
                "phiLevelDisabled": false,
              }
            }
            domainIndex={0}
            headerTitle="Fields"
            helpNoun="list"
            helpTopic={null}
            initCollapsed={true}
            isNew={false}
            onChange={[Function]}
            onToggle={[Function]}
            panelStatus="COMPLETE"
            setFileImportData={[Function]}
            showHeader={true}
            successBsStyle="success"
            testMode={true}
            todoIconHelpMsg="This section does not contain any user-defined fields and requires a selection for the Key Field Name property."
            validate={false}
          >
            <ForwardRef
              className="domain-form-panel"
              expanded={false}
              onToggle={[Function]}
            >
              <Uncontrolled(Panel)
                className="domain-form-panel"
                expanded={false}
                innerRef={null}
                onToggle={[Function]}
              >
                <Panel
                  bsClass="panel"
                  bsStyle="default"
                  className="domain-form-panel"
                  expanded={false}
                  onToggle={[Function]}
                >
                  <div
                    className="domain-form-panel panel panel-default"
                  >
                    <CollapsiblePanelHeader
                      collapsed={true}
                      controlledCollapse={true}
                      headerDetails="13 Fields Defined"
                      id="domainpropertiesrow-NIMHDemographics-hdr"
                      isValid={true}
                      panelStatus="COMPLETE"
                      title="Fields"
                      todoIconHelpMsg="This section does not contain any user-defined fields and requires a selection for the Key Field Name property."
                      togglePanel={[Function]}
                    >
                      <PanelHeading
                        bsClass="panel"
                        className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed"
                        componentClass="div"
                        id="domainpropertiesrow-NIMHDemographics-hdr"
                        onClick={[Function]}
                      >
                        <div
                          className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
                          id="domainpropertiesrow-NIMHDemographics-hdr"
                          onClick={[Function]}
                        >
                          <span
                            className="domain-panel-status-icon domain-panel-status-icon-green"
                          >
                            <span
                              className="fa fa-check-circle"
                            />
                          </span>
                          <span
                            className="domain-panel-title"
                          >
                            Fields
                          </span>
                          <span
                            className="pull-right"
                          >
                            <span
                              className="fa fa-lg fa-plus-square domain-form-expand-btn"
                            />
                          </span>
                          <span
                            className="domain-panel-header-fields-defined"
                          >
                            13 Fields Defined
                          </span>
                        </div>
                      </PanelHeading>
                    </CollapsiblePanelHeader>
                    <PanelBody
                      bsClass="panel"
                      className="domain-field-top-noBuffer"
                      collapsible={true}
                    >
                      <PanelCollapse
                        bsClass="panel"
                      >
                        <Collapse
                          appear={false}
                          dimension="height"
                          getDimensionValue={[Function]}
                          in={false}
                          mountOnEnter={false}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <Transition
                            appear={false}
                            aria-expanded={null}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <div
                              aria-expanded={null}
                              className="panel-collapse collapse"
                            >
                              <div
                                className="domain-field-top-noBuffer panel-body"
                              >
                                <Row
                                  bsClass="row"
                                  className="domain-field-toolbar"
                                  componentClass="div"
                                >
                                  <div
                                    className="domain-field-toolbar row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={4}
                                    >
                                      <div
                                        className="col-xs-4"
                                      >
                                        <AddEntityButton
                                          buttonClass="domain-toolbar-add-btn"
                                          containerClass="container--toolbar-button"
                                          entity="Field"
                                          onClick={[Function]}
                                        >
                                          <ActionButton
                                            buttonClass="domain-toolbar-add-btn"
                                            containerClass="container--toolbar-button"
                                            helperTitle="More Info"
                                            onClick={[Function]}
                                          >
                                            <div
                                              className="container--toolbar-button"
                                            >
                                              <div
                                                className="domain-toolbar-add-btn"
                                              >
                                                <span
                                                  className="container--action-button btn btn-default"
                                                  onClick={[Function]}
                                                >
                                                  <i
                                                    className="fa fa-plus-circle container--addition-icon"
                                                  />
                                                   Add 
                                                  Field
                                                </span>
                                              </div>
                                            </div>
                                          </ActionButton>
                                        </AddEntityButton>
                                        <ActionButton
                                          buttonClass="domain-toolbar-delete-btn"
                                          containerClass="container--toolbar-button"
                                          disabled={true}
                                          helperTitle="More Info"
                                          onClick={[Function]}
                                        >
                                          <div
                                            className="container--toolbar-button"
                                          >
                                            <div
                                              className="domain-toolbar-delete-btn"
                                            >
                                              <span
                                                className="container--action-button btn btn-default disabled"
                                              >
                                                <i
                                                  className="fa fa-trash domain-toolbar-export-btn-icon"
                                                />
                                                 Delete
                                              </span>
                                            </div>
                                          </div>
                                        </ActionButton>
                                        <ActionButton
                                          buttonClass="domain-toolbar-export-btn"
                                          containerClass="container--toolbar-button"
                                          disabled={false}
                                          helperTitle="More Info"
                                          onClick={[Function]}
                                        >
                                          <div
                                            className="container--toolbar-button"
                                          >
                                            <div
                                              className="domain-toolbar-export-btn"
                                            >
                                              <span
                                                className="container--action-button btn btn-default"
                                                onClick={[Function]}
                                              >
                                                <i
                                                  className="fa fa-download domain-toolbar-export-btn-icon"
                                                />
                                                 Export
                                              </span>
                                            </div>
                                          </div>
                                        </ActionButton>
                                      </div>
                                    </Col>
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={8}
                                    >
                                      <div
                                        className="col-xs-8"
                                      >
                                        <div
                                          className="pull-right domain-field-toolbar-right-aligned"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            className="domain-search-input"
                                            componentClass="input"
                                            id="domain-search-name-0"
                                            onChange={[Function]}
                                            placeholder="Search Fields"
                                            type="text"
                                          >
                                            <input
                                              className="domain-search-input form-control"
                                              id="domain-search-name-0"
                                              onChange={[Function]}
                                              placeholder="Search Fields"
                                              type="text"
                                            />
                                          </FormControl>
                                        </div>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                                <Row
                                  bsClass="row"
                                  className=""
                                  componentClass="div"
                                >
                                  <div
                                    className="row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      />
                                    </Col>
                                  </div>
                                </Row>
                                <DragDropContext
                                  onBeforeDragStart={[Function]}
                                  onDragEnd={[Function]}
                                >
                                  <ErrorBoundary>
                                    <App
                                      contextId="0"
                                      dragHandleUsageInstructions="
  Press space bar to start a drag.
  When dragging you can use the arrow keys to move the item around and escape to cancel.
  Some screen readers may require you to be in focus mode or to use your pass through key
"
                                      onBeforeDragStart={[Function]}
                                      onDragEnd={[Function]}
                                      setCallbacks={[Function]}
                                    >
                                      <Provider
                                        context={
                                          {
                                            "$$typeof": Symbol(react.context),
                                            "Consumer": {
                                              "$$typeof": Symbol(react.context),
                                              "_calculateChangedBits": null,
                                              "_context": [Circular],
                                            },
                                            "Provider": {
                                              "$$typeof": Symbol(react.provider),
                                              "_context": [Circular],
                                            },
                                            "_calculateChangedBits": null,
                                            "_currentRenderer": {},
                                            "_currentRenderer2": null,
                                            "_currentValue": null,
                                            "_currentValue2": null,
                                            "_threadCount": 0,
                                          }
                                        }
                                        store={
                                          {
                                            "@@observable": [Function],
                                            "dispatch": [Function],
                                            "getState": [Function],
                                            "replaceReducer": [Function],
                                            "subscribe": [Function],
                                          }
                                        }
                                      >
                                        <div
                                          className="domain-field-row domain-row-border-default domain-floating-hdr"
                                        >
                                          <Alert
                                            bsStyle="info"
                                          />
                                          <Row
                                            bsClass="row"
                                            componentClass="div"
                                          >
                                            <div
                                              className="row"
                                            >
                                              <div
                                                className="domain-field-header"
                                              >
                                                0
                                                 
                                                fields
                                                 selected
                                                <Button
                                                  active={false}
                                                  block={false}
                                                  bsClass="btn"
                                                  bsStyle="default"
                                                  className="domain-panel-header-clear-all"
                                                  disabled={true}
                                                  onClick={[Function]}
                                                >
                                                  <button
                                                    className="domain-panel-header-clear-all btn btn-default"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    Clear
                                                  </button>
                                                </Button>
                                              </div>
                                            </div>
                                          </Row>
                                          <Row
                                            bsClass="row"
                                            className="domain-row-container"
                                            componentClass="div"
                                          >
                                            <div
                                              className="domain-row-container row"
                                            >
                                              <div
                                                className="domain-row-handle"
                                              />
                                              <div
                                                className="domain-row-action-section"
                                              >
                                                <Checkbox
                                                  bsClass="checkbox"
                                                  checked={false}
                                                  className="domain-field-check-icon"
                                                  disabled={false}
                                                  id="domain-select-all-checkbox"
                                                  inline={false}
                                                  name="domain-select-all-checkbox"
                                                  onChange={[Function]}
                                                  title=""
                                                >
                                                  <div
                                                    className="domain-field-check-icon checkbox"
                                                  >
                                                    <label
                                                      title=""
                                                    >
                                                      <input
                                                        checked={false}
                                                        disabled={false}
                                                        id="domain-select-all-checkbox"
                                                        name="domain-select-all-checkbox"
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                      />
                                                    </label>
                                                  </div>
                                                </Checkbox>
                                              </div>
                                              <div>
                                                <Col
                                                  bsClass="col"
                                                  className="domain-row-base-fields"
                                                  componentClass="div"
                                                  xs={6}
                                                >
                                                  <div
                                                    className="domain-row-base-fields col-xs-6"
                                                  >
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={6}
                                                    >
                                                      <div
                                                        className="col-xs-6"
                                                      >
                                                        <b>
                                                          Name *
                                                        </b>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={4}
                                                    >
                                                      <div
                                                        className="col-xs-4"
                                                      >
                                                        <b>
                                                          Data Type *
                                                        </b>
                                                      </div>
                                                    </Col>
                                                    <Col
                                                      bsClass="col"
                                                      componentClass="div"
                                                      xs={2}
                                                    >
                                                      <div
                                                        className="col-xs-2"
                                                      >
                                                        <b>
                                                          Required
                                                        </b>
                                                      </div>
                                                    </Col>
                                                  </div>
                                                </Col>
                                                <Col
                                                  bsClass="col"
                                                  componentClass="div"
                                                  xs={6}
                                                >
                                                  <div
                                                    className="col-xs-6"
                                                  >
                                                    <b>
                                                      Details
                                                    </b>
                                                  </div>
                                                </Col>
                                              </div>
                                            </div>
                                          </Row>
                                        </div>
                                        <Connect(Droppable)
                                          direction="vertical"
                                          droppableId="domain-form-droppable"
                                          getContainerForClone={[Function]}
                                          ignoreContainerClipping={false}
                                          isCombineEnabled={false}
                                          isDropDisabled={false}
                                          mode="standard"
                                          renderClone={null}
                                          type="DEFAULT"
                                        >
                                          <Droppable
                                            direction="vertical"
                                            droppableId="domain-form-droppable"
                                            getContainerForClone={[Function]}
                                            ignoreContainerClipping={false}
                                            isCombineEnabled={false}
                                            isDropDisabled={false}
                                            mode="standard"
                                            placeholder={null}
                                            renderClone={null}
                                            shouldAnimatePlaceholder={false}
                                            snapshot={
                                              {
                                                "draggingFromThisWith": null,
                                                "draggingOverWith": null,
                                                "isDraggingOver": false,
                                                "isUsingPlaceholder": false,
                                              }
                                            }
                                            type="DEFAULT"
                                            updateViewportMaxScroll={[Function]}
                                            useClone={null}
                                          >
                                            <div
                                              data-rbd-droppable-context-id="0"
                                              data-rbd-droppable-id="domain-form-droppable"
                                            >
                                              <Form
                                                bsClass="form"
                                                className="domain-form"
                                                componentClass="form"
                                                horizontal={false}
                                                inline={false}
                                              >
                                                <form
                                                  className="domain-form"
                                                >
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": false,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Subject ID",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "SubjectID",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26820,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                                                        "propertyValidators": [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": true,
                                                        "scale": 10,
                                                        "URL": null,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Integer",
                                                            "name": "int",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                            "alternateRangeURI": "xsd:int",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "SubjectID",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": true,
                                                        "lockType": "PKLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={0}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-0"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-0"
                                                      index={0}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-0"
                                                        index={0}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-0"
                                                          index={0}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-0"
                                                            dropAnimationFinished={[Function]}
                                                            index={0}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-0"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={0}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-0"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": false,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Subject ID",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "SubjectID",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26820,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                                                                        "propertyValidators": [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": true,
                                                                        "scale": 10,
                                                                        "URL": null,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Integer",
                                                                          "name": "int",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                          "alternateRangeURI": "xsd:int",
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Integer",
                                                                            "name": "int",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                            "alternateRangeURI": "xsd:int",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "SubjectID",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": true,
                                                                        "lockType": "PKLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={0}
                                                                    label="SubjectID"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-0"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-0"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-0"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-0"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-0"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-0"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={true}
                                                                                id="domainpropertiesrow-name-0-0"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="SubjectID"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={true}
                                                                                  id="domainpropertiesrow-name-0-0"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="SubjectID"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={true}
                                                                                id="domainpropertiesrow-type-0-0"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="int"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={true}
                                                                                  id="domainpropertiesrow-type-0-0"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="int"
                                                                                >
                                                                                  <option
                                                                                    value="int"
                                                                                  >
                                                                                    Integer
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={true}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={true}
                                                                                  id="domainpropertiesrow-required-0-0"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox disabled"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={true}
                                                                                        disabled={true}
                                                                                        id="domainpropertiesrow-required-0-0"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-0"
                                                                        >
                                                                          Primary Key
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        />
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": false,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Subject ID",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "SubjectID",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26820,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                                                                          "propertyValidators": [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": true,
                                                                          "scale": 10,
                                                                          "URL": null,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Integer",
                                                                            "name": "int",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                            "alternateRangeURI": "xsd:int",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Integer",
                                                                              "name": "int",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                              "alternateRangeURI": "xsd:int",
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "SubjectID",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": true,
                                                                          "lockType": "PKLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={0}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NumericFieldOptions
                                                                                appPropertiesOnly={false}
                                                                                defaultScale="LINEAR"
                                                                                domainIndex={0}
                                                                                format={null}
                                                                                index={0}
                                                                                label="Integer Options"
                                                                                lockType="PKLocked"
                                                                                onChange={[Function]}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Integer Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Integer Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    To control how a number value is displayed, provide a string format compatible with the Java
                                                                                                     
                                                                                                    <Memo
                                                                                                      urlSuffix="java/text/DecimalFormat.html"
                                                                                                    >
                                                                                                      DecimalFormat
                                                                                                    </Memo>
                                                                                                     class.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Learn more about using 
                                                                                                    <HelpLink
                                                                                                      topic="dateFormats#number"
                                                                                                    >
                                                                                                      Number formats
                                                                                                    </HelpLink>
                                                                                                     in LabKey.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Format for Numbers"
                                                                                            >
                                                                                              Format for 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Numbers
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Format for Numbers"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Default Scale Type
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-format-0-0"
                                                                                            name="domainpropertiesrow-format"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-format-0-0"
                                                                                              name="domainpropertiesrow-format"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="select"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-defaultScale-0-0"
                                                                                            name="domainpropertiesrow-defaultScale"
                                                                                            onChange={[Function]}
                                                                                            value="LINEAR"
                                                                                          >
                                                                                            <select
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-defaultScale-0-0"
                                                                                              name="domainpropertiesrow-defaultScale"
                                                                                              onChange={[Function]}
                                                                                              value="LINEAR"
                                                                                            >
                                                                                              <option
                                                                                                key="domainpropertiesrow-defaultScaleoption-LINEAR-0-0"
                                                                                                value="LINEAR"
                                                                                              >
                                                                                                Linear
                                                                                              </option>
                                                                                              <option
                                                                                                key="domainpropertiesrow-defaultScaleoption-LOG-0-0"
                                                                                                value="LOG"
                                                                                              >
                                                                                                Log
                                                                                              </option>
                                                                                            </select>
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={false}
                                                                                    defaultScale="LINEAR"
                                                                                    domainIndex={0}
                                                                                    format={null}
                                                                                    index={0}
                                                                                    label="Integer Options"
                                                                                    lockType="PKLocked"
                                                                                    onChange={[Function]}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </NumericFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Subject ID",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "SubjectID",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26820,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                                                                                    "propertyValidators": [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": true,
                                                                                    "scale": 10,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Integer",
                                                                                      "name": "int",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                      "alternateRangeURI": "xsd:int",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Integer",
                                                                                        "name": "int",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        "alternateRangeURI": "xsd:int",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "SubjectID",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": true,
                                                                                    "lockType": "PKLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={0}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-0"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-0"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-0"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Subject ID"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-0"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Subject ID"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-0"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-0"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-0"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-0"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Subject ID",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "SubjectID",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26820,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.SubjectID",
                                                                                    "propertyValidators": [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": true,
                                                                                    "scale": 10,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Integer",
                                                                                      "name": "int",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                      "alternateRangeURI": "xsd:int",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Integer",
                                                                                        "name": "int",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                        "alternateRangeURI": "xsd:int",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "SubjectID",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": true,
                                                                                    "lockType": "PKLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={0}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-0"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-0"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RangeValidatorHelpText />}
                                                                                                label="Create Range Validator"
                                                                                              >
                                                                                                Create Range 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Range Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-rangeValidator-0-0"
                                                                                                name="domainpropertiesrow-rangeValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-rangeValidator-0-0"
                                                                                                  name="domainpropertiesrow-rangeValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Range
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": false,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Name",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "Name",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26821,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                                                        "propertyValidators": [
                                                          {
                                                            "description": null,
                                                            "errorMessage": null,
                                                            "expression": "~lte=4000",
                                                            "name": "Text Length",
                                                            "new": true,
                                                            "properties": {},
                                                            "rowId": 14802,
                                                            "type": "Length",
                                                          },
                                                        ],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": null,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "Name",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={1}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-1"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-1"
                                                      index={1}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-1"
                                                        index={1}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-1"
                                                          index={1}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-1"
                                                            dropAnimationFinished={[Function]}
                                                            index={1}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-1"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={1}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-1"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": false,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Name",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "Name",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26821,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                                                                        "propertyValidators": [
                                                                          {
                                                                            "description": null,
                                                                            "errorMessage": null,
                                                                            "expression": "~lte=4000",
                                                                            "name": "Text Length",
                                                                            "new": true,
                                                                            "properties": {},
                                                                            "rowId": 14802,
                                                                            "type": "Length",
                                                                          },
                                                                        ],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": null,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Text",
                                                                          "name": "string",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": "xsd:string",
                                                                          "shortDisplay": "String",
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "Name",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={1}
                                                                    label="Name"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-1"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-1"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-1"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-1"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-1"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-1"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-1"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="Name"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-1"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="Name"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-1"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="string"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-1"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="string"
                                                                                >
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="ParticipantId"
                                                                                    value="ParticipantId"
                                                                                  >
                                                                                    Subject/Participant
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-1"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-1"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-1"
                                                                        />
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-1"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-1"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": false,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Name",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "Name",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26821,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                                                                          "propertyValidators": [
                                                                            {
                                                                              "description": null,
                                                                              "errorMessage": null,
                                                                              "expression": "~lte=4000",
                                                                              "name": "Text Length",
                                                                              "new": true,
                                                                              "properties": {},
                                                                              "rowId": 14802,
                                                                              "type": "Length",
                                                                            },
                                                                          ],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": null,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Text",
                                                                              "name": "string",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "alternateRangeURI": "xsd:string",
                                                                              "shortDisplay": "String",
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "Name",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={1}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <TextFieldOptions
                                                                                appPropertiesOnly={false}
                                                                                domainIndex={0}
                                                                                index={1}
                                                                                label="Text Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scale={4000}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Text Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Text Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    Sets the maximum character count for a text field.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Anything over 4,000 characters will use the 'Unlimited' designation.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Maximum Text Length"
                                                                                            >
                                                                                              Maximum Text 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Length
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Maximum Text Length"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                      target={
                                                                                                        <span
                                                                                                          class="label-help-target"
                                                                                                        >
                                                                                                          <span
                                                                                                            class="label-help-icon fa fa-question-circle"
                                                                                                          />
                                                                                                        </span>
                                                                                                      }
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        target={
                                                                                                          <span
                                                                                                            class="label-help-target"
                                                                                                          >
                                                                                                            <span
                                                                                                              class="label-help-icon fa fa-question-circle"
                                                                                                            />
                                                                                                          </span>
                                                                                                        }
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        className="domain-text-options-col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="domain-text-options-col col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={false}
                                                                                            className="domain-text-options-radio1 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-maxLength-0-1"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="maxLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={false}
                                                                                              className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-maxLength-0-1"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="maxLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div>
                                                                                            Unlimited
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={true}
                                                                                            className="domain-text-options-radio2 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            id="domainpropertiesrow-customLength-0-1"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="customLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={true}
                                                                                              className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                              id="domainpropertiesrow-customLength-0-1"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="customLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <span
                                                                                            className="domain-text-options-length domain-field-float-left"
                                                                                          >
                                                                                            No longer than 
                                                                                            <FormControl
                                                                                              bsClass="form-control"
                                                                                              className="domain-text-length-field"
                                                                                              componentClass="input"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-scale-0-1"
                                                                                              name="domainpropertiesrow-scale"
                                                                                              onChange={[Function]}
                                                                                              type="number"
                                                                                              value={4000}
                                                                                            >
                                                                                              <input
                                                                                                className="domain-text-length-field form-control"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-scale-0-1"
                                                                                                name="domainpropertiesrow-scale"
                                                                                                onChange={[Function]}
                                                                                                type="number"
                                                                                                value={4000}
                                                                                              />
                                                                                            </FormControl>
                                                                                             characters
                                                                                          </span>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={0}
                                                                                    index={1}
                                                                                    label="Text Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scale={4000}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </TextFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Name",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Name",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26821,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14802,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Name",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={1}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-1"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-1"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-1"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Name"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-1"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Name"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-1"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-1"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-1"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-1"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Name",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Name",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26821,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Name",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14802,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Name",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={1}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-1"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-1"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RegexValidatorHelpText />}
                                                                                                label="Create Regular Expression Validator"
                                                                                              >
                                                                                                Create Regular Expression 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Regular Expression Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-regexValidator-0-1"
                                                                                                name="domainpropertiesrow-regexValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-regexValidator-0-1"
                                                                                                  name="domainpropertiesrow-regexValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Regex
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": false,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Family",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "Family",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26822,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                                                        "propertyValidators": [
                                                          {
                                                            "description": null,
                                                            "errorMessage": null,
                                                            "expression": "~lte=4000",
                                                            "name": "Text Length",
                                                            "new": true,
                                                            "properties": {},
                                                            "rowId": 14803,
                                                            "type": "Length",
                                                          },
                                                        ],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": null,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "Family",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={2}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-2"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-2"
                                                      index={2}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-2"
                                                        index={2}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-2"
                                                          index={2}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-2"
                                                            dropAnimationFinished={[Function]}
                                                            index={2}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-2"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={2}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-2"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": false,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Family",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "Family",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26822,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                                                                        "propertyValidators": [
                                                                          {
                                                                            "description": null,
                                                                            "errorMessage": null,
                                                                            "expression": "~lte=4000",
                                                                            "name": "Text Length",
                                                                            "new": true,
                                                                            "properties": {},
                                                                            "rowId": 14803,
                                                                            "type": "Length",
                                                                          },
                                                                        ],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": null,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Text",
                                                                          "name": "string",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": "xsd:string",
                                                                          "shortDisplay": "String",
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "Family",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={2}
                                                                    label="Family"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-2"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-2"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-2"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-2"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-2"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-2"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-2"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="Family"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-2"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="Family"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-2"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="string"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-2"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="string"
                                                                                >
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="ParticipantId"
                                                                                    value="ParticipantId"
                                                                                  >
                                                                                    Subject/Participant
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-2"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-2"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-2"
                                                                        />
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-2"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-2"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": false,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Family",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "Family",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26822,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                                                                          "propertyValidators": [
                                                                            {
                                                                              "description": null,
                                                                              "errorMessage": null,
                                                                              "expression": "~lte=4000",
                                                                              "name": "Text Length",
                                                                              "new": true,
                                                                              "properties": {},
                                                                              "rowId": 14803,
                                                                              "type": "Length",
                                                                            },
                                                                          ],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": null,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Text",
                                                                              "name": "string",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "alternateRangeURI": "xsd:string",
                                                                              "shortDisplay": "String",
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "Family",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={2}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <TextFieldOptions
                                                                                appPropertiesOnly={false}
                                                                                domainIndex={0}
                                                                                index={2}
                                                                                label="Text Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scale={4000}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Text Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Text Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    Sets the maximum character count for a text field.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Anything over 4,000 characters will use the 'Unlimited' designation.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Maximum Text Length"
                                                                                            >
                                                                                              Maximum Text 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Length
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Maximum Text Length"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                      target={
                                                                                                        <span
                                                                                                          class="label-help-target"
                                                                                                        >
                                                                                                          <span
                                                                                                            class="label-help-icon fa fa-question-circle"
                                                                                                          />
                                                                                                        </span>
                                                                                                      }
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        target={
                                                                                                          <span
                                                                                                            class="label-help-target"
                                                                                                          >
                                                                                                            <span
                                                                                                              class="label-help-icon fa fa-question-circle"
                                                                                                            />
                                                                                                          </span>
                                                                                                        }
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        className="domain-text-options-col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="domain-text-options-col col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={false}
                                                                                            className="domain-text-options-radio1 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-maxLength-0-2"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="maxLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={false}
                                                                                              className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-maxLength-0-2"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="maxLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div>
                                                                                            Unlimited
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={true}
                                                                                            className="domain-text-options-radio2 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            id="domainpropertiesrow-customLength-0-2"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="customLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={true}
                                                                                              className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                              id="domainpropertiesrow-customLength-0-2"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="customLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <span
                                                                                            className="domain-text-options-length domain-field-float-left"
                                                                                          >
                                                                                            No longer than 
                                                                                            <FormControl
                                                                                              bsClass="form-control"
                                                                                              className="domain-text-length-field"
                                                                                              componentClass="input"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-scale-0-2"
                                                                                              name="domainpropertiesrow-scale"
                                                                                              onChange={[Function]}
                                                                                              type="number"
                                                                                              value={4000}
                                                                                            >
                                                                                              <input
                                                                                                className="domain-text-length-field form-control"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-scale-0-2"
                                                                                                name="domainpropertiesrow-scale"
                                                                                                onChange={[Function]}
                                                                                                type="number"
                                                                                                value={4000}
                                                                                              />
                                                                                            </FormControl>
                                                                                             characters
                                                                                          </span>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={0}
                                                                                    index={2}
                                                                                    label="Text Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scale={4000}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </TextFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Family",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Family",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26822,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14803,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Family",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={2}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-2"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-2"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-2"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Family"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-2"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Family"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-2"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-2"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-2"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-2"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Family",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Family",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26822,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Family",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14803,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Family",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={2}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-2"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-2"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RegexValidatorHelpText />}
                                                                                                label="Create Regular Expression Validator"
                                                                                              >
                                                                                                Create Regular Expression 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Regular Expression Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-regexValidator-0-2"
                                                                                                name="domainpropertiesrow-regexValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-regexValidator-0-2"
                                                                                                  name="domainpropertiesrow-regexValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Regex
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": true,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Mother'",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": "NIMHDemographics",
                                                        "lookupSchema": "lists",
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "Mothers",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26823,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                        "propertyValidators": [
                                                          {
                                                            "description": null,
                                                            "errorMessage": null,
                                                            "expression": "~lte=4000",
                                                            "name": "Text Length",
                                                            "new": true,
                                                            "properties": {},
                                                            "rowId": 14804,
                                                            "type": "Length",
                                                          },
                                                        ],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": null,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": undefined,
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "Mothers",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={3}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-3"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-3"
                                                      index={3}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-3"
                                                        index={3}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-3"
                                                          index={3}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-3"
                                                            dropAnimationFinished={[Function]}
                                                            index={3}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-3"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={3}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-3"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": true,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Mother'",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": "NIMHDemographics",
                                                                        "lookupSchema": "lists",
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "Mothers",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26823,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                                        "propertyValidators": [
                                                                          {
                                                                            "description": null,
                                                                            "errorMessage": null,
                                                                            "expression": "~lte=4000",
                                                                            "name": "Text Length",
                                                                            "new": true,
                                                                            "properties": {},
                                                                            "rowId": 14804,
                                                                            "type": "Length",
                                                                          },
                                                                        ],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": null,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": undefined,
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": undefined,
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "Mothers",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={3}
                                                                    label="Mothers"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-3"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-3"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-3"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-3"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-3"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-3"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-3"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="Mothers"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-3"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="Mothers"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-3"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="lookup"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-3"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="lookup"
                                                                                >
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="ParticipantId"
                                                                                    value="ParticipantId"
                                                                                  >
                                                                                    Subject/Participant
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-3"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-3"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-3"
                                                                        >
                                                                          Current Folder &gt; lists
                                                                           &gt; 
                                                                          <a
                                                                            href="/labkey/query/testContainer/executeQuery.view?schemaName=lists&query.queryName=NIMHDemographics"
                                                                          >
                                                                             
                                                                            NIMHDemographics
                                                                             
                                                                          </a>
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-3"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-3"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": true,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Mother'",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": "NIMHDemographics",
                                                                          "lookupSchema": "lists",
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "Mothers",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26823,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                                          "propertyValidators": [
                                                                            {
                                                                              "description": null,
                                                                              "errorMessage": null,
                                                                              "expression": "~lte=4000",
                                                                              "name": "Text Length",
                                                                              "new": true,
                                                                              "properties": {},
                                                                              "rowId": 14804,
                                                                              "type": "Length",
                                                                            },
                                                                          ],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": null,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": undefined,
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Lookup",
                                                                              "name": "lookup",
                                                                              "rangeURI": undefined,
                                                                              "alternateRangeURI": undefined,
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "Mothers",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={3}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <LookupFieldOptions
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": true,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Mother'",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": "NIMHDemographics",
                                                                                    "lookupSchema": "lists",
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Mothers",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26823,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14804,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": undefined,
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Lookup",
                                                                                        "name": "lookup",
                                                                                        "rangeURI": undefined,
                                                                                        "alternateRangeURI": undefined,
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Mothers",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={3}
                                                                                label="Lookup Definition Options"
                                                                                lockType="NotLocked"
                                                                                lookupContainer="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                onChange={[Function]}
                                                                                onMultiChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-section-heading"
                                                                                          >
                                                                                            Lookup Definition Options
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Target Folder
                                                                                          </div>
                                                                                          <FolderSelect
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupContainer-0-3"
                                                                                            key="domainpropertiesrow-lookupContainer-0-3"
                                                                                            onChange={[Function]}
                                                                                            value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                          >
                                                                                            <FolderSelectImpl
                                                                                              context={
                                                                                                {
                                                                                                  "activeContainer": Container {
                                                                                                    "activeModules": [],
                                                                                                    "effectivePermissions": [],
                                                                                                    "folderType": "",
                                                                                                    "formats": {
                                                                                                      "dateFormat": "",
                                                                                                      "dateTimeFormat": "",
                                                                                                      "numberFormat": "",
                                                                                                    },
                                                                                                    "hasRestrictedActiveModule": false,
                                                                                                    "iconHref": "",
                                                                                                    "id": "",
                                                                                                    "isContainerTab": false,
                                                                                                    "isWorkbook": false,
                                                                                                    "name": "",
                                                                                                    "parentId": "",
                                                                                                    "parentPath": "",
                                                                                                    "path": "",
                                                                                                    "sortOrder": 0,
                                                                                                    "startUrl": "",
                                                                                                    "title": "",
                                                                                                    "type": "",
                                                                                                  },
                                                                                                  "fetchContainers": [Function],
                                                                                                  "fetchQueries": [Function],
                                                                                                  "fetchSchemas": [Function],
                                                                                                }
                                                                                              }
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-lookupContainer-0-3"
                                                                                              name="domainpropertiesrow-lookupContainer"
                                                                                              onChange={[Function]}
                                                                                              value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="select"
                                                                                                context={
                                                                                                  {
                                                                                                    "activeContainer": Container {
                                                                                                      "activeModules": [],
                                                                                                      "effectivePermissions": [],
                                                                                                      "folderType": "",
                                                                                                      "formats": {
                                                                                                        "dateFormat": "",
                                                                                                        "dateTimeFormat": "",
                                                                                                        "numberFormat": "",
                                                                                                      },
                                                                                                      "hasRestrictedActiveModule": false,
                                                                                                      "iconHref": "",
                                                                                                      "id": "",
                                                                                                      "isContainerTab": false,
                                                                                                      "isWorkbook": false,
                                                                                                      "name": "",
                                                                                                      "parentId": "",
                                                                                                      "parentPath": "",
                                                                                                      "path": "",
                                                                                                      "sortOrder": 0,
                                                                                                      "startUrl": "",
                                                                                                      "title": "",
                                                                                                      "type": "",
                                                                                                    },
                                                                                                    "fetchContainers": [Function],
                                                                                                    "fetchQueries": [Function],
                                                                                                    "fetchSchemas": [Function],
                                                                                                  }
                                                                                                }
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-lookupContainer-0-3"
                                                                                                name="domainpropertiesrow-lookupContainer"
                                                                                                onChange={[Function]}
                                                                                                value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                              >
                                                                                                <select
                                                                                                  className="form-control"
                                                                                                  context={
                                                                                                    {
                                                                                                      "activeContainer": Container {
                                                                                                        "activeModules": [],
                                                                                                        "effectivePermissions": [],
                                                                                                        "folderType": "",
                                                                                                        "formats": {
                                                                                                          "dateFormat": "",
                                                                                                          "dateTimeFormat": "",
                                                                                                          "numberFormat": "",
                                                                                                        },
                                                                                                        "hasRestrictedActiveModule": false,
                                                                                                        "iconHref": "",
                                                                                                        "id": "",
                                                                                                        "isContainerTab": false,
                                                                                                        "isWorkbook": false,
                                                                                                        "name": "",
                                                                                                        "parentId": "",
                                                                                                        "parentPath": "",
                                                                                                        "path": "",
                                                                                                        "sortOrder": 0,
                                                                                                        "startUrl": "",
                                                                                                        "title": "",
                                                                                                        "type": "",
                                                                                                      },
                                                                                                      "fetchContainers": [Function],
                                                                                                      "fetchQueries": [Function],
                                                                                                      "fetchSchemas": [Function],
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-lookupContainer-0-3"
                                                                                                  name="domainpropertiesrow-lookupContainer"
                                                                                                  onChange={[Function]}
                                                                                                  value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                                >
                                                                                                  <option
                                                                                                    key="_current"
                                                                                                    value=""
                                                                                                  >
                                                                                                    Current 
                                                                                                    Folder
                                                                                                  </option>
                                                                                                </select>
                                                                                              </FormControl>
                                                                                            </FolderSelectImpl>
                                                                                          </FolderSelect>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Target Schema
                                                                                          </div>
                                                                                          <SchemaSelect
                                                                                            containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupSchema-0-3"
                                                                                            key="domainpropertiesrow-lookupSchema-0-3"
                                                                                            onChange={[Function]}
                                                                                            value="lists"
                                                                                          >
                                                                                            <SchemaSelectImpl
                                                                                              containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                              context={
                                                                                                {
                                                                                                  "activeContainer": Container {
                                                                                                    "activeModules": [],
                                                                                                    "effectivePermissions": [],
                                                                                                    "folderType": "",
                                                                                                    "formats": {
                                                                                                      "dateFormat": "",
                                                                                                      "dateTimeFormat": "",
                                                                                                      "numberFormat": "",
                                                                                                    },
                                                                                                    "hasRestrictedActiveModule": false,
                                                                                                    "iconHref": "",
                                                                                                    "id": "",
                                                                                                    "isContainerTab": false,
                                                                                                    "isWorkbook": false,
                                                                                                    "name": "",
                                                                                                    "parentId": "",
                                                                                                    "parentPath": "",
                                                                                                    "path": "",
                                                                                                    "sortOrder": 0,
                                                                                                    "startUrl": "",
                                                                                                    "title": "",
                                                                                                    "type": "",
                                                                                                  },
                                                                                                  "fetchContainers": [Function],
                                                                                                  "fetchQueries": [Function],
                                                                                                  "fetchSchemas": [Function],
                                                                                                }
                                                                                              }
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-lookupSchema-0-3"
                                                                                              name="domainpropertiesrow-lookupSchema"
                                                                                              onChange={[Function]}
                                                                                              value="lists"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="select"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-lookupSchema-0-3"
                                                                                                name="domainpropertiesrow-lookupSchema"
                                                                                                onChange={[Function]}
                                                                                                placeholder="Select Schema"
                                                                                                value="lists"
                                                                                              >
                                                                                                <select
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-lookupSchema-0-3"
                                                                                                  name="domainpropertiesrow-lookupSchema"
                                                                                                  onChange={[Function]}
                                                                                                  placeholder="Select Schema"
                                                                                                  value="lists"
                                                                                                >
                                                                                                  <option
                                                                                                    disabled={true}
                                                                                                    key="_loading"
                                                                                                    value="lists"
                                                                                                  >
                                                                                                    Loading...
                                                                                                  </option>
                                                                                                </select>
                                                                                              </FormControl>
                                                                                            </SchemaSelectImpl>
                                                                                          </SchemaSelect>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Target Table
                                                                                          </div>
                                                                                          <TargetTableSelect
                                                                                            containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupQueryValue-0-3"
                                                                                            key="domainpropertiesrow-lookupQueryValue-0-3"
                                                                                            lookupURI="http://www.w3.org/2001/XMLSchema#string"
                                                                                            onChange={[Function]}
                                                                                            schemaName="lists"
                                                                                            shouldDisableNonExists={true}
                                                                                            value="http://www.w3.org/2001/XMLSchema#string|NIMHDemographics"
                                                                                          >
                                                                                            <TargetTableSelectImpl
                                                                                              containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                              context={
                                                                                                {
                                                                                                  "activeContainer": Container {
                                                                                                    "activeModules": [],
                                                                                                    "effectivePermissions": [],
                                                                                                    "folderType": "",
                                                                                                    "formats": {
                                                                                                      "dateFormat": "",
                                                                                                      "dateTimeFormat": "",
                                                                                                      "numberFormat": "",
                                                                                                    },
                                                                                                    "hasRestrictedActiveModule": false,
                                                                                                    "iconHref": "",
                                                                                                    "id": "",
                                                                                                    "isContainerTab": false,
                                                                                                    "isWorkbook": false,
                                                                                                    "name": "",
                                                                                                    "parentId": "",
                                                                                                    "parentPath": "",
                                                                                                    "path": "",
                                                                                                    "sortOrder": 0,
                                                                                                    "startUrl": "",
                                                                                                    "title": "",
                                                                                                    "type": "",
                                                                                                  },
                                                                                                  "fetchContainers": [Function],
                                                                                                  "fetchQueries": [Function],
                                                                                                  "fetchSchemas": [Function],
                                                                                                }
                                                                                              }
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-lookupQueryValue-0-3"
                                                                                              lookupURI="http://www.w3.org/2001/XMLSchema#string"
                                                                                              name="domainpropertiesrow-lookupQueryValue"
                                                                                              onChange={[Function]}
                                                                                              schemaName="lists"
                                                                                              shouldDisableNonExists={true}
                                                                                              value="http://www.w3.org/2001/XMLSchema#string|NIMHDemographics"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="select"
                                                                                                disabled={true}
                                                                                                id="domainpropertiesrow-lookupQueryValue-0-3"
                                                                                                name="domainpropertiesrow-lookupQueryValue"
                                                                                                onChange={[Function]}
                                                                                                value="http://www.w3.org/2001/XMLSchema#string|NIMHDemographics"
                                                                                              >
                                                                                                <select
                                                                                                  className="form-control"
                                                                                                  disabled={true}
                                                                                                  id="domainpropertiesrow-lookupQueryValue-0-3"
                                                                                                  name="domainpropertiesrow-lookupQueryValue"
                                                                                                  onChange={[Function]}
                                                                                                  value="http://www.w3.org/2001/XMLSchema#string|NIMHDemographics"
                                                                                                >
                                                                                                  <option
                                                                                                    disabled={true}
                                                                                                    key="_loading"
                                                                                                    value="http://www.w3.org/2001/XMLSchema#string|NIMHDemographics"
                                                                                                  >
                                                                                                    Loading...
                                                                                                  </option>
                                                                                                </select>
                                                                                              </FormControl>
                                                                                            </TargetTableSelectImpl>
                                                                                          </TargetTableSelect>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={6}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-6"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Lookup Validator
                                                                                          </div>
                                                                                          <Checkbox
                                                                                            bsClass="checkbox"
                                                                                            checked={false}
                                                                                            className="domain-field-checkbox-margin"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupValidator-0-3"
                                                                                            inline={false}
                                                                                            name="domainpropertiesrow-lookupValidator"
                                                                                            onChange={[Function]}
                                                                                            title=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-checkbox-margin checkbox"
                                                                                            >
                                                                                              <label
                                                                                                title=""
                                                                                              >
                                                                                                <input
                                                                                                  checked={false}
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-lookupValidator-0-3"
                                                                                                  name="domainpropertiesrow-lookupValidator"
                                                                                                  onChange={[Function]}
                                                                                                  type="checkbox"
                                                                                                />
                                                                                                <span
                                                                                                  className="domain-lookup-validator-text"
                                                                                                >
                                                                                                  Ensure Value Exists in Lookup Target
                                                                                                </span>
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Lookup Validator"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </label>
                                                                                            </div>
                                                                                          </Checkbox>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </LookupFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": true,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Mother'",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": "NIMHDemographics",
                                                                                    "lookupSchema": "lists",
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Mothers",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26823,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14804,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": undefined,
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Lookup",
                                                                                        "name": "lookup",
                                                                                        "rangeURI": undefined,
                                                                                        "alternateRangeURI": undefined,
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Mothers",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={3}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-3"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-3"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-3"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Mother'"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-3"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Mother'"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-3"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-3"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-3"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-3"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": true,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Mother'",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": "NIMHDemographics",
                                                                                    "lookupSchema": "lists",
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Mothers",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26823,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Mother",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14804,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": undefined,
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Lookup",
                                                                                        "name": "lookup",
                                                                                        "rangeURI": undefined,
                                                                                        "alternateRangeURI": undefined,
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Mothers",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={3}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-3"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-3"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RangeValidatorHelpText />}
                                                                                                label="Create Range Validator"
                                                                                              >
                                                                                                Create Range 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Range Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-rangeValidator-0-3"
                                                                                                name="domainpropertiesrow-rangeValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-rangeValidator-0-3"
                                                                                                  name="domainpropertiesrow-rangeValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Range
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": true,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Fathersdaf",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": "NIMHDemographics",
                                                        "lookupSchema": "lists",
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "Father",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26824,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                        "propertyValidators": [
                                                          {
                                                            "description": null,
                                                            "errorMessage": null,
                                                            "expression": "~lte=4000",
                                                            "name": "Text Length",
                                                            "new": true,
                                                            "properties": {},
                                                            "rowId": 14805,
                                                            "type": "Length",
                                                          },
                                                        ],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": null,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": undefined,
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "Father",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={4}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-4"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-4"
                                                      index={4}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-4"
                                                        index={4}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-4"
                                                          index={4}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-4"
                                                            dropAnimationFinished={[Function]}
                                                            index={4}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-4"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={4}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-4"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": true,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Fathersdaf",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": "NIMHDemographics",
                                                                        "lookupSchema": "lists",
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "Father",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26824,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                                        "propertyValidators": [
                                                                          {
                                                                            "description": null,
                                                                            "errorMessage": null,
                                                                            "expression": "~lte=4000",
                                                                            "name": "Text Length",
                                                                            "new": true,
                                                                            "properties": {},
                                                                            "rowId": 14805,
                                                                            "type": "Length",
                                                                          },
                                                                        ],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": null,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": undefined,
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": undefined,
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "Father",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={4}
                                                                    label="Father"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-4"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-4"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-4"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-4"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-4"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-4"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-4"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="Father"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-4"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="Father"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-4"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="lookup"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-4"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="lookup"
                                                                                >
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="ParticipantId"
                                                                                    value="ParticipantId"
                                                                                  >
                                                                                    Subject/Participant
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-4"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-4"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-4"
                                                                        >
                                                                          Current Folder &gt; lists
                                                                           &gt; 
                                                                          <a
                                                                            href="/labkey/query/testContainer/executeQuery.view?schemaName=lists&query.queryName=NIMHDemographics"
                                                                          >
                                                                             
                                                                            NIMHDemographics
                                                                             
                                                                          </a>
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-4"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-4"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": true,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Fathersdaf",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": "NIMHDemographics",
                                                                          "lookupSchema": "lists",
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "Father",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26824,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                                          "propertyValidators": [
                                                                            {
                                                                              "description": null,
                                                                              "errorMessage": null,
                                                                              "expression": "~lte=4000",
                                                                              "name": "Text Length",
                                                                              "new": true,
                                                                              "properties": {},
                                                                              "rowId": 14805,
                                                                              "type": "Length",
                                                                            },
                                                                          ],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": null,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": undefined,
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Lookup",
                                                                              "name": "lookup",
                                                                              "rangeURI": undefined,
                                                                              "alternateRangeURI": undefined,
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "Father",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={4}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <LookupFieldOptions
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": true,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Fathersdaf",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": "NIMHDemographics",
                                                                                    "lookupSchema": "lists",
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Father",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26824,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14805,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": undefined,
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Lookup",
                                                                                        "name": "lookup",
                                                                                        "rangeURI": undefined,
                                                                                        "alternateRangeURI": undefined,
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Father",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={4}
                                                                                label="Lookup Definition Options"
                                                                                lockType="NotLocked"
                                                                                lookupContainer="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                onChange={[Function]}
                                                                                onMultiChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-section-heading"
                                                                                          >
                                                                                            Lookup Definition Options
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Target Folder
                                                                                          </div>
                                                                                          <FolderSelect
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupContainer-0-4"
                                                                                            key="domainpropertiesrow-lookupContainer-0-4"
                                                                                            onChange={[Function]}
                                                                                            value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                          >
                                                                                            <FolderSelectImpl
                                                                                              context={
                                                                                                {
                                                                                                  "activeContainer": Container {
                                                                                                    "activeModules": [],
                                                                                                    "effectivePermissions": [],
                                                                                                    "folderType": "",
                                                                                                    "formats": {
                                                                                                      "dateFormat": "",
                                                                                                      "dateTimeFormat": "",
                                                                                                      "numberFormat": "",
                                                                                                    },
                                                                                                    "hasRestrictedActiveModule": false,
                                                                                                    "iconHref": "",
                                                                                                    "id": "",
                                                                                                    "isContainerTab": false,
                                                                                                    "isWorkbook": false,
                                                                                                    "name": "",
                                                                                                    "parentId": "",
                                                                                                    "parentPath": "",
                                                                                                    "path": "",
                                                                                                    "sortOrder": 0,
                                                                                                    "startUrl": "",
                                                                                                    "title": "",
                                                                                                    "type": "",
                                                                                                  },
                                                                                                  "fetchContainers": [Function],
                                                                                                  "fetchQueries": [Function],
                                                                                                  "fetchSchemas": [Function],
                                                                                                }
                                                                                              }
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-lookupContainer-0-4"
                                                                                              name="domainpropertiesrow-lookupContainer"
                                                                                              onChange={[Function]}
                                                                                              value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="select"
                                                                                                context={
                                                                                                  {
                                                                                                    "activeContainer": Container {
                                                                                                      "activeModules": [],
                                                                                                      "effectivePermissions": [],
                                                                                                      "folderType": "",
                                                                                                      "formats": {
                                                                                                        "dateFormat": "",
                                                                                                        "dateTimeFormat": "",
                                                                                                        "numberFormat": "",
                                                                                                      },
                                                                                                      "hasRestrictedActiveModule": false,
                                                                                                      "iconHref": "",
                                                                                                      "id": "",
                                                                                                      "isContainerTab": false,
                                                                                                      "isWorkbook": false,
                                                                                                      "name": "",
                                                                                                      "parentId": "",
                                                                                                      "parentPath": "",
                                                                                                      "path": "",
                                                                                                      "sortOrder": 0,
                                                                                                      "startUrl": "",
                                                                                                      "title": "",
                                                                                                      "type": "",
                                                                                                    },
                                                                                                    "fetchContainers": [Function],
                                                                                                    "fetchQueries": [Function],
                                                                                                    "fetchSchemas": [Function],
                                                                                                  }
                                                                                                }
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-lookupContainer-0-4"
                                                                                                name="domainpropertiesrow-lookupContainer"
                                                                                                onChange={[Function]}
                                                                                                value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                              >
                                                                                                <select
                                                                                                  className="form-control"
                                                                                                  context={
                                                                                                    {
                                                                                                      "activeContainer": Container {
                                                                                                        "activeModules": [],
                                                                                                        "effectivePermissions": [],
                                                                                                        "folderType": "",
                                                                                                        "formats": {
                                                                                                          "dateFormat": "",
                                                                                                          "dateTimeFormat": "",
                                                                                                          "numberFormat": "",
                                                                                                        },
                                                                                                        "hasRestrictedActiveModule": false,
                                                                                                        "iconHref": "",
                                                                                                        "id": "",
                                                                                                        "isContainerTab": false,
                                                                                                        "isWorkbook": false,
                                                                                                        "name": "",
                                                                                                        "parentId": "",
                                                                                                        "parentPath": "",
                                                                                                        "path": "",
                                                                                                        "sortOrder": 0,
                                                                                                        "startUrl": "",
                                                                                                        "title": "",
                                                                                                        "type": "",
                                                                                                      },
                                                                                                      "fetchContainers": [Function],
                                                                                                      "fetchQueries": [Function],
                                                                                                      "fetchSchemas": [Function],
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-lookupContainer-0-4"
                                                                                                  name="domainpropertiesrow-lookupContainer"
                                                                                                  onChange={[Function]}
                                                                                                  value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                                >
                                                                                                  <option
                                                                                                    key="_current"
                                                                                                    value=""
                                                                                                  >
                                                                                                    Current 
                                                                                                    Folder
                                                                                                  </option>
                                                                                                </select>
                                                                                              </FormControl>
                                                                                            </FolderSelectImpl>
                                                                                          </FolderSelect>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Target Schema
                                                                                          </div>
                                                                                          <SchemaSelect
                                                                                            containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupSchema-0-4"
                                                                                            key="domainpropertiesrow-lookupSchema-0-4"
                                                                                            onChange={[Function]}
                                                                                            value="lists"
                                                                                          >
                                                                                            <SchemaSelectImpl
                                                                                              containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                              context={
                                                                                                {
                                                                                                  "activeContainer": Container {
                                                                                                    "activeModules": [],
                                                                                                    "effectivePermissions": [],
                                                                                                    "folderType": "",
                                                                                                    "formats": {
                                                                                                      "dateFormat": "",
                                                                                                      "dateTimeFormat": "",
                                                                                                      "numberFormat": "",
                                                                                                    },
                                                                                                    "hasRestrictedActiveModule": false,
                                                                                                    "iconHref": "",
                                                                                                    "id": "",
                                                                                                    "isContainerTab": false,
                                                                                                    "isWorkbook": false,
                                                                                                    "name": "",
                                                                                                    "parentId": "",
                                                                                                    "parentPath": "",
                                                                                                    "path": "",
                                                                                                    "sortOrder": 0,
                                                                                                    "startUrl": "",
                                                                                                    "title": "",
                                                                                                    "type": "",
                                                                                                  },
                                                                                                  "fetchContainers": [Function],
                                                                                                  "fetchQueries": [Function],
                                                                                                  "fetchSchemas": [Function],
                                                                                                }
                                                                                              }
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-lookupSchema-0-4"
                                                                                              name="domainpropertiesrow-lookupSchema"
                                                                                              onChange={[Function]}
                                                                                              value="lists"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="select"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-lookupSchema-0-4"
                                                                                                name="domainpropertiesrow-lookupSchema"
                                                                                                onChange={[Function]}
                                                                                                placeholder="Select Schema"
                                                                                                value="lists"
                                                                                              >
                                                                                                <select
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-lookupSchema-0-4"
                                                                                                  name="domainpropertiesrow-lookupSchema"
                                                                                                  onChange={[Function]}
                                                                                                  placeholder="Select Schema"
                                                                                                  value="lists"
                                                                                                >
                                                                                                  <option
                                                                                                    disabled={true}
                                                                                                    key="_loading"
                                                                                                    value="lists"
                                                                                                  >
                                                                                                    Loading...
                                                                                                  </option>
                                                                                                </select>
                                                                                              </FormControl>
                                                                                            </SchemaSelectImpl>
                                                                                          </SchemaSelect>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Target Table
                                                                                          </div>
                                                                                          <TargetTableSelect
                                                                                            containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupQueryValue-0-4"
                                                                                            key="domainpropertiesrow-lookupQueryValue-0-4"
                                                                                            lookupURI="http://www.w3.org/2001/XMLSchema#string"
                                                                                            onChange={[Function]}
                                                                                            schemaName="lists"
                                                                                            shouldDisableNonExists={true}
                                                                                            value="http://www.w3.org/2001/XMLSchema#string|NIMHDemographics"
                                                                                          >
                                                                                            <TargetTableSelectImpl
                                                                                              containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                              context={
                                                                                                {
                                                                                                  "activeContainer": Container {
                                                                                                    "activeModules": [],
                                                                                                    "effectivePermissions": [],
                                                                                                    "folderType": "",
                                                                                                    "formats": {
                                                                                                      "dateFormat": "",
                                                                                                      "dateTimeFormat": "",
                                                                                                      "numberFormat": "",
                                                                                                    },
                                                                                                    "hasRestrictedActiveModule": false,
                                                                                                    "iconHref": "",
                                                                                                    "id": "",
                                                                                                    "isContainerTab": false,
                                                                                                    "isWorkbook": false,
                                                                                                    "name": "",
                                                                                                    "parentId": "",
                                                                                                    "parentPath": "",
                                                                                                    "path": "",
                                                                                                    "sortOrder": 0,
                                                                                                    "startUrl": "",
                                                                                                    "title": "",
                                                                                                    "type": "",
                                                                                                  },
                                                                                                  "fetchContainers": [Function],
                                                                                                  "fetchQueries": [Function],
                                                                                                  "fetchSchemas": [Function],
                                                                                                }
                                                                                              }
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-lookupQueryValue-0-4"
                                                                                              lookupURI="http://www.w3.org/2001/XMLSchema#string"
                                                                                              name="domainpropertiesrow-lookupQueryValue"
                                                                                              onChange={[Function]}
                                                                                              schemaName="lists"
                                                                                              shouldDisableNonExists={true}
                                                                                              value="http://www.w3.org/2001/XMLSchema#string|NIMHDemographics"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="select"
                                                                                                disabled={true}
                                                                                                id="domainpropertiesrow-lookupQueryValue-0-4"
                                                                                                name="domainpropertiesrow-lookupQueryValue"
                                                                                                onChange={[Function]}
                                                                                                value="http://www.w3.org/2001/XMLSchema#string|NIMHDemographics"
                                                                                              >
                                                                                                <select
                                                                                                  className="form-control"
                                                                                                  disabled={true}
                                                                                                  id="domainpropertiesrow-lookupQueryValue-0-4"
                                                                                                  name="domainpropertiesrow-lookupQueryValue"
                                                                                                  onChange={[Function]}
                                                                                                  value="http://www.w3.org/2001/XMLSchema#string|NIMHDemographics"
                                                                                                >
                                                                                                  <option
                                                                                                    disabled={true}
                                                                                                    key="_loading"
                                                                                                    value="http://www.w3.org/2001/XMLSchema#string|NIMHDemographics"
                                                                                                  >
                                                                                                    Loading...
                                                                                                  </option>
                                                                                                </select>
                                                                                              </FormControl>
                                                                                            </TargetTableSelectImpl>
                                                                                          </TargetTableSelect>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={6}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-6"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Lookup Validator
                                                                                          </div>
                                                                                          <Checkbox
                                                                                            bsClass="checkbox"
                                                                                            checked={false}
                                                                                            className="domain-field-checkbox-margin"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupValidator-0-4"
                                                                                            inline={false}
                                                                                            name="domainpropertiesrow-lookupValidator"
                                                                                            onChange={[Function]}
                                                                                            title=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-checkbox-margin checkbox"
                                                                                            >
                                                                                              <label
                                                                                                title=""
                                                                                              >
                                                                                                <input
                                                                                                  checked={false}
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-lookupValidator-0-4"
                                                                                                  name="domainpropertiesrow-lookupValidator"
                                                                                                  onChange={[Function]}
                                                                                                  type="checkbox"
                                                                                                />
                                                                                                <span
                                                                                                  className="domain-lookup-validator-text"
                                                                                                >
                                                                                                  Ensure Value Exists in Lookup Target
                                                                                                </span>
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Lookup Validator"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </label>
                                                                                            </div>
                                                                                          </Checkbox>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </LookupFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": true,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Fathersdaf",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": "NIMHDemographics",
                                                                                    "lookupSchema": "lists",
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Father",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26824,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14805,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": undefined,
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Lookup",
                                                                                        "name": "lookup",
                                                                                        "rangeURI": undefined,
                                                                                        "alternateRangeURI": undefined,
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Father",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={4}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-4"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-4"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-4"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Fathersdaf"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-4"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Fathersdaf"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-4"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-4"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-4"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-4"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": true,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Fathersdaf",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": "NIMHDemographics",
                                                                                    "lookupSchema": "lists",
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Father",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26824,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Father",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14805,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": undefined,
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|NIMHDemographics",
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Lookup",
                                                                                        "name": "lookup",
                                                                                        "rangeURI": undefined,
                                                                                        "alternateRangeURI": undefined,
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Father",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={4}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-4"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-4"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RangeValidatorHelpText />}
                                                                                                label="Create Range Validator"
                                                                                              >
                                                                                                Create Range 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Range Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-rangeValidator-0-4"
                                                                                                name="domainpropertiesrow-rangeValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-rangeValidator-0-4"
                                                                                                  name="domainpropertiesrow-rangeValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Range
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": false,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Species",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "Species",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26825,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                                                        "propertyValidators": [
                                                          {
                                                            "description": null,
                                                            "errorMessage": null,
                                                            "expression": "~lte=4000",
                                                            "name": "Text Length",
                                                            "new": true,
                                                            "properties": {},
                                                            "rowId": 14806,
                                                            "type": "Length",
                                                          },
                                                        ],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "Species",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={5}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-5"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-5"
                                                      index={5}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-5"
                                                        index={5}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-5"
                                                          index={5}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-5"
                                                            dropAnimationFinished={[Function]}
                                                            index={5}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-5"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={5}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-5"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": false,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Species",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "Species",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26825,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                                                                        "propertyValidators": [
                                                                          {
                                                                            "description": null,
                                                                            "errorMessage": null,
                                                                            "expression": "~lte=4000",
                                                                            "name": "Text Length",
                                                                            "new": true,
                                                                            "properties": {},
                                                                            "rowId": 14806,
                                                                            "type": "Length",
                                                                          },
                                                                        ],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Text",
                                                                          "name": "string",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": "xsd:string",
                                                                          "shortDisplay": "String",
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "Species",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={5}
                                                                    label="Species"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-5"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-5"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-5"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-5"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-5"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-5"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-5"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="Species"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-5"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="Species"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-5"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="string"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-5"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="string"
                                                                                >
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="ParticipantId"
                                                                                    value="ParticipantId"
                                                                                  >
                                                                                    Subject/Participant
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-5"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-5"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-5"
                                                                        />
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-5"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-5"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": false,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Species",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "Species",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26825,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                                                                          "propertyValidators": [
                                                                            {
                                                                              "description": null,
                                                                              "errorMessage": null,
                                                                              "expression": "~lte=4000",
                                                                              "name": "Text Length",
                                                                              "new": true,
                                                                              "properties": {},
                                                                              "rowId": 14806,
                                                                              "type": "Length",
                                                                            },
                                                                          ],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Text",
                                                                              "name": "string",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "alternateRangeURI": "xsd:string",
                                                                              "shortDisplay": "String",
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "Species",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={5}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <TextFieldOptions
                                                                                appPropertiesOnly={false}
                                                                                domainIndex={0}
                                                                                index={5}
                                                                                label="Text Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scale={4000}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Text Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Text Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    Sets the maximum character count for a text field.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Anything over 4,000 characters will use the 'Unlimited' designation.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Maximum Text Length"
                                                                                            >
                                                                                              Maximum Text 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Length
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Maximum Text Length"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                      target={
                                                                                                        <span
                                                                                                          class="label-help-target"
                                                                                                        >
                                                                                                          <span
                                                                                                            class="label-help-icon fa fa-question-circle"
                                                                                                          />
                                                                                                        </span>
                                                                                                      }
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        target={
                                                                                                          <span
                                                                                                            class="label-help-target"
                                                                                                          >
                                                                                                            <span
                                                                                                              class="label-help-icon fa fa-question-circle"
                                                                                                            />
                                                                                                          </span>
                                                                                                        }
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        className="domain-text-options-col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="domain-text-options-col col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={false}
                                                                                            className="domain-text-options-radio1 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-maxLength-0-5"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="maxLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={false}
                                                                                              className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-maxLength-0-5"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="maxLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div>
                                                                                            Unlimited
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={true}
                                                                                            className="domain-text-options-radio2 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            id="domainpropertiesrow-customLength-0-5"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="customLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={true}
                                                                                              className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                              id="domainpropertiesrow-customLength-0-5"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="customLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <span
                                                                                            className="domain-text-options-length domain-field-float-left"
                                                                                          >
                                                                                            No longer than 
                                                                                            <FormControl
                                                                                              bsClass="form-control"
                                                                                              className="domain-text-length-field"
                                                                                              componentClass="input"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-scale-0-5"
                                                                                              name="domainpropertiesrow-scale"
                                                                                              onChange={[Function]}
                                                                                              type="number"
                                                                                              value={4000}
                                                                                            >
                                                                                              <input
                                                                                                className="domain-text-length-field form-control"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-scale-0-5"
                                                                                                name="domainpropertiesrow-scale"
                                                                                                onChange={[Function]}
                                                                                                type="number"
                                                                                                value={4000}
                                                                                              />
                                                                                            </FormControl>
                                                                                             characters
                                                                                          </span>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={0}
                                                                                    index={5}
                                                                                    label="Text Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scale={4000}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </TextFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Species",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Species",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26825,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14806,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Species",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={5}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-5"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-5"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-5"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Species"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-5"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Species"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-5"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-5"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-5"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-5"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}"
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Species",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Species",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26825,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Species",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14806,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": "/list/grid.view?name=NIMHDemographics&query.Species~eq=\${Species}",
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Species",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={5}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-5"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-5"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RegexValidatorHelpText />}
                                                                                                label="Create Regular Expression Validator"
                                                                                              >
                                                                                                Create Regular Expression 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Regular Expression Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-regexValidator-0-5"
                                                                                                name="domainpropertiesrow-regexValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-regexValidator-0-5"
                                                                                                  name="domainpropertiesrow-regexValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Regex
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": false,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Image",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "Image",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26826,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                                                        "propertyValidators": [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Attachment",
                                                            "name": "attachment",
                                                            "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "Image",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={6}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-6"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-6"
                                                      index={6}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-6"
                                                        index={6}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-6"
                                                          index={6}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-6"
                                                            dropAnimationFinished={[Function]}
                                                            index={6}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-6"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={6}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-6"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": false,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Image",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "Image",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26826,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                                                                        "propertyValidators": [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Attachment",
                                                                          "name": "attachment",
                                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Attachment",
                                                                            "name": "attachment",
                                                                            "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "Image",
                                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={6}
                                                                    label="Image"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-6"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-6"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-6"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-6"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-6"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-6"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-6"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="Image"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-6"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="Image"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-6"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="attachment"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-6"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="attachment"
                                                                                >
                                                                                  <option
                                                                                    key="attachment"
                                                                                    value="attachment"
                                                                                  >
                                                                                    Attachment
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-6"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-6"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-6"
                                                                        />
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-6"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-6"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": false,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Image",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "Image",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26826,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                                                                          "propertyValidators": [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Attachment",
                                                                            "name": "attachment",
                                                                            "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Attachment",
                                                                              "name": "attachment",
                                                                              "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                              "alternateRangeURI": undefined,
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "Image",
                                                                            "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={6}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <Memo()
                                                                                displayOption={null}
                                                                                domainIndex={0}
                                                                                index={6}
                                                                                label="Attachment"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            helpTipBody={
                                                                                              <React.Fragment>
                                                                                                <p>
                                                                                                  Set the default behavior of attachment links when clicked in grids and elsewhere in LabKey.
                                                                                                </p>
                                                                                              </React.Fragment>
                                                                                            }
                                                                                            title="Attachment Behavior"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Attachment Behavior
                                                                                              <Component
                                                                                                id="tooltip"
                                                                                                title="Attachment Behavior"
                                                                                              >
                                                                                                <span
                                                                                                  className="label-help-target"
                                                                                                  onMouseOut={[Function]}
                                                                                                  onMouseOver={[Function]}
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-icon fa fa-question-circle"
                                                                                                  />
                                                                                                  <Overlay
                                                                                                    animation={[Function]}
                                                                                                    placement="right"
                                                                                                    rootClose={false}
                                                                                                    show={false}
                                                                                                  >
                                                                                                    <Overlay
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                      transition={[Function]}
                                                                                                    />
                                                                                                  </Overlay>
                                                                                                </span>
                                                                                              </Component>
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    className="domain-field-label"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="domain-field-label row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="select"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-format-0-6"
                                                                                            name="domainpropertiesrow-format"
                                                                                            onChange={[Function]}
                                                                                            value={null}
                                                                                          >
                                                                                            <select
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-format-0-6"
                                                                                              name="domainpropertiesrow-format"
                                                                                              onChange={[Function]}
                                                                                              value={null}
                                                                                            >
                                                                                              <option
                                                                                                key="domainpropertiesrow-formatoption-inline-0-6"
                                                                                                value="inline"
                                                                                              >
                                                                                                Show Attachment in Browser
                                                                                              </option>
                                                                                              <option
                                                                                                key="domainpropertiesrow-formatoption-attachment-0-6"
                                                                                                value="attachment"
                                                                                              >
                                                                                                Download Attachment
                                                                                              </option>
                                                                                            </select>
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </Memo()>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Image",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Image",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26826,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                                                                                    "propertyValidators": [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Attachment",
                                                                                      "name": "attachment",
                                                                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Attachment",
                                                                                        "name": "attachment",
                                                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                                        "alternateRangeURI": undefined,
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Image",
                                                                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={6}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-6"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-6"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-6"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Image"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-6"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Image"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-6"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-6"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-6"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-6"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE"
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Image",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Image",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26826,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Image",
                                                                                    "propertyValidators": [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Attachment",
                                                                                      "name": "attachment",
                                                                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Attachment",
                                                                                        "name": "attachment",
                                                                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                                        "alternateRangeURI": undefined,
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Image",
                                                                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={6}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-6"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-6"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": true,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Occupation",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": "LookUpToSampleset2",
                                                        "lookupSchema": "samples",
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "Occupation",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26827,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                        "propertyValidators": [
                                                          {
                                                            "description": null,
                                                            "errorMessage": null,
                                                            "expression": "~lte=4000",
                                                            "name": "Text Length",
                                                            "new": true,
                                                            "properties": {},
                                                            "rowId": 14807,
                                                            "type": "Length",
                                                          },
                                                        ],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": null,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Lookup",
                                                            "name": "lookup",
                                                            "rangeURI": undefined,
                                                            "alternateRangeURI": undefined,
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "Occupation",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={7}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-7"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-7"
                                                      index={7}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-7"
                                                        index={7}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-7"
                                                          index={7}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-7"
                                                            dropAnimationFinished={[Function]}
                                                            index={7}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-7"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={7}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-7"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": true,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Occupation",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": "LookUpToSampleset2",
                                                                        "lookupSchema": "samples",
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "Occupation",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26827,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                                        "propertyValidators": [
                                                                          {
                                                                            "description": null,
                                                                            "errorMessage": null,
                                                                            "expression": "~lte=4000",
                                                                            "name": "Text Length",
                                                                            "new": true,
                                                                            "properties": {},
                                                                            "rowId": 14807,
                                                                            "type": "Length",
                                                                          },
                                                                        ],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": null,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": undefined,
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": undefined,
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "Occupation",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={7}
                                                                    label="Occupation"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-7"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-7"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-7"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-7"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-7"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-7"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-7"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="Occupation"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-7"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="Occupation"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-7"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="lookup"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-7"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="lookup"
                                                                                >
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="ParticipantId"
                                                                                    value="ParticipantId"
                                                                                  >
                                                                                    Subject/Participant
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-7"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-7"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-7"
                                                                        >
                                                                          Current Folder &gt; samples
                                                                           &gt; 
                                                                          <a
                                                                            href="/labkey/query/testContainer/executeQuery.view?schemaName=samples&query.queryName=LookUpToSampleset2"
                                                                          >
                                                                             
                                                                            LookUpToSampleset2
                                                                             
                                                                          </a>
                                                                        </div>
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-7"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-7"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": true,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Occupation",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": "LookUpToSampleset2",
                                                                          "lookupSchema": "samples",
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "Occupation",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26827,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                                          "propertyValidators": [
                                                                            {
                                                                              "description": null,
                                                                              "errorMessage": null,
                                                                              "expression": "~lte=4000",
                                                                              "name": "Text Length",
                                                                              "new": true,
                                                                              "properties": {},
                                                                              "rowId": 14807,
                                                                              "type": "Length",
                                                                            },
                                                                          ],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": null,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": undefined,
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Lookup",
                                                                              "name": "lookup",
                                                                              "rangeURI": undefined,
                                                                              "alternateRangeURI": undefined,
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "Occupation",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={7}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <LookupFieldOptions
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": true,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Occupation",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": "LookUpToSampleset2",
                                                                                    "lookupSchema": "samples",
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Occupation",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26827,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14807,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": undefined,
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Lookup",
                                                                                        "name": "lookup",
                                                                                        "rangeURI": undefined,
                                                                                        "alternateRangeURI": undefined,
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Occupation",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={7}
                                                                                label="Lookup Definition Options"
                                                                                lockType="NotLocked"
                                                                                lookupContainer="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                onChange={[Function]}
                                                                                onMultiChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-section-heading"
                                                                                          >
                                                                                            Lookup Definition Options
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Target Folder
                                                                                          </div>
                                                                                          <FolderSelect
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupContainer-0-7"
                                                                                            key="domainpropertiesrow-lookupContainer-0-7"
                                                                                            onChange={[Function]}
                                                                                            value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                          >
                                                                                            <FolderSelectImpl
                                                                                              context={
                                                                                                {
                                                                                                  "activeContainer": Container {
                                                                                                    "activeModules": [],
                                                                                                    "effectivePermissions": [],
                                                                                                    "folderType": "",
                                                                                                    "formats": {
                                                                                                      "dateFormat": "",
                                                                                                      "dateTimeFormat": "",
                                                                                                      "numberFormat": "",
                                                                                                    },
                                                                                                    "hasRestrictedActiveModule": false,
                                                                                                    "iconHref": "",
                                                                                                    "id": "",
                                                                                                    "isContainerTab": false,
                                                                                                    "isWorkbook": false,
                                                                                                    "name": "",
                                                                                                    "parentId": "",
                                                                                                    "parentPath": "",
                                                                                                    "path": "",
                                                                                                    "sortOrder": 0,
                                                                                                    "startUrl": "",
                                                                                                    "title": "",
                                                                                                    "type": "",
                                                                                                  },
                                                                                                  "fetchContainers": [Function],
                                                                                                  "fetchQueries": [Function],
                                                                                                  "fetchSchemas": [Function],
                                                                                                }
                                                                                              }
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-lookupContainer-0-7"
                                                                                              name="domainpropertiesrow-lookupContainer"
                                                                                              onChange={[Function]}
                                                                                              value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="select"
                                                                                                context={
                                                                                                  {
                                                                                                    "activeContainer": Container {
                                                                                                      "activeModules": [],
                                                                                                      "effectivePermissions": [],
                                                                                                      "folderType": "",
                                                                                                      "formats": {
                                                                                                        "dateFormat": "",
                                                                                                        "dateTimeFormat": "",
                                                                                                        "numberFormat": "",
                                                                                                      },
                                                                                                      "hasRestrictedActiveModule": false,
                                                                                                      "iconHref": "",
                                                                                                      "id": "",
                                                                                                      "isContainerTab": false,
                                                                                                      "isWorkbook": false,
                                                                                                      "name": "",
                                                                                                      "parentId": "",
                                                                                                      "parentPath": "",
                                                                                                      "path": "",
                                                                                                      "sortOrder": 0,
                                                                                                      "startUrl": "",
                                                                                                      "title": "",
                                                                                                      "type": "",
                                                                                                    },
                                                                                                    "fetchContainers": [Function],
                                                                                                    "fetchQueries": [Function],
                                                                                                    "fetchSchemas": [Function],
                                                                                                  }
                                                                                                }
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-lookupContainer-0-7"
                                                                                                name="domainpropertiesrow-lookupContainer"
                                                                                                onChange={[Function]}
                                                                                                value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                              >
                                                                                                <select
                                                                                                  className="form-control"
                                                                                                  context={
                                                                                                    {
                                                                                                      "activeContainer": Container {
                                                                                                        "activeModules": [],
                                                                                                        "effectivePermissions": [],
                                                                                                        "folderType": "",
                                                                                                        "formats": {
                                                                                                          "dateFormat": "",
                                                                                                          "dateTimeFormat": "",
                                                                                                          "numberFormat": "",
                                                                                                        },
                                                                                                        "hasRestrictedActiveModule": false,
                                                                                                        "iconHref": "",
                                                                                                        "id": "",
                                                                                                        "isContainerTab": false,
                                                                                                        "isWorkbook": false,
                                                                                                        "name": "",
                                                                                                        "parentId": "",
                                                                                                        "parentPath": "",
                                                                                                        "path": "",
                                                                                                        "sortOrder": 0,
                                                                                                        "startUrl": "",
                                                                                                        "title": "",
                                                                                                        "type": "",
                                                                                                      },
                                                                                                      "fetchContainers": [Function],
                                                                                                      "fetchQueries": [Function],
                                                                                                      "fetchSchemas": [Function],
                                                                                                    }
                                                                                                  }
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-lookupContainer-0-7"
                                                                                                  name="domainpropertiesrow-lookupContainer"
                                                                                                  onChange={[Function]}
                                                                                                  value="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                                >
                                                                                                  <option
                                                                                                    key="_current"
                                                                                                    value=""
                                                                                                  >
                                                                                                    Current 
                                                                                                    Folder
                                                                                                  </option>
                                                                                                </select>
                                                                                              </FormControl>
                                                                                            </FolderSelectImpl>
                                                                                          </FolderSelect>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Target Schema
                                                                                          </div>
                                                                                          <SchemaSelect
                                                                                            containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupSchema-0-7"
                                                                                            key="domainpropertiesrow-lookupSchema-0-7"
                                                                                            onChange={[Function]}
                                                                                            value="samples"
                                                                                          >
                                                                                            <SchemaSelectImpl
                                                                                              containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                              context={
                                                                                                {
                                                                                                  "activeContainer": Container {
                                                                                                    "activeModules": [],
                                                                                                    "effectivePermissions": [],
                                                                                                    "folderType": "",
                                                                                                    "formats": {
                                                                                                      "dateFormat": "",
                                                                                                      "dateTimeFormat": "",
                                                                                                      "numberFormat": "",
                                                                                                    },
                                                                                                    "hasRestrictedActiveModule": false,
                                                                                                    "iconHref": "",
                                                                                                    "id": "",
                                                                                                    "isContainerTab": false,
                                                                                                    "isWorkbook": false,
                                                                                                    "name": "",
                                                                                                    "parentId": "",
                                                                                                    "parentPath": "",
                                                                                                    "path": "",
                                                                                                    "sortOrder": 0,
                                                                                                    "startUrl": "",
                                                                                                    "title": "",
                                                                                                    "type": "",
                                                                                                  },
                                                                                                  "fetchContainers": [Function],
                                                                                                  "fetchQueries": [Function],
                                                                                                  "fetchSchemas": [Function],
                                                                                                }
                                                                                              }
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-lookupSchema-0-7"
                                                                                              name="domainpropertiesrow-lookupSchema"
                                                                                              onChange={[Function]}
                                                                                              value="samples"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="select"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-lookupSchema-0-7"
                                                                                                name="domainpropertiesrow-lookupSchema"
                                                                                                onChange={[Function]}
                                                                                                placeholder="Select Schema"
                                                                                                value="samples"
                                                                                              >
                                                                                                <select
                                                                                                  className="form-control"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-lookupSchema-0-7"
                                                                                                  name="domainpropertiesrow-lookupSchema"
                                                                                                  onChange={[Function]}
                                                                                                  placeholder="Select Schema"
                                                                                                  value="samples"
                                                                                                >
                                                                                                  <option
                                                                                                    disabled={true}
                                                                                                    key="_loading"
                                                                                                    value="samples"
                                                                                                  >
                                                                                                    Loading...
                                                                                                  </option>
                                                                                                </select>
                                                                                              </FormControl>
                                                                                            </SchemaSelectImpl>
                                                                                          </SchemaSelect>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={2}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-2"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Target Table
                                                                                          </div>
                                                                                          <TargetTableSelect
                                                                                            containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupQueryValue-0-7"
                                                                                            key="domainpropertiesrow-lookupQueryValue-0-7"
                                                                                            lookupURI="http://www.w3.org/2001/XMLSchema#string"
                                                                                            onChange={[Function]}
                                                                                            schemaName="samples"
                                                                                            shouldDisableNonExists={true}
                                                                                            value="http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2"
                                                                                          >
                                                                                            <TargetTableSelectImpl
                                                                                              containerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                                              context={
                                                                                                {
                                                                                                  "activeContainer": Container {
                                                                                                    "activeModules": [],
                                                                                                    "effectivePermissions": [],
                                                                                                    "folderType": "",
                                                                                                    "formats": {
                                                                                                      "dateFormat": "",
                                                                                                      "dateTimeFormat": "",
                                                                                                      "numberFormat": "",
                                                                                                    },
                                                                                                    "hasRestrictedActiveModule": false,
                                                                                                    "iconHref": "",
                                                                                                    "id": "",
                                                                                                    "isContainerTab": false,
                                                                                                    "isWorkbook": false,
                                                                                                    "name": "",
                                                                                                    "parentId": "",
                                                                                                    "parentPath": "",
                                                                                                    "path": "",
                                                                                                    "sortOrder": 0,
                                                                                                    "startUrl": "",
                                                                                                    "title": "",
                                                                                                    "type": "",
                                                                                                  },
                                                                                                  "fetchContainers": [Function],
                                                                                                  "fetchQueries": [Function],
                                                                                                  "fetchSchemas": [Function],
                                                                                                }
                                                                                              }
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-lookupQueryValue-0-7"
                                                                                              lookupURI="http://www.w3.org/2001/XMLSchema#string"
                                                                                              name="domainpropertiesrow-lookupQueryValue"
                                                                                              onChange={[Function]}
                                                                                              schemaName="samples"
                                                                                              shouldDisableNonExists={true}
                                                                                              value="http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2"
                                                                                            >
                                                                                              <FormControl
                                                                                                bsClass="form-control"
                                                                                                componentClass="select"
                                                                                                disabled={true}
                                                                                                id="domainpropertiesrow-lookupQueryValue-0-7"
                                                                                                name="domainpropertiesrow-lookupQueryValue"
                                                                                                onChange={[Function]}
                                                                                                value="http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2"
                                                                                              >
                                                                                                <select
                                                                                                  className="form-control"
                                                                                                  disabled={true}
                                                                                                  id="domainpropertiesrow-lookupQueryValue-0-7"
                                                                                                  name="domainpropertiesrow-lookupQueryValue"
                                                                                                  onChange={[Function]}
                                                                                                  value="http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2"
                                                                                                >
                                                                                                  <option
                                                                                                    disabled={true}
                                                                                                    key="_loading"
                                                                                                    value="http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2"
                                                                                                  >
                                                                                                    Loading...
                                                                                                  </option>
                                                                                                </select>
                                                                                              </FormControl>
                                                                                            </TargetTableSelectImpl>
                                                                                          </TargetTableSelect>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={6}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-6"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Lookup Validator
                                                                                          </div>
                                                                                          <Checkbox
                                                                                            bsClass="checkbox"
                                                                                            checked={false}
                                                                                            className="domain-field-checkbox-margin"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-lookupValidator-0-7"
                                                                                            inline={false}
                                                                                            name="domainpropertiesrow-lookupValidator"
                                                                                            onChange={[Function]}
                                                                                            title=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-checkbox-margin checkbox"
                                                                                            >
                                                                                              <label
                                                                                                title=""
                                                                                              >
                                                                                                <input
                                                                                                  checked={false}
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-lookupValidator-0-7"
                                                                                                  name="domainpropertiesrow-lookupValidator"
                                                                                                  onChange={[Function]}
                                                                                                  type="checkbox"
                                                                                                />
                                                                                                <span
                                                                                                  className="domain-lookup-validator-text"
                                                                                                >
                                                                                                  Ensure Value Exists in Lookup Target
                                                                                                </span>
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Lookup Validator"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </label>
                                                                                            </div>
                                                                                          </Checkbox>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </LookupFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": true,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Occupation",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": "LookUpToSampleset2",
                                                                                    "lookupSchema": "samples",
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Occupation",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26827,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14807,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": undefined,
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Lookup",
                                                                                        "name": "lookup",
                                                                                        "rangeURI": undefined,
                                                                                        "alternateRangeURI": undefined,
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Occupation",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={7}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-7"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-7"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-7"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Occupation"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-7"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Occupation"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-7"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-7"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-7"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-7"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": true,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Occupation",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": "LookUpToSampleset2",
                                                                                    "lookupSchema": "samples",
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Occupation",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26827,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Occupation",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14807,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": undefined,
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": "http://www.w3.org/2001/XMLSchema#string|LookUpToSampleset2",
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Lookup",
                                                                                        "name": "lookup",
                                                                                        "rangeURI": undefined,
                                                                                        "alternateRangeURI": undefined,
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Occupation",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={7}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-7"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-7"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RangeValidatorHelpText />}
                                                                                                label="Create Range Validator"
                                                                                              >
                                                                                                Create Range 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Range Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-rangeValidator-0-7"
                                                                                                name="domainpropertiesrow-rangeValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-rangeValidator-0-7"
                                                                                                  name="domainpropertiesrow-rangeValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Range
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": false,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Marital Status",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "MaritalStatus",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26828,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                                                        "propertyValidators": [
                                                          {
                                                            "description": null,
                                                            "errorMessage": null,
                                                            "expression": "~lte=4000",
                                                            "name": "Text Length",
                                                            "new": true,
                                                            "properties": {},
                                                            "rowId": 14808,
                                                            "type": "Length",
                                                          },
                                                        ],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": null,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "MaritalStatus",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={8}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-8"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-8"
                                                      index={8}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-8"
                                                        index={8}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-8"
                                                          index={8}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-8"
                                                            dropAnimationFinished={[Function]}
                                                            index={8}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-8"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={8}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-8"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": false,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Marital Status",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "MaritalStatus",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26828,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                                                                        "propertyValidators": [
                                                                          {
                                                                            "description": null,
                                                                            "errorMessage": null,
                                                                            "expression": "~lte=4000",
                                                                            "name": "Text Length",
                                                                            "new": true,
                                                                            "properties": {},
                                                                            "rowId": 14808,
                                                                            "type": "Length",
                                                                          },
                                                                        ],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": null,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Text",
                                                                          "name": "string",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": "xsd:string",
                                                                          "shortDisplay": "String",
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "MaritalStatus",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={8}
                                                                    label="MaritalStatus"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-8"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-8"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-8"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-8"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-8"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-8"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-8"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="MaritalStatus"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-8"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="MaritalStatus"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-8"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="string"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-8"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="string"
                                                                                >
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="ParticipantId"
                                                                                    value="ParticipantId"
                                                                                  >
                                                                                    Subject/Participant
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-8"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-8"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-8"
                                                                        />
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-8"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-8"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": false,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Marital Status",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "MaritalStatus",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26828,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                                                                          "propertyValidators": [
                                                                            {
                                                                              "description": null,
                                                                              "errorMessage": null,
                                                                              "expression": "~lte=4000",
                                                                              "name": "Text Length",
                                                                              "new": true,
                                                                              "properties": {},
                                                                              "rowId": 14808,
                                                                              "type": "Length",
                                                                            },
                                                                          ],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": null,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Text",
                                                                              "name": "string",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "alternateRangeURI": "xsd:string",
                                                                              "shortDisplay": "String",
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "MaritalStatus",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={8}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <TextFieldOptions
                                                                                appPropertiesOnly={false}
                                                                                domainIndex={0}
                                                                                index={8}
                                                                                label="Text Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scale={4000}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Text Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Text Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    Sets the maximum character count for a text field.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Anything over 4,000 characters will use the 'Unlimited' designation.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Maximum Text Length"
                                                                                            >
                                                                                              Maximum Text 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Length
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Maximum Text Length"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                      target={
                                                                                                        <span
                                                                                                          class="label-help-target"
                                                                                                        >
                                                                                                          <span
                                                                                                            class="label-help-icon fa fa-question-circle"
                                                                                                          />
                                                                                                        </span>
                                                                                                      }
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        target={
                                                                                                          <span
                                                                                                            class="label-help-target"
                                                                                                          >
                                                                                                            <span
                                                                                                              class="label-help-icon fa fa-question-circle"
                                                                                                            />
                                                                                                          </span>
                                                                                                        }
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        className="domain-text-options-col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="domain-text-options-col col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={false}
                                                                                            className="domain-text-options-radio1 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-maxLength-0-8"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="maxLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={false}
                                                                                              className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-maxLength-0-8"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="maxLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div>
                                                                                            Unlimited
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={true}
                                                                                            className="domain-text-options-radio2 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            id="domainpropertiesrow-customLength-0-8"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="customLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={true}
                                                                                              className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                              id="domainpropertiesrow-customLength-0-8"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="customLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <span
                                                                                            className="domain-text-options-length domain-field-float-left"
                                                                                          >
                                                                                            No longer than 
                                                                                            <FormControl
                                                                                              bsClass="form-control"
                                                                                              className="domain-text-length-field"
                                                                                              componentClass="input"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-scale-0-8"
                                                                                              name="domainpropertiesrow-scale"
                                                                                              onChange={[Function]}
                                                                                              type="number"
                                                                                              value={4000}
                                                                                            >
                                                                                              <input
                                                                                                className="domain-text-length-field form-control"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-scale-0-8"
                                                                                                name="domainpropertiesrow-scale"
                                                                                                onChange={[Function]}
                                                                                                type="number"
                                                                                                value={4000}
                                                                                              />
                                                                                            </FormControl>
                                                                                             characters
                                                                                          </span>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={0}
                                                                                    index={8}
                                                                                    label="Text Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scale={4000}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </TextFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Marital Status",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "MaritalStatus",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26828,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14808,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "MaritalStatus",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={8}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-8"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-8"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-8"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Marital Status"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-8"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Marital Status"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-8"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-8"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-8"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-8"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Marital Status",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "MaritalStatus",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26828,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.MaritalStatus",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14808,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "MaritalStatus",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={8}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-8"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-8"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RegexValidatorHelpText />}
                                                                                                label="Create Regular Expression Validator"
                                                                                              >
                                                                                                Create Regular Expression 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Regular Expression Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-regexValidator-0-8"
                                                                                                name="domainpropertiesrow-regexValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-regexValidator-0-8"
                                                                                                  name="domainpropertiesrow-regexValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Regex
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": false,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Current Status",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "CurrentStatus",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26829,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                                                        "propertyValidators": [
                                                          {
                                                            "description": null,
                                                            "errorMessage": null,
                                                            "expression": "~lte=4000",
                                                            "name": "Text Length",
                                                            "new": true,
                                                            "properties": {},
                                                            "rowId": 14809,
                                                            "type": "Length",
                                                          },
                                                        ],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": null,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "CurrentStatus",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={9}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-9"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-9"
                                                      index={9}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-9"
                                                        index={9}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-9"
                                                          index={9}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-9"
                                                            dropAnimationFinished={[Function]}
                                                            index={9}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-9"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={9}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-9"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": false,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Current Status",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "CurrentStatus",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26829,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                                                                        "propertyValidators": [
                                                                          {
                                                                            "description": null,
                                                                            "errorMessage": null,
                                                                            "expression": "~lte=4000",
                                                                            "name": "Text Length",
                                                                            "new": true,
                                                                            "properties": {},
                                                                            "rowId": 14809,
                                                                            "type": "Length",
                                                                          },
                                                                        ],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": null,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Text",
                                                                          "name": "string",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": "xsd:string",
                                                                          "shortDisplay": "String",
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "CurrentStatus",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={9}
                                                                    label="CurrentStatus"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-9"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-9"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-9"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-9"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-9"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-9"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-9"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="CurrentStatus"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-9"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="CurrentStatus"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-9"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="string"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-9"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="string"
                                                                                >
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="ParticipantId"
                                                                                    value="ParticipantId"
                                                                                  >
                                                                                    Subject/Participant
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-9"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-9"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-9"
                                                                        />
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-9"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-9"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": false,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Current Status",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "CurrentStatus",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26829,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                                                                          "propertyValidators": [
                                                                            {
                                                                              "description": null,
                                                                              "errorMessage": null,
                                                                              "expression": "~lte=4000",
                                                                              "name": "Text Length",
                                                                              "new": true,
                                                                              "properties": {},
                                                                              "rowId": 14809,
                                                                              "type": "Length",
                                                                            },
                                                                          ],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": null,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Text",
                                                                              "name": "string",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "alternateRangeURI": "xsd:string",
                                                                              "shortDisplay": "String",
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "CurrentStatus",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={9}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <TextFieldOptions
                                                                                appPropertiesOnly={false}
                                                                                domainIndex={0}
                                                                                index={9}
                                                                                label="Text Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scale={4000}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Text Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Text Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    Sets the maximum character count for a text field.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Anything over 4,000 characters will use the 'Unlimited' designation.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Maximum Text Length"
                                                                                            >
                                                                                              Maximum Text 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Length
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Maximum Text Length"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                      target={
                                                                                                        <span
                                                                                                          class="label-help-target"
                                                                                                        >
                                                                                                          <span
                                                                                                            class="label-help-icon fa fa-question-circle"
                                                                                                          />
                                                                                                        </span>
                                                                                                      }
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        target={
                                                                                                          <span
                                                                                                            class="label-help-target"
                                                                                                          >
                                                                                                            <span
                                                                                                              class="label-help-icon fa fa-question-circle"
                                                                                                            />
                                                                                                          </span>
                                                                                                        }
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        className="domain-text-options-col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="domain-text-options-col col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={false}
                                                                                            className="domain-text-options-radio1 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-maxLength-0-9"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="maxLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={false}
                                                                                              className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-maxLength-0-9"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="maxLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div>
                                                                                            Unlimited
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={true}
                                                                                            className="domain-text-options-radio2 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            id="domainpropertiesrow-customLength-0-9"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="customLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={true}
                                                                                              className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                              id="domainpropertiesrow-customLength-0-9"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="customLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <span
                                                                                            className="domain-text-options-length domain-field-float-left"
                                                                                          >
                                                                                            No longer than 
                                                                                            <FormControl
                                                                                              bsClass="form-control"
                                                                                              className="domain-text-length-field"
                                                                                              componentClass="input"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-scale-0-9"
                                                                                              name="domainpropertiesrow-scale"
                                                                                              onChange={[Function]}
                                                                                              type="number"
                                                                                              value={4000}
                                                                                            >
                                                                                              <input
                                                                                                className="domain-text-length-field form-control"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-scale-0-9"
                                                                                                name="domainpropertiesrow-scale"
                                                                                                onChange={[Function]}
                                                                                                type="number"
                                                                                                value={4000}
                                                                                              />
                                                                                            </FormControl>
                                                                                             characters
                                                                                          </span>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={0}
                                                                                    index={9}
                                                                                    label="Text Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scale={4000}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </TextFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Current Status",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "CurrentStatus",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26829,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14809,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "CurrentStatus",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={9}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-9"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-9"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-9"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Current Status"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-9"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Current Status"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-9"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-9"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-9"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-9"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Current Status",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "CurrentStatus",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26829,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CurrentStatus",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14809,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "CurrentStatus",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={9}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-9"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-9"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RegexValidatorHelpText />}
                                                                                                label="Create Regular Expression Validator"
                                                                                              >
                                                                                                Create Regular Expression 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Regular Expression Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-regexValidator-0-9"
                                                                                                name="domainpropertiesrow-regexValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-regexValidator-0-9"
                                                                                                  name="domainpropertiesrow-regexValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Regex
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": false,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Gender",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "Gender",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26830,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                                                        "propertyValidators": [
                                                          {
                                                            "description": null,
                                                            "errorMessage": null,
                                                            "expression": "~lte=4000",
                                                            "name": "Text Length",
                                                            "new": true,
                                                            "properties": {},
                                                            "rowId": 14810,
                                                            "type": "Length",
                                                          },
                                                        ],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 4000,
                                                        "URL": null,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Text",
                                                            "name": "string",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                            "alternateRangeURI": "xsd:string",
                                                            "shortDisplay": "String",
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "Gender",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={10}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-10"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-10"
                                                      index={10}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-10"
                                                        index={10}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-10"
                                                          index={10}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-10"
                                                            dropAnimationFinished={[Function]}
                                                            index={10}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-10"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={10}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-10"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": false,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Gender",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "Gender",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26830,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                                                                        "propertyValidators": [
                                                                          {
                                                                            "description": null,
                                                                            "errorMessage": null,
                                                                            "expression": "~lte=4000",
                                                                            "name": "Text Length",
                                                                            "new": true,
                                                                            "properties": {},
                                                                            "rowId": 14810,
                                                                            "type": "Length",
                                                                          },
                                                                        ],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 4000,
                                                                        "URL": null,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Text",
                                                                          "name": "string",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": "xsd:string",
                                                                          "shortDisplay": "String",
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "Gender",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={10}
                                                                    label="Gender"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-10"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-10"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-10"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-10"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-10"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-10"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-10"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="Gender"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-10"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="Gender"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-10"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="string"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-10"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="string"
                                                                                >
                                                                                  <option
                                                                                    key="flag"
                                                                                    value="flag"
                                                                                  >
                                                                                    Flag
                                                                                  </option>
                                                                                  <option
                                                                                    key="lookup"
                                                                                    value="lookup"
                                                                                  >
                                                                                    Lookup
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="ParticipantId"
                                                                                    value="ParticipantId"
                                                                                  >
                                                                                    Subject/Participant
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="textChoice"
                                                                                    value="textChoice"
                                                                                  >
                                                                                    Text Choice
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-10"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-10"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-10"
                                                                        />
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-10"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-10"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": false,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Gender",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "Gender",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26830,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                                                                          "propertyValidators": [
                                                                            {
                                                                              "description": null,
                                                                              "errorMessage": null,
                                                                              "expression": "~lte=4000",
                                                                              "name": "Text Length",
                                                                              "new": true,
                                                                              "properties": {},
                                                                              "rowId": 14810,
                                                                              "type": "Length",
                                                                            },
                                                                          ],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 4000,
                                                                          "URL": null,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Text",
                                                                            "name": "string",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": "xsd:string",
                                                                            "shortDisplay": "String",
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Text",
                                                                              "name": "string",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                              "alternateRangeURI": "xsd:string",
                                                                              "shortDisplay": "String",
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "Gender",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={10}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <TextFieldOptions
                                                                                appPropertiesOnly={false}
                                                                                domainIndex={0}
                                                                                index={10}
                                                                                label="Text Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                                scale={4000}
                                                                                scannable={false}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Text Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Text Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    Sets the maximum character count for a text field.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Anything over 4,000 characters will use the 'Unlimited' designation.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Maximum Text Length"
                                                                                            >
                                                                                              Maximum Text 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Length
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Maximum Text Length"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                      target={
                                                                                                        <span
                                                                                                          class="label-help-target"
                                                                                                        >
                                                                                                          <span
                                                                                                            class="label-help-icon fa fa-question-circle"
                                                                                                          />
                                                                                                        </span>
                                                                                                      }
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        target={
                                                                                                          <span
                                                                                                            class="label-help-target"
                                                                                                          >
                                                                                                            <span
                                                                                                              class="label-help-icon fa fa-question-circle"
                                                                                                            />
                                                                                                          </span>
                                                                                                        }
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        className="domain-text-options-col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="domain-text-options-col col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={false}
                                                                                            className="domain-text-options-radio1 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-maxLength-0-10"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="maxLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={false}
                                                                                              className="domain-text-options-radio1 domain-field-float-left form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-maxLength-0-10"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="maxLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div>
                                                                                            Unlimited
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            checked={true}
                                                                                            className="domain-text-options-radio2 domain-field-float-left"
                                                                                            componentClass="input"
                                                                                            id="domainpropertiesrow-customLength-0-10"
                                                                                            onChange={[Function]}
                                                                                            type="radio"
                                                                                            value="customLength"
                                                                                          >
                                                                                            <input
                                                                                              checked={true}
                                                                                              className="domain-text-options-radio2 domain-field-float-left form-control"
                                                                                              id="domainpropertiesrow-customLength-0-10"
                                                                                              onChange={[Function]}
                                                                                              type="radio"
                                                                                              value="customLength"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <span
                                                                                            className="domain-text-options-length domain-field-float-left"
                                                                                          >
                                                                                            No longer than 
                                                                                            <FormControl
                                                                                              bsClass="form-control"
                                                                                              className="domain-text-length-field"
                                                                                              componentClass="input"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-scale-0-10"
                                                                                              name="domainpropertiesrow-scale"
                                                                                              onChange={[Function]}
                                                                                              type="number"
                                                                                              value={4000}
                                                                                            >
                                                                                              <input
                                                                                                className="domain-text-length-field form-control"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-scale-0-10"
                                                                                                name="domainpropertiesrow-scale"
                                                                                                onChange={[Function]}
                                                                                                type="number"
                                                                                                value={4000}
                                                                                              />
                                                                                            </FormControl>
                                                                                             characters
                                                                                          </span>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Memo()
                                                                                    appPropertiesOnly={false}
                                                                                    domainIndex={0}
                                                                                    index={10}
                                                                                    label="Text Options"
                                                                                    lockType="NotLocked"
                                                                                    onChange={[Function]}
                                                                                    scale={4000}
                                                                                    scannable={false}
                                                                                  />
                                                                                </div>
                                                                              </TextFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Gender",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Gender",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26830,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14810,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Gender",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={10}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-10"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-10"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-10"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Gender"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-10"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Gender"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-10"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-10"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-10"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-10"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Gender",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "Gender",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26830,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.Gender",
                                                                                    "propertyValidators": [
                                                                                      {
                                                                                        "description": null,
                                                                                        "errorMessage": null,
                                                                                        "expression": "~lte=4000",
                                                                                        "name": "Text Length",
                                                                                        "new": true,
                                                                                        "properties": {},
                                                                                        "rowId": 14810,
                                                                                        "type": "Length",
                                                                                      },
                                                                                    ],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 4000,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Text",
                                                                                      "name": "string",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": "xsd:string",
                                                                                      "shortDisplay": "String",
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Text",
                                                                                        "name": "string",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                        "alternateRangeURI": "xsd:string",
                                                                                        "shortDisplay": "String",
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "Gender",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={10}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-10"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-10"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RegexValidatorHelpText />}
                                                                                                label="Create Regular Expression Validator"
                                                                                              >
                                                                                                Create Regular Expression 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Regular Expression Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-regexValidator-0-10"
                                                                                                name="domainpropertiesrow-regexValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-regexValidator-0-10"
                                                                                                  name="domainpropertiesrow-regexValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Regex
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": false,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Birth Date",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "BirthDate",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26831,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                                                        "propertyValidators": [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 100,
                                                        "URL": null,
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Date Time",
                                                            "name": "dateTime",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                            "alternateRangeURI": "xsd:dateTime",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "BirthDate",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={11}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-11"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-11"
                                                      index={11}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-11"
                                                        index={11}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-11"
                                                          index={11}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-11"
                                                            dropAnimationFinished={[Function]}
                                                            index={11}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-11"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={11}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-11"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": false,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Birth Date",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "BirthDate",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26831,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                                                                        "propertyValidators": [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 100,
                                                                        "URL": null,
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Date Time",
                                                                          "name": "dateTime",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                          "alternateRangeURI": "xsd:dateTime",
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Date Time",
                                                                            "name": "dateTime",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                            "alternateRangeURI": "xsd:dateTime",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "BirthDate",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={11}
                                                                    label="BirthDate"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-11"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-11"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-11"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-11"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-11"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-11"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-11"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="BirthDate"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-11"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="BirthDate"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-11"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="dateTime"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-11"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="dateTime"
                                                                                >
                                                                                  <option
                                                                                    key="dateTime"
                                                                                    value="dateTime"
                                                                                  >
                                                                                    Date Time
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-11"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-11"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-11"
                                                                        />
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-11"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-11"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": false,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Birth Date",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "BirthDate",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26831,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                                                                          "propertyValidators": [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 100,
                                                                          "URL": null,
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Date Time",
                                                                            "name": "dateTime",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                            "alternateRangeURI": "xsd:dateTime",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Date Time",
                                                                              "name": "dateTime",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                              "alternateRangeURI": "xsd:dateTime",
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "BirthDate",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={11}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <DateTimeFieldOptions
                                                                                domainIndex={0}
                                                                                excludeFromShifting={false}
                                                                                format={null}
                                                                                index={11}
                                                                                label="Date and Time Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Date and Time Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Date and Time Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  <p>
                                                                                                    To control how a date or time value is displayed, provide a string format compatible with the Java
                                                                                                     
                                                                                                    <Memo
                                                                                                      urlSuffix="java/text/SimpleDateFormat.html"
                                                                                                    >
                                                                                                      SimpleDateFormat
                                                                                                    </Memo>
                                                                                                     class.
                                                                                                  </p>
                                                                                                  <p>
                                                                                                    Learn more about using 
                                                                                                    <HelpLink
                                                                                                      topic="dateFormats#date"
                                                                                                    >
                                                                                                      Date and Time formats
                                                                                                    </HelpLink>
                                                                                                     in LabKey.
                                                                                                  </p>
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Format for Dates"
                                                                                            >
                                                                                              Format for 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Dates
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Format for Dates"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={9}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-9"
                                                                                        />
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-format-0-11"
                                                                                            name="domainpropertiesrow-format"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-format-0-11"
                                                                                              name="domainpropertiesrow-format"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={9}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-9"
                                                                                        />
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </DateTimeFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Birth Date",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "BirthDate",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26831,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                                                                                    "propertyValidators": [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 100,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Date Time",
                                                                                      "name": "dateTime",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Date Time",
                                                                                        "name": "dateTime",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        "alternateRangeURI": "xsd:dateTime",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "BirthDate",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={11}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-11"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-11"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-11"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Birth Date"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-11"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Birth Date"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-11"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-11"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-11"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-11"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Birth Date",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "BirthDate",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26831,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.BirthDate",
                                                                                    "propertyValidators": [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 100,
                                                                                    "URL": null,
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Date Time",
                                                                                      "name": "dateTime",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                      "alternateRangeURI": "xsd:dateTime",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Date Time",
                                                                                        "name": "dateTime",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                        "alternateRangeURI": "xsd:dateTime",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "BirthDate",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={11}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting and Validation Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting and Validation Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-11"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-11"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                          <div
                                                                                            className=""
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<RangeValidatorHelpText />}
                                                                                                label="Create Range Validator"
                                                                                              >
                                                                                                Create Range 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Validator
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Range Validator"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-rangeValidator-0-11"
                                                                                                name="domainpropertiesrow-rangeValidator"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-rangeValidator-0-11"
                                                                                                  name="domainpropertiesrow-rangeValidator"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Range
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <DomainRow
                                                    appPropertiesOnly={false}
                                                    availableTypes={
                                                      Immutable.List [
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Text",
                                                          "name": "string",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": "xsd:string",
                                                          "shortDisplay": "String",
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Multi-Line Text",
                                                          "name": "multiLine",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Integer",
                                                          "name": "int",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": "xsd:int",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Decimal (floating point)",
                                                          "name": "double",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                                          "alternateRangeURI": "xsd:double",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Date Time",
                                                          "name": "dateTime",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                                          "alternateRangeURI": "xsd:dateTime",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#flag",
                                                          "display": "Flag",
                                                          "name": "flag",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Attachment",
                                                          "name": "attachment",
                                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "User",
                                                          "name": "users",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": "core",
                                                          "lookupQuery": "users",
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                                          "display": "Subject/Participant",
                                                          "name": "ParticipantId",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": undefined,
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/exp/xml#sample",
                                                          "display": "Sample",
                                                          "name": "sample",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        Immutable.Record {
                                                          "conceptURI": "http://www.labkey.org/types#textChoice",
                                                          "display": "Text Choice",
                                                          "name": "textChoice",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                      ]
                                                    }
                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                    defaultValueOptions={
                                                      Immutable.List [
                                                        "FIXED_EDITABLE",
                                                        "LAST_ENTERED",
                                                      ]
                                                    }
                                                    domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                    domainFormDisplayOptions={
                                                      {
                                                        "disableMvEnabled": false,
                                                        "hideAddFieldsButton": false,
                                                        "hideConditionalFormatting": false,
                                                        "hideFilePropertyType": false,
                                                        "hideImportData": false,
                                                        "hideImportExport": false,
                                                        "hideRequired": false,
                                                        "hideStudyPropertyTypes": false,
                                                        "hideTextOptions": false,
                                                        "hideValidators": false,
                                                        "isDragDisabled": false,
                                                        "phiLevelDisabled": false,
                                                      }
                                                    }
                                                    domainId={2280}
                                                    domainIndex={0}
                                                    dragging={false}
                                                    expandTransition={300}
                                                    expanded={false}
                                                    field={
                                                      Immutable.Record {
                                                        "conceptURI": null,
                                                        "conditionalFormats": Immutable.List [],
                                                        "defaultScale": "LINEAR",
                                                        "defaultValueType": null,
                                                        "defaultValue": null,
                                                        "defaultDisplayValue": "[none]",
                                                        "description": null,
                                                        "dimension": false,
                                                        "excludeFromShifting": false,
                                                        "format": null,
                                                        "hidden": false,
                                                        "importAliases": null,
                                                        "label": "Cartoon Available",
                                                        "lookupContainer": undefined,
                                                        "lookupQuery": undefined,
                                                        "lookupSchema": undefined,
                                                        "lookupValidator": undefined,
                                                        "measure": false,
                                                        "mvEnabled": false,
                                                        "name": "CartoonAvailable",
                                                        "PHI": "NotPHI",
                                                        "propertyId": 26832,
                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                                                        "propertyValidators": [],
                                                        "rangeValidators": Immutable.List [],
                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        "regexValidators": Immutable.List [],
                                                        "textChoiceValidator": undefined,
                                                        "recommendedVariable": false,
                                                        "required": false,
                                                        "scale": 10,
                                                        "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                        "shownInDetailsView": true,
                                                        "shownInInsertView": true,
                                                        "shownInUpdateView": true,
                                                        "visible": true,
                                                        "dataType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Boolean",
                                                          "name": "boolean",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": "xsd:boolean",
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "lookupQueryValue": undefined,
                                                        "lookupType": Immutable.Record {
                                                          "conceptURI": undefined,
                                                          "display": "Lookup",
                                                          "name": "lookup",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                          "alternateRangeURI": undefined,
                                                          "shortDisplay": undefined,
                                                          "lookupSchema": undefined,
                                                          "lookupQuery": undefined,
                                                        },
                                                        "original": {
                                                          "conceptURI": null,
                                                          "dataType": Immutable.Record {
                                                            "conceptURI": undefined,
                                                            "display": "Boolean",
                                                            "name": "boolean",
                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                            "alternateRangeURI": "xsd:boolean",
                                                            "shortDisplay": undefined,
                                                            "lookupSchema": undefined,
                                                            "lookupQuery": undefined,
                                                          },
                                                          "name": "CartoonAvailable",
                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                        },
                                                        "updatedField": false,
                                                        "isPrimaryKey": false,
                                                        "lockType": "NotLocked",
                                                        "wrappedColumnName": undefined,
                                                        "disablePhiLevel": false,
                                                        "lockExistingField": false,
                                                        "sourceOntology": undefined,
                                                        "conceptSubtree": undefined,
                                                        "conceptLabelColumn": undefined,
                                                        "conceptImportColumn": undefined,
                                                        "principalConceptCode": undefined,
                                                        "derivationDataScope": undefined,
                                                        "selected": false,
                                                        "scannable": false,
                                                      }
                                                    }
                                                    fieldDetailsInfo={{}}
                                                    getDomainFields={[Function]}
                                                    helpNoun="list"
                                                    index={12}
                                                    isDragDisabled={false}
                                                    key="domain-row-key-12"
                                                    maxPhiLevel="NotPHI"
                                                    onChange={[Function]}
                                                    onDelete={[Function]}
                                                    onExpand={[Function]}
                                                    queryName={null}
                                                    schemaName={null}
                                                    showDefaultValueSettings={true}
                                                    successBsStyle="success"
                                                  >
                                                    <PublicDraggable
                                                      draggableId="domainpropertiesrow-domaindrag-0-12"
                                                      index={12}
                                                      isDragDisabled={false}
                                                    >
                                                      <PrivateDraggable
                                                        canDragInteractiveElements={false}
                                                        draggableId="domainpropertiesrow-domaindrag-0-12"
                                                        index={12}
                                                        isClone={false}
                                                        isDragDisabled={false}
                                                        isEnabled={true}
                                                        shouldRespectForcePress={false}
                                                      >
                                                        <Connect(Draggable)
                                                          canDragInteractiveElements={false}
                                                          draggableId="domainpropertiesrow-domaindrag-0-12"
                                                          index={12}
                                                          isClone={false}
                                                          isDragDisabled={false}
                                                          isEnabled={true}
                                                          shouldRespectForcePress={false}
                                                        >
                                                          <Draggable
                                                            canDragInteractiveElements={false}
                                                            draggableId="domainpropertiesrow-domaindrag-0-12"
                                                            dropAnimationFinished={[Function]}
                                                            index={12}
                                                            isClone={false}
                                                            isDragDisabled={false}
                                                            isEnabled={true}
                                                            mapped={
                                                              {
                                                                "combineTargetFor": null,
                                                                "offset": {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                },
                                                                "shouldAnimateDisplacement": true,
                                                                "snapshot": {
                                                                  "combineTargetFor": null,
                                                                  "combineWith": null,
                                                                  "draggingOver": null,
                                                                  "dropAnimation": null,
                                                                  "isClone": false,
                                                                  "isDragging": false,
                                                                  "isDropAnimating": false,
                                                                  "mode": null,
                                                                },
                                                                "type": "SECONDARY",
                                                              }
                                                            }
                                                            shouldRespectForcePress={false}
                                                          >
                                                            <div
                                                              className="domain-field-row domain-row-border-default"
                                                              data-rbd-draggable-context-id="0"
                                                              data-rbd-draggable-id="domainpropertiesrow-domaindrag-0-12"
                                                              onTransitionEnd={null}
                                                              style={
                                                                {
                                                                  "transform": null,
                                                                  "transition": null,
                                                                }
                                                              }
                                                              tabIndex={12}
                                                            >
                                                              <Row
                                                                bsClass="row"
                                                                className="domain-row-container"
                                                                componentClass="div"
                                                                key="domainpropertiesrow-domainrow-0-12"
                                                              >
                                                                <div
                                                                  className="domain-row-container row"
                                                                >
                                                                  <AdvancedSettings
                                                                    defaultDefaultValueType="FIXED_EDITABLE"
                                                                    defaultValueOptions={
                                                                      Immutable.List [
                                                                        "FIXED_EDITABLE",
                                                                        "LAST_ENTERED",
                                                                      ]
                                                                    }
                                                                    domainFormDisplayOptions={
                                                                      {
                                                                        "disableMvEnabled": false,
                                                                        "hideAddFieldsButton": false,
                                                                        "hideConditionalFormatting": false,
                                                                        "hideFilePropertyType": false,
                                                                        "hideImportData": false,
                                                                        "hideImportExport": false,
                                                                        "hideRequired": false,
                                                                        "hideStudyPropertyTypes": false,
                                                                        "hideTextOptions": false,
                                                                        "hideValidators": false,
                                                                        "isDragDisabled": false,
                                                                        "phiLevelDisabled": false,
                                                                      }
                                                                    }
                                                                    domainId={2280}
                                                                    domainIndex={0}
                                                                    field={
                                                                      Immutable.Record {
                                                                        "conceptURI": null,
                                                                        "conditionalFormats": Immutable.List [],
                                                                        "defaultScale": "LINEAR",
                                                                        "defaultValueType": null,
                                                                        "defaultValue": null,
                                                                        "defaultDisplayValue": "[none]",
                                                                        "description": null,
                                                                        "dimension": false,
                                                                        "excludeFromShifting": false,
                                                                        "format": null,
                                                                        "hidden": false,
                                                                        "importAliases": null,
                                                                        "label": "Cartoon Available",
                                                                        "lookupContainer": undefined,
                                                                        "lookupQuery": undefined,
                                                                        "lookupSchema": undefined,
                                                                        "lookupValidator": undefined,
                                                                        "measure": false,
                                                                        "mvEnabled": false,
                                                                        "name": "CartoonAvailable",
                                                                        "PHI": "NotPHI",
                                                                        "propertyId": 26832,
                                                                        "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                                                                        "propertyValidators": [],
                                                                        "rangeValidators": Immutable.List [],
                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                        "regexValidators": Immutable.List [],
                                                                        "textChoiceValidator": undefined,
                                                                        "recommendedVariable": false,
                                                                        "required": false,
                                                                        "scale": 10,
                                                                        "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                                        "shownInDetailsView": true,
                                                                        "shownInInsertView": true,
                                                                        "shownInUpdateView": true,
                                                                        "visible": true,
                                                                        "dataType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Boolean",
                                                                          "name": "boolean",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                          "alternateRangeURI": "xsd:boolean",
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "lookupQueryValue": undefined,
                                                                        "lookupType": Immutable.Record {
                                                                          "conceptURI": undefined,
                                                                          "display": "Lookup",
                                                                          "name": "lookup",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                          "alternateRangeURI": undefined,
                                                                          "shortDisplay": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupQuery": undefined,
                                                                        },
                                                                        "original": {
                                                                          "conceptURI": null,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Boolean",
                                                                            "name": "boolean",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                            "alternateRangeURI": "xsd:boolean",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "name": "CartoonAvailable",
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                        },
                                                                        "updatedField": false,
                                                                        "isPrimaryKey": false,
                                                                        "lockType": "NotLocked",
                                                                        "wrappedColumnName": undefined,
                                                                        "disablePhiLevel": false,
                                                                        "lockExistingField": false,
                                                                        "sourceOntology": undefined,
                                                                        "conceptSubtree": undefined,
                                                                        "conceptLabelColumn": undefined,
                                                                        "conceptImportColumn": undefined,
                                                                        "principalConceptCode": undefined,
                                                                        "derivationDataScope": undefined,
                                                                        "selected": false,
                                                                        "scannable": false,
                                                                      }
                                                                    }
                                                                    helpNoun="list"
                                                                    index={12}
                                                                    label="CartoonAvailable"
                                                                    maxPhiLevel="NotPHI"
                                                                    onApply={[Function]}
                                                                    onHide={[Function]}
                                                                    show={false}
                                                                    showDefaultValueSettings={true}
                                                                    successBsStyle="success"
                                                                  >
                                                                    <Modal
                                                                      animation={true}
                                                                      autoFocus={true}
                                                                      backdrop={true}
                                                                      bsClass="modal"
                                                                      dialogComponentClass={[Function]}
                                                                      enforceFocus={true}
                                                                      keyboard={true}
                                                                      manager={
                                                                        ModalManager {
                                                                          "add": [Function],
                                                                          "containers": [],
                                                                          "data": [],
                                                                          "handleContainerOverflow": true,
                                                                          "hideSiblingNodes": true,
                                                                          "isTopModal": [Function],
                                                                          "modals": [],
                                                                          "remove": [Function],
                                                                        }
                                                                      }
                                                                      onEnter={[Function]}
                                                                      onHide={[Function]}
                                                                      renderBackdrop={[Function]}
                                                                      restoreFocus={true}
                                                                      show={false}
                                                                    >
                                                                      <Modal
                                                                        autoFocus={true}
                                                                        backdrop={true}
                                                                        backdropClassName="modal-backdrop"
                                                                        backdropTransition={[Function]}
                                                                        containerClassName="modal-open"
                                                                        enforceFocus={true}
                                                                        keyboard={true}
                                                                        manager={
                                                                          ModalManager {
                                                                            "add": [Function],
                                                                            "containers": [],
                                                                            "data": [],
                                                                            "handleContainerOverflow": true,
                                                                            "hideSiblingNodes": true,
                                                                            "isTopModal": [Function],
                                                                            "modals": [],
                                                                            "remove": [Function],
                                                                          }
                                                                        }
                                                                        onEnter={[Function]}
                                                                        onEntering={[Function]}
                                                                        onExited={[Function]}
                                                                        onHide={[Function]}
                                                                        onMouseUp={[Function]}
                                                                        renderBackdrop={[Function]}
                                                                        restoreFocus={true}
                                                                        show={false}
                                                                        transition={[Function]}
                                                                      />
                                                                    </Modal>
                                                                  </AdvancedSettings>
                                                                  <div
                                                                    aria-describedby="rbd-hidden-text-0-hidden-text-0"
                                                                    className="domain-row-handle"
                                                                    data-rbd-drag-handle-context-id="0"
                                                                    data-rbd-drag-handle-draggable-id="domainpropertiesrow-domaindrag-0-12"
                                                                    draggable={false}
                                                                    onDragStart={[Function]}
                                                                    role="button"
                                                                    tabIndex={0}
                                                                  >
                                                                    <DragDropHandle>
                                                                      <div
                                                                        className="drag-drop-handle"
                                                                      >
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                        <span
                                                                          className="fa fa-ellipsis-v"
                                                                        />
                                                                      </div>
                                                                    </DragDropHandle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-action-section"
                                                                  >
                                                                    <Checkbox
                                                                      bsClass="checkbox"
                                                                      checked={false}
                                                                      className="domain-field-check-icon"
                                                                      disabled={false}
                                                                      id="domainpropertiesrow-selected-0-12"
                                                                      inline={false}
                                                                      name="domainpropertiesrow-selected"
                                                                      onChange={[Function]}
                                                                      title=""
                                                                    >
                                                                      <div
                                                                        className="domain-field-check-icon checkbox"
                                                                      >
                                                                        <label
                                                                          title=""
                                                                        >
                                                                          <input
                                                                            checked={false}
                                                                            disabled={false}
                                                                            id="domainpropertiesrow-selected-0-12"
                                                                            name="domainpropertiesrow-selected"
                                                                            onChange={[Function]}
                                                                            type="checkbox"
                                                                          />
                                                                        </label>
                                                                      </div>
                                                                    </Checkbox>
                                                                    <FieldExpansionToggle
                                                                      cls="domain-field-expand-icon"
                                                                      collapsedTitle="Show additional field properties"
                                                                      expanded={false}
                                                                      expandedTitle="Hide additional field properties"
                                                                      id="domainpropertiesrow-expand-0-12"
                                                                      onClick={[Function]}
                                                                    >
                                                                      <div
                                                                        className="field-icon domain-field-expand-icon"
                                                                        id="domainpropertiesrow-expand-0-12"
                                                                        onClick={[Function]}
                                                                        title="Show additional field properties"
                                                                      >
                                                                        <span
                                                                          className="fa fa-lg fa-plus-square"
                                                                        />
                                                                      </div>
                                                                    </FieldExpansionToggle>
                                                                  </div>
                                                                  <div
                                                                    className="domain-row-main"
                                                                  >
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-base-fields domain-row-base-fields-position"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-base-fields domain-row-base-fields-position col-xs-6"
                                                                      >
                                                                        <div
                                                                          id="domainpropertiesrow-row-0-12"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={6}
                                                                          >
                                                                            <div
                                                                              className="col-xs-6"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="input"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-name-0-12"
                                                                                name="domainpropertiesrow-name"
                                                                                onChange={[Function]}
                                                                                type="text"
                                                                                value="CartoonAvailable"
                                                                              >
                                                                                <input
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-name-0-12"
                                                                                  name="domainpropertiesrow-name"
                                                                                  onChange={[Function]}
                                                                                  type="text"
                                                                                  value="CartoonAvailable"
                                                                                />
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={4}
                                                                          >
                                                                            <div
                                                                              className="col-xs-4"
                                                                            >
                                                                              <FormControl
                                                                                bsClass="form-control"
                                                                                componentClass="select"
                                                                                disabled={false}
                                                                                id="domainpropertiesrow-type-0-12"
                                                                                name="domainpropertiesrow-type"
                                                                                onChange={[Function]}
                                                                                value="boolean"
                                                                              >
                                                                                <select
                                                                                  className="form-control"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-type-0-12"
                                                                                  name="domainpropertiesrow-type"
                                                                                  onChange={[Function]}
                                                                                  value="boolean"
                                                                                >
                                                                                  <option
                                                                                    key="boolean"
                                                                                    value="boolean"
                                                                                  >
                                                                                    Boolean
                                                                                  </option>
                                                                                  <option
                                                                                    key="multiLine"
                                                                                    value="multiLine"
                                                                                  >
                                                                                    Multi-Line Text
                                                                                  </option>
                                                                                  <option
                                                                                    key="string"
                                                                                    value="string"
                                                                                  >
                                                                                    Text
                                                                                  </option>
                                                                                </select>
                                                                              </FormControl>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={2}
                                                                          >
                                                                            <div
                                                                              className="col-xs-2"
                                                                            >
                                                                              <div
                                                                                className="domain-field-checkbox-container"
                                                                              >
                                                                                <Checkbox
                                                                                  bsClass="checkbox"
                                                                                  checked={false}
                                                                                  className="domain-field-checkbox"
                                                                                  disabled={false}
                                                                                  id="domainpropertiesrow-required-0-12"
                                                                                  inline={false}
                                                                                  name="domainpropertiesrow-required"
                                                                                  onChange={[Function]}
                                                                                  title=""
                                                                                >
                                                                                  <div
                                                                                    className="domain-field-checkbox checkbox"
                                                                                  >
                                                                                    <label
                                                                                      title=""
                                                                                    >
                                                                                      <input
                                                                                        checked={false}
                                                                                        disabled={false}
                                                                                        id="domainpropertiesrow-required-0-12"
                                                                                        name="domainpropertiesrow-required"
                                                                                        onChange={[Function]}
                                                                                        type="checkbox"
                                                                                      />
                                                                                    </label>
                                                                                  </div>
                                                                                </Checkbox>
                                                                              </div>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                    <Col
                                                                      bsClass="col"
                                                                      className="domain-row-details-container"
                                                                      componentClass="div"
                                                                      xs={6}
                                                                    >
                                                                      <div
                                                                        className="domain-row-details-container col-xs-6"
                                                                      >
                                                                        <div
                                                                          className="domain-field-details"
                                                                          id="domainpropertiesrow-details-0-12"
                                                                        />
                                                                        <div
                                                                          className="domain-field-buttons"
                                                                        >
                                                                          <Memo()
                                                                            iconCls="domain-field-delete-icon"
                                                                            id="domainpropertiesrow-delete-0-12"
                                                                            onDelete={[Function]}
                                                                            title="Remove field"
                                                                          >
                                                                            <span
                                                                              className="field-icon"
                                                                              id="domainpropertiesrow-delete-0-12"
                                                                              onClick={[Function]}
                                                                              title="Remove field"
                                                                            >
                                                                              <span
                                                                                className="fa fa-times-circle domain-field-delete-icon"
                                                                              />
                                                                            </span>
                                                                          </Memo()>
                                                                        </div>
                                                                      </div>
                                                                    </Col>
                                                                  </div>
                                                                </div>
                                                              </Row>
                                                              <Collapse
                                                                appear={false}
                                                                dimension="height"
                                                                getDimensionValue={[Function]}
                                                                in={false}
                                                                mountOnEnter={false}
                                                                onExited={[Function]}
                                                                onExiting={[Function]}
                                                                timeout={300}
                                                                unmountOnExit={false}
                                                              >
                                                                <Transition
                                                                  appear={false}
                                                                  aria-expanded={null}
                                                                  enter={true}
                                                                  exit={true}
                                                                  in={false}
                                                                  mountOnEnter={false}
                                                                  onEnter={[Function]}
                                                                  onEntered={[Function]}
                                                                  onEntering={[Function]}
                                                                  onExit={[Function]}
                                                                  onExited={[Function]}
                                                                  onExiting={[Function]}
                                                                  timeout={300}
                                                                  unmountOnExit={false}
                                                                >
                                                                  <div
                                                                    aria-expanded={null}
                                                                    className="collapse"
                                                                  >
                                                                    <DomainRowExpandedOptions
                                                                      appPropertiesOnly={false}
                                                                      domainContainerPath="ea23d322-acd6-1037-8e6d-25f311da6f8b"
                                                                      domainFormDisplayOptions={
                                                                        {
                                                                          "disableMvEnabled": false,
                                                                          "hideAddFieldsButton": false,
                                                                          "hideConditionalFormatting": false,
                                                                          "hideFilePropertyType": false,
                                                                          "hideImportData": false,
                                                                          "hideImportExport": false,
                                                                          "hideRequired": false,
                                                                          "hideStudyPropertyTypes": false,
                                                                          "hideTextOptions": false,
                                                                          "hideValidators": false,
                                                                          "isDragDisabled": false,
                                                                          "phiLevelDisabled": false,
                                                                        }
                                                                      }
                                                                      domainIndex={0}
                                                                      field={
                                                                        Immutable.Record {
                                                                          "conceptURI": null,
                                                                          "conditionalFormats": Immutable.List [],
                                                                          "defaultScale": "LINEAR",
                                                                          "defaultValueType": null,
                                                                          "defaultValue": null,
                                                                          "defaultDisplayValue": "[none]",
                                                                          "description": null,
                                                                          "dimension": false,
                                                                          "excludeFromShifting": false,
                                                                          "format": null,
                                                                          "hidden": false,
                                                                          "importAliases": null,
                                                                          "label": "Cartoon Available",
                                                                          "lookupContainer": undefined,
                                                                          "lookupQuery": undefined,
                                                                          "lookupSchema": undefined,
                                                                          "lookupValidator": undefined,
                                                                          "measure": false,
                                                                          "mvEnabled": false,
                                                                          "name": "CartoonAvailable",
                                                                          "PHI": "NotPHI",
                                                                          "propertyId": 26832,
                                                                          "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                                                                          "propertyValidators": [],
                                                                          "rangeValidators": Immutable.List [],
                                                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                          "regexValidators": Immutable.List [],
                                                                          "textChoiceValidator": undefined,
                                                                          "recommendedVariable": false,
                                                                          "required": false,
                                                                          "scale": 10,
                                                                          "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                                          "shownInDetailsView": true,
                                                                          "shownInInsertView": true,
                                                                          "shownInUpdateView": true,
                                                                          "visible": true,
                                                                          "dataType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Boolean",
                                                                            "name": "boolean",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                            "alternateRangeURI": "xsd:boolean",
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "lookupQueryValue": undefined,
                                                                          "lookupType": Immutable.Record {
                                                                            "conceptURI": undefined,
                                                                            "display": "Lookup",
                                                                            "name": "lookup",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                            "alternateRangeURI": undefined,
                                                                            "shortDisplay": undefined,
                                                                            "lookupSchema": undefined,
                                                                            "lookupQuery": undefined,
                                                                          },
                                                                          "original": {
                                                                            "conceptURI": null,
                                                                            "dataType": Immutable.Record {
                                                                              "conceptURI": undefined,
                                                                              "display": "Boolean",
                                                                              "name": "boolean",
                                                                              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                              "alternateRangeURI": "xsd:boolean",
                                                                              "shortDisplay": undefined,
                                                                              "lookupSchema": undefined,
                                                                              "lookupQuery": undefined,
                                                                            },
                                                                            "name": "CartoonAvailable",
                                                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                          },
                                                                          "updatedField": false,
                                                                          "isPrimaryKey": false,
                                                                          "lockType": "NotLocked",
                                                                          "wrappedColumnName": undefined,
                                                                          "disablePhiLevel": false,
                                                                          "lockExistingField": false,
                                                                          "sourceOntology": undefined,
                                                                          "conceptSubtree": undefined,
                                                                          "conceptLabelColumn": undefined,
                                                                          "conceptImportColumn": undefined,
                                                                          "principalConceptCode": undefined,
                                                                          "derivationDataScope": undefined,
                                                                          "selected": false,
                                                                          "scannable": false,
                                                                        }
                                                                      }
                                                                      getDomainFields={[Function]}
                                                                      index={12}
                                                                      onChange={[Function]}
                                                                      onMultiChange={[Function]}
                                                                      queryName={null}
                                                                      schemaName={null}
                                                                      showingModal={[Function]}
                                                                      successBsStyle="success"
                                                                    >
                                                                      <div
                                                                        className="domain-row-container"
                                                                      >
                                                                        <div
                                                                          className="domain-row-container-expand-spacer"
                                                                        />
                                                                        <div
                                                                          className="domain-row-container-expanded"
                                                                        >
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <BooleanFieldOptions
                                                                                domainIndex={0}
                                                                                format={null}
                                                                                index={12}
                                                                                label="Boolean Field Options"
                                                                                lockType="NotLocked"
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            title="Boolean Field Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading"
                                                                                            >
                                                                                              Boolean Field Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <div>
                                                                                                  Use boolean formatting to specify the text to show when a value is true and false. Text can optionally be shown for null values.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  For example, "Yes;No;Blank" would output "Yes" if the value is true, "No" if false, and "Blank" for a null value.
                                                                                                </div>
                                                                                              }
                                                                                              label="Format for Boolean Values"
                                                                                            >
                                                                                              Format for Boolean 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Values
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Format for Boolean Values"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-format-0-12"
                                                                                            name="domainpropertiesrow-scale"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-format-0-12"
                                                                                              name="domainpropertiesrow-scale"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </BooleanFieldOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <NameAndLinkingOptions
                                                                                appPropertiesOnly={false}
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Cartoon Available",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "CartoonAvailable",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26832,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                                                                                    "propertyValidators": [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 10,
                                                                                    "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Boolean",
                                                                                      "name": "boolean",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                                      "alternateRangeURI": "xsd:boolean",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Boolean",
                                                                                        "name": "boolean",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                                        "alternateRangeURI": "xsd:boolean",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "CartoonAvailable",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={12}
                                                                                onChange={[Function]}
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Name and Linking Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Name and Linking Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={5}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-5"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Description
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="textarea"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-description-0-12"
                                                                                            name="domainpropertiesrow-description"
                                                                                            onChange={[Function]}
                                                                                            rows={4}
                                                                                            value=""
                                                                                          >
                                                                                            <textarea
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-description-0-12"
                                                                                              name="domainpropertiesrow-description"
                                                                                              onChange={[Function]}
                                                                                              rows={4}
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={3}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-3"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            Label
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-label-0-12"
                                                                                            name="domainpropertiesrow-label"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="Cartoon Available"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-label-0-12"
                                                                                              name="domainpropertiesrow-label"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="Cartoon Available"
                                                                                            />
                                                                                          </FormControl>
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Define alternate field names to be used when importing from a file.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Multiple aliases may be separated by spaces or commas. To define an alias that contains spaces, use double-quotes (") around it.
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="Import Aliases"
                                                                                            >
                                                                                              Import 
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                Aliases
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="Import Aliases"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-importAliases-0-12"
                                                                                            name="domainpropertiesrow-importAliases"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value=""
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-importAliases-0-12"
                                                                                              name="domainpropertiesrow-importAliases"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value=""
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={4}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-4"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-field-label"
                                                                                          >
                                                                                            <DomainFieldLabel
                                                                                              helpTipBody={
                                                                                                <React.Fragment>
                                                                                                  Use this to change the display of the field value within a data grid into a link. Multiple formats are supported, which allows ways to easily substitute and link to other locations in LabKey.
                                                                                                  <br />
                                                                                                  <br />
                                                                                                  Learn more about using 
                                                                                                  <HelpLink
                                                                                                    topic="urlEncoding"
                                                                                                  >
                                                                                                    URL Formatting Options
                                                                                                  </HelpLink>
                                                                                                  .
                                                                                                </React.Fragment>
                                                                                              }
                                                                                              label="URL"
                                                                                            >
                                                                                              <span
                                                                                                className="domain-no-wrap"
                                                                                              >
                                                                                                URL
                                                                                                <Component
                                                                                                  id="tooltip"
                                                                                                  title="URL"
                                                                                                >
                                                                                                  <span
                                                                                                    className="label-help-target"
                                                                                                    onMouseOut={[Function]}
                                                                                                    onMouseOver={[Function]}
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-icon fa fa-question-circle"
                                                                                                    />
                                                                                                    <Overlay
                                                                                                      animation={[Function]}
                                                                                                      placement="right"
                                                                                                      rootClose={false}
                                                                                                      show={false}
                                                                                                    >
                                                                                                      <Overlay
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                        transition={[Function]}
                                                                                                      />
                                                                                                    </Overlay>
                                                                                                  </span>
                                                                                                </Component>
                                                                                              </span>
                                                                                            </DomainFieldLabel>
                                                                                          </div>
                                                                                          <FormControl
                                                                                            bsClass="form-control"
                                                                                            componentClass="input"
                                                                                            disabled={false}
                                                                                            id="domainpropertiesrow-URL-0-12"
                                                                                            name="domainpropertiesrow-URL"
                                                                                            onChange={[Function]}
                                                                                            type="text"
                                                                                            value="https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE"
                                                                                          >
                                                                                            <input
                                                                                              className="form-control"
                                                                                              disabled={false}
                                                                                              id="domainpropertiesrow-URL-0-12"
                                                                                              name="domainpropertiesrow-URL"
                                                                                              onChange={[Function]}
                                                                                              type="text"
                                                                                              value="https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE"
                                                                                            />
                                                                                          </FormControl>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </NameAndLinkingOptions>
                                                                            </div>
                                                                          </Col>
                                                                          <Col
                                                                            bsClass="col"
                                                                            componentClass="div"
                                                                            xs={12}
                                                                          >
                                                                            <div
                                                                              className="col-xs-12"
                                                                            >
                                                                              <ConditionalFormattingAndValidation
                                                                                domainFormDisplayOptions={
                                                                                  {
                                                                                    "disableMvEnabled": false,
                                                                                    "hideAddFieldsButton": false,
                                                                                    "hideConditionalFormatting": false,
                                                                                    "hideFilePropertyType": false,
                                                                                    "hideImportData": false,
                                                                                    "hideImportExport": false,
                                                                                    "hideRequired": false,
                                                                                    "hideStudyPropertyTypes": false,
                                                                                    "hideTextOptions": false,
                                                                                    "hideValidators": false,
                                                                                    "isDragDisabled": false,
                                                                                    "phiLevelDisabled": false,
                                                                                  }
                                                                                }
                                                                                domainIndex={0}
                                                                                field={
                                                                                  Immutable.Record {
                                                                                    "conceptURI": null,
                                                                                    "conditionalFormats": Immutable.List [],
                                                                                    "defaultScale": "LINEAR",
                                                                                    "defaultValueType": null,
                                                                                    "defaultValue": null,
                                                                                    "defaultDisplayValue": "[none]",
                                                                                    "description": null,
                                                                                    "dimension": false,
                                                                                    "excludeFromShifting": false,
                                                                                    "format": null,
                                                                                    "hidden": false,
                                                                                    "importAliases": null,
                                                                                    "label": "Cartoon Available",
                                                                                    "lookupContainer": undefined,
                                                                                    "lookupQuery": undefined,
                                                                                    "lookupSchema": undefined,
                                                                                    "lookupValidator": undefined,
                                                                                    "measure": false,
                                                                                    "mvEnabled": false,
                                                                                    "name": "CartoonAvailable",
                                                                                    "PHI": "NotPHI",
                                                                                    "propertyId": 26832,
                                                                                    "propertyURI": "urn:lsid:labkey.com:IntList.Folder-950:NIMHDemographics.CartoonAvailable",
                                                                                    "propertyValidators": [],
                                                                                    "rangeValidators": Immutable.List [],
                                                                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                                    "regexValidators": Immutable.List [],
                                                                                    "textChoiceValidator": undefined,
                                                                                    "recommendedVariable": false,
                                                                                    "required": false,
                                                                                    "scale": 10,
                                                                                    "URL": "https://www.labkey.org/files/home/Demos/ListDemo/sendFile.view?fileName=%40files%2F\${SubjectID}.png&renderAs=IMAGE",
                                                                                    "shownInDetailsView": true,
                                                                                    "shownInInsertView": true,
                                                                                    "shownInUpdateView": true,
                                                                                    "visible": true,
                                                                                    "dataType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Boolean",
                                                                                      "name": "boolean",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                                      "alternateRangeURI": "xsd:boolean",
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "lookupQueryValue": undefined,
                                                                                    "lookupType": Immutable.Record {
                                                                                      "conceptURI": undefined,
                                                                                      "display": "Lookup",
                                                                                      "name": "lookup",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                                      "alternateRangeURI": undefined,
                                                                                      "shortDisplay": undefined,
                                                                                      "lookupSchema": undefined,
                                                                                      "lookupQuery": undefined,
                                                                                    },
                                                                                    "original": {
                                                                                      "conceptURI": null,
                                                                                      "dataType": Immutable.Record {
                                                                                        "conceptURI": undefined,
                                                                                        "display": "Boolean",
                                                                                        "name": "boolean",
                                                                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                                        "alternateRangeURI": "xsd:boolean",
                                                                                        "shortDisplay": undefined,
                                                                                        "lookupSchema": undefined,
                                                                                        "lookupQuery": undefined,
                                                                                      },
                                                                                      "name": "CartoonAvailable",
                                                                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                                                                                    },
                                                                                    "updatedField": false,
                                                                                    "isPrimaryKey": false,
                                                                                    "lockType": "NotLocked",
                                                                                    "wrappedColumnName": undefined,
                                                                                    "disablePhiLevel": false,
                                                                                    "lockExistingField": false,
                                                                                    "sourceOntology": undefined,
                                                                                    "conceptSubtree": undefined,
                                                                                    "conceptLabelColumn": undefined,
                                                                                    "conceptImportColumn": undefined,
                                                                                    "principalConceptCode": undefined,
                                                                                    "derivationDataScope": undefined,
                                                                                    "selected": false,
                                                                                    "scannable": false,
                                                                                  }
                                                                                }
                                                                                index={12}
                                                                                onChange={[Function]}
                                                                                showingModal={[Function]}
                                                                                successBsStyle="success"
                                                                              >
                                                                                <div>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <SectionHeading
                                                                                            cls="domain-field-section-hdr"
                                                                                            title="Conditional Formatting Options"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-section-heading domain-field-section-hdr"
                                                                                            >
                                                                                              Conditional Formatting Options
                                                                                            </div>
                                                                                          </SectionHeading>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                  <Row
                                                                                    bsClass="row"
                                                                                    componentClass="div"
                                                                                  >
                                                                                    <div
                                                                                      className="row"
                                                                                    >
                                                                                      <Col
                                                                                        bsClass="col"
                                                                                        componentClass="div"
                                                                                        xs={12}
                                                                                      >
                                                                                        <div
                                                                                          className="col-xs-12"
                                                                                        >
                                                                                          <div
                                                                                            className="domain-validation-group"
                                                                                          >
                                                                                            <div
                                                                                              className="domain-field-label domain-no-wrap"
                                                                                            >
                                                                                              <DomainFieldLabel
                                                                                                helpTipBody={<ConditionalFormatHelpText />}
                                                                                                label="Create Conditional Format Criteria"
                                                                                              >
                                                                                                Create Conditional Format 
                                                                                                <span
                                                                                                  className="domain-no-wrap"
                                                                                                >
                                                                                                  Criteria
                                                                                                  <Component
                                                                                                    id="tooltip"
                                                                                                    title="Create Conditional Format Criteria"
                                                                                                  >
                                                                                                    <span
                                                                                                      className="label-help-target"
                                                                                                      onMouseOut={[Function]}
                                                                                                      onMouseOver={[Function]}
                                                                                                    >
                                                                                                      <span
                                                                                                        className="label-help-icon fa fa-question-circle"
                                                                                                      />
                                                                                                      <Overlay
                                                                                                        animation={[Function]}
                                                                                                        placement="right"
                                                                                                        rootClose={false}
                                                                                                        show={false}
                                                                                                      >
                                                                                                        <Overlay
                                                                                                          placement="right"
                                                                                                          rootClose={false}
                                                                                                          show={false}
                                                                                                          transition={[Function]}
                                                                                                        />
                                                                                                      </Overlay>
                                                                                                    </span>
                                                                                                  </Component>
                                                                                                </span>
                                                                                              </DomainFieldLabel>
                                                                                            </div>
                                                                                            <div>
                                                                                              <Button
                                                                                                active={false}
                                                                                                block={false}
                                                                                                bsClass="btn"
                                                                                                bsStyle="default"
                                                                                                className="domain-validation-button"
                                                                                                disabled={false}
                                                                                                id="domainpropertiesrow-conditionalFormat-0-12"
                                                                                                name="domainpropertiesrow-conditionalFormat"
                                                                                                onClick={[Function]}
                                                                                              >
                                                                                                <button
                                                                                                  className="domain-validation-button btn btn-default"
                                                                                                  disabled={false}
                                                                                                  id="domainpropertiesrow-conditionalFormat-0-12"
                                                                                                  name="domainpropertiesrow-conditionalFormat"
                                                                                                  onClick={[Function]}
                                                                                                  type="button"
                                                                                                >
                                                                                                  Add Format
                                                                                                </button>
                                                                                              </Button>
                                                                                              <span
                                                                                                className="domain-text-label"
                                                                                              >
                                                                                                None Set
                                                                                              </span>
                                                                                            </div>
                                                                                          </div>
                                                                                        </div>
                                                                                      </Col>
                                                                                    </div>
                                                                                  </Row>
                                                                                </div>
                                                                              </ConditionalFormattingAndValidation>
                                                                            </div>
                                                                          </Col>
                                                                        </div>
                                                                      </div>
                                                                    </DomainRowExpandedOptions>
                                                                  </div>
                                                                </Transition>
                                                              </Collapse>
                                                            </div>
                                                          </Draggable>
                                                        </Connect(Draggable)>
                                                      </PrivateDraggable>
                                                    </PublicDraggable>
                                                  </DomainRow>
                                                  <AnimateInOut
                                                    on={null}
                                                    shouldAnimate={false}
                                                  />
                                                </form>
                                              </Form>
                                            </div>
                                          </Droppable>
                                        </Connect(Droppable)>
                                      </Provider>
                                    </App>
                                  </ErrorBoundary>
                                </DragDropContext>
                                <Row
                                  bsClass="row"
                                  className="domain-add-field-row"
                                  componentClass="div"
                                >
                                  <div
                                    className="domain-add-field-row row"
                                  >
                                    <Col
                                      bsClass="col"
                                      componentClass="div"
                                      xs={12}
                                    >
                                      <div
                                        className="col-xs-12"
                                      >
                                        <AddEntityButton
                                          buttonClass="domain-form-add-btn"
                                          containerClass="pull-right"
                                          entity="Field"
                                          onClick={[Function]}
                                        >
                                          <ActionButton
                                            buttonClass="domain-form-add-btn"
                                            containerClass="pull-right"
                                            helperTitle="More Info"
                                            onClick={[Function]}
                                          >
                                            <div
                                              className="pull-right"
                                            >
                                              <div
                                                className="domain-form-add-btn"
                                              >
                                                <span
                                                  className="container--action-button btn btn-default"
                                                  onClick={[Function]}
                                                >
                                                  <i
                                                    className="fa fa-plus-circle container--addition-icon"
                                                  />
                                                   Add 
                                                  Field
                                                </span>
                                              </div>
                                            </div>
                                          </ActionButton>
                                        </AddEntityButton>
                                      </div>
                                    </Col>
                                  </div>
                                </Row>
                              </div>
                            </div>
                          </Transition>
                        </Collapse>
                      </PanelCollapse>
                    </PanelBody>
                  </div>
                </Panel>
              </Uncontrolled(Panel)>
            </ForwardRef>
          </DomainFormImpl>
        </LookupProvider>
      </DomainForm>
      <Progress
        delay={1000}
        estimate={500}
        modal={true}
        title="Importing data from selected file..."
        toggle={false}
        updateIncrement={50}
      >
        <Modal
          animation={true}
          autoFocus={true}
          backdrop={true}
          bsClass="modal"
          bsSize="large"
          dialogComponentClass={[Function]}
          enforceFocus={true}
          keyboard={true}
          manager={
            ModalManager {
              "add": [Function],
              "containers": [],
              "data": [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": [],
              "remove": [Function],
            }
          }
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
        >
          <Modal
            autoFocus={true}
            backdrop={true}
            backdropClassName="modal-backdrop"
            backdropTransition={[Function]}
            containerClassName="modal-open"
            enforceFocus={true}
            keyboard={true}
            manager={
              ModalManager {
                "add": [Function],
                "containers": [],
                "data": [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": [],
                "remove": [Function],
              }
            }
            onEntering={[Function]}
            onExited={[Function]}
            onHide={[Function]}
            onMouseUp={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
            transition={[Function]}
          />
        </Modal>
      </Progress>
      <ConfirmImportTypes
        designerType="list"
        onCancel={[Function]}
        onConfirm={[Function]}
        show={false}
      >
        <ConfirmModal
          cancelButtonText="No, Go Back to Field Editor"
          confirmButtonText="Yes, Create Without Data"
          confirmVariant="primary"
          onCancel={[Function]}
          onConfirm={[Function]}
          show={false}
          title="Create list without importing data?"
        >
          <Modal
            animation={true}
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
              ModalManager {
                "add": [Function],
                "containers": [],
                "data": [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": [],
                "remove": [Function],
              }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
          >
            <Modal
              autoFocus={true}
              backdrop={true}
              backdropClassName="modal-backdrop"
              backdropTransition={[Function]}
              containerClassName="modal-open"
              enforceFocus={true}
              keyboard={true}
              manager={
                ModalManager {
                  "add": [Function],
                  "containers": [],
                  "data": [],
                  "handleContainerOverflow": true,
                  "hideSiblingNodes": true,
                  "isTopModal": [Function],
                  "modals": [],
                  "remove": [Function],
                }
              }
              onEntering={[Function]}
              onExited={[Function]}
              onHide={[Function]}
              onMouseUp={[Function]}
              renderBackdrop={[Function]}
              restoreFocus={true}
              show={false}
              transition={[Function]}
            />
          </Modal>
        </ConfirmModal>
      </ConfirmImportTypes>
      <div
        className="domain-form-panel domain-designer-buttons"
      >
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="default"
          disabled={false}
          onClick={[MockFunction]}
        >
          <button
            className="btn btn-default"
            disabled={false}
            onClick={[MockFunction]}
            type="button"
          >
            Cancel
          </button>
        </Button>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="success"
          className="pull-right"
          disabled={false}
          onClick={[Function]}
        >
          <button
            className="pull-right btn btn-success"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
        </Button>
      </div>
    </BaseDomainDesigner>
  </ListDesignerPanelsImpl>
</ComponentWithBaseDomainDesigner>
`;

exports[`ListDesignerPanel new list 1`] = `
[
  <div
    className="domain-form-panel domain-panel-no-theme panel panel-default"
  >
    <div
      className="domain-panel-header domain-heading-collapsible domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
      id="list-properties-hdr"
      onClick={[Function]}
    >
      <span
        className="domain-panel-title"
      >
        List Properties
      </span>
      <span
        className="pull-right"
      >
        <span
          className="fa fa-lg fa-minus-square domain-form-collapse-btn"
        />
      </span>
    </div>
    <div
      aria-expanded={null}
      className="panel-collapse collapse in"
    >
      <div
        className="panel-body"
      >
        <div
          className="margin-bottom row"
        >
          <div
            className="col-xs-12"
          >
            <div
              className="row"
            >
              <div
                className="col-xs-12"
              >
                <a
                  className="domain-field-float-right"
                  href="https://www.labkey.org/Documentation/wiki-page.view?referrer=inPage&name=createListOptions"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  Learn more about designing lists
                </a>
              </div>
            </div>
          </div>
        </div>
        <form
          className=""
        >
          <div
            className="col-md-7 col-xs-12"
          >
            <div
              className="domain-field-section-heading"
            >
              Basic Properties
            </div>
            <div
              className="margin-top row"
            >
              <div
                className="col-lg-2 col-xs-3"
              >
                <span
                  className="domain-no-wrap"
                >
                  Name
                  <span
                    className="label-help-target"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <span
                      className="label-help-icon fa fa-question-circle"
                    />
                  </span>
                   *
                </span>
              </div>
              <div
                className="col-lg-8 col-xs-9"
              >
                <input
                  className="form-control"
                  id="name"
                  onChange={[Function]}
                  placeholder="Enter a name for this list"
                  type="text"
                  value=""
                />
              </div>
              <div
                className="col-lg-2"
              />
            </div>
            <div
              className="margin-top row"
            >
              <div
                className="col-lg-2 col-xs-3"
              >
                <span
                  className="domain-no-wrap"
                >
                  Description
                  
                </span>
              </div>
              <div
                className="col-lg-8 col-xs-9"
              >
                <textarea
                  className="form-control"
                  id="description"
                  onChange={[Function]}
                  value=""
                />
              </div>
              <div
                className="col-lg-2"
              />
            </div>
          </div>
          <div
            className="col-md-3 col-xs-12"
          >
            <div
              className="domain-field-section-heading"
            >
              Allow these Actions
            </div>
            <div
              className="list__properties__allowable-actions"
            >
              <div
                className="list__properties__checkbox-row"
              >
                <div
                  className="form-group"
                >
                  <label>
                    <input
                      checked={true}
                      onChange={[Function]}
                      type="checkbox"
                    />
                    Delete
                  </label>
                </div>
              </div>
              <div
                className="list__properties__checkbox-row"
              >
                <div
                  className="form-group"
                >
                  <label>
                    <input
                      checked={true}
                      onChange={[Function]}
                      type="checkbox"
                    />
                    Upload
                  </label>
                </div>
              </div>
              <div
                className="list__properties__checkbox-row"
              >
                <div
                  className="form-group"
                >
                  <label>
                    <input
                      checked={true}
                      onChange={[Function]}
                      type="checkbox"
                    />
                    Export & Print
                  </label>
                </div>
              </div>
            </div>
          </div>
          <button
            className="domain-field-float-right btn btn-default"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Advanced Settings
          </button>
        </form>
      </div>
    </div>
  </div>,
  <div
    className="domain-form-panel panel panel-default"
  >
    <div
      className="domain-panel-header domain-heading-collapsible domain-panel-header-collapsed panel-heading"
      id="domain-header"
      onClick={[Function]}
    >
      <span
        className="label-help-target"
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <span
          className="domain-panel-status-icon domain-panel-status-icon-blue"
        >
          <span
            className="fa fa-exclamation-circle"
          />
        </span>
      </span>
      <span
        className="domain-panel-title"
      >
        Fields
      </span>
      <span
        className="pull-right"
      >
        <span
          className="fa fa-lg fa-plus-square domain-form-expand-btn"
        />
      </span>
    </div>
    <div
      aria-expanded={null}
      className="panel-collapse collapse"
    >
      <div
        className="panel-body"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-12"
          />
        </div>
        <span
          className="translator--toggle__wizard"
        >
          <div
            className="row"
          >
            <div
              className="col-sm-12"
            >
              <label
                className="control-label text-left"
              >
                <strong>
                  Import or infer fields from file
                </strong>
              </label>
            </div>
          </div>
          <div
            className="row"
          >
            <div
              className="col-sm-12"
            >
              <div
                className="wizard-row--container"
              >
                <div
                  className=""
                >
                  <div
                    className="file-upload--container block"
                  >
                    <label
                      className="file-upload--label"
                      htmlFor="fileUpload"
                      onDragEnter={[Function]}
                      onDragLeave={[Function]}
                      onDragOver={[Function]}
                      onDrop={[Function]}
                    >
                      <i
                        aria-hidden="true"
                        className="fa fa-cloud-upload fa-2x cloud-logo"
                      />
                      Select file or drag and drop here.
                    </label>
                    <input
                      accept=".csv, .tsv, .txt, .xls, .xlsx, .json"
                      className="file-upload--input"
                      id="fileUpload"
                      multiple={false}
                      name="fileUpload"
                      onChange={[Function]}
                      type="file"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </span>
        <div
          className="row"
        >
          <div
            className="col-md-9"
          >
            <div
              className="file-form-formats"
            >
              <strong>
                Supported formats include: 
              </strong>
              .csv, .tsv, .txt, .xls, .xlsx, .json
            </div>
          </div>
          <div
            className="col-md-3"
          >
            <div
              className="pull-right"
            />
          </div>
        </div>
        <div
          className="margin-top domain-form-manual-section"
        >
          <p>
            Or
          </p>
          <div
            className="form-group"
          >
            <div
              className="domain-form-manual-btn"
            >
              <span
                className="container--action-button btn btn-default"
                onClick={[Function]}
              >
                Manually Define Fields
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  <div
    className="domain-form-panel domain-designer-buttons"
  >
    <button
      className="btn btn-default"
      disabled={false}
      onClick={[MockFunction]}
      type="button"
    >
      Cancel
    </button>
    <button
      className="pull-right btn btn-success"
      disabled={false}
      onClick={[Function]}
      type="button"
    >
      Save
    </button>
  </div>,
]
`;
