// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SampleTypePropertiesPanel/> appPropertiesOnly 1`] = `
<div
  className="domain-form-panel domain-panel-no-theme panel panel-default"
>
  <div
    className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
    id="sample-type-properties-hdr"
    onClick={[Function]}
  >
    <span
      className="domain-panel-title"
    >
      Sample Type Properties
    </span>
  </div>
  <div
    className="panel-body"
  >
    <div
      className="margin-bottom row"
    >
      <div
        className="col-xs-12"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-12"
          >
            <a
              className="domain-field-float-right"
              href="https://www.labkey.org/Documentation/wiki-page.view?name=createSampleSet&referrer=inPage"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn more about designing sample types
            </a>
          </div>
        </div>
      </div>
    </div>
    <div
      className="domain-field-section-heading"
    >
      General Properties
    </div>
    <form
      className=""
    >
      <div
        className="margin-bottom margin-top row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Name
             *
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-name"
            onChange={[Function]}
            placeholder="Enter a name for this sample type"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Description
            <span
              className="label-help-target"
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                data-icon="question-circle"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </span>
            
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <textarea
            className="form-control textarea-noresize"
            id="entity-description"
            onChange={[Function]}
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <div
            className="name-expression-label-div"
            onMouseEnter={[Function]}
          >
            Naming 
            <span
              className="domain-no-wrap"
            >
              Pattern
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
              
            </span>
          </div>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-nameExpression"
            onChange={[Function]}
            placeholder="Enter a naming pattern (e.g., S-\${now:date}-\${dailySampleCount})"
            type="text"
            value=""
          />
        </div>
      </div>
    </form>
    <div
      className="row"
    >
      <div
        className="col-xs-2"
      />
      <div
        className="col-xs-10"
      >
        <span>
          <div
            className="form-group"
          >
            <div>
              <span
                className="container--action-button btn btn-default"
                onClick={[Function]}
              >
                <i
                  className="fa fa-plus-circle container--addition-icon"
                />
                 Add 
                Parent Alias
              </span>
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
            </div>
          </div>
        </span>
      </div>
    </div>
    <div
      className="domain-field-section-heading top-spacing"
    >
      Storage Settings
    </div>
    <div
      className="margin-top row"
    >
      <div
        className="col-xs-2"
      >
        Label 
        <span
          className="domain-no-wrap"
        >
          Color
          <span
            className="label-help-target"
            onMouseOut={[Function]}
            onMouseOver={[Function]}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
              data-icon="question-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </span>
          
        </span>
      </div>
      <div
        className="col-xs-10"
      >
        <div
          className="color-picker"
        >
          <button
            className="color-picker__button btn btn-default"
            onClick={[Function]}
            type="button"
          >
            None
            <i
              className="fa fa-caret-down"
            />
          </button>
          <div
            className="color-picker__picker"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`<SampleTypePropertiesPanel/> default props 1`] = `
<div
  className="domain-form-panel domain-panel-no-theme panel panel-default"
>
  <div
    className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
    id="sample-type-properties-hdr"
    onClick={[Function]}
  >
    <span
      className="domain-panel-title"
    >
      Sample Type Properties
    </span>
  </div>
  <div
    className="panel-body"
  >
    <div
      className="margin-bottom row"
    >
      <div
        className="col-xs-12"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-12"
          >
            <a
              className="domain-field-float-right"
              href="https://www.labkey.org/Documentation/wiki-page.view?name=createSampleSet&referrer=inPage"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn more about designing sample types
            </a>
          </div>
        </div>
      </div>
    </div>
    <form
      className=""
    >
      <div
        className="margin-bottom margin-top row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Name
             *
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-name"
            onChange={[Function]}
            placeholder="Enter a name for this sample type"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Description
            <span
              className="label-help-target"
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                data-icon="question-circle"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </span>
            
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <textarea
            className="form-control textarea-noresize"
            id="entity-description"
            onChange={[Function]}
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <div
            className="name-expression-label-div"
            onMouseEnter={[Function]}
          >
            Naming 
            <span
              className="domain-no-wrap"
            >
              Pattern
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
              
            </span>
          </div>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-nameExpression"
            onChange={[Function]}
            placeholder="Enter a naming pattern (e.g., S-\${now:date}-\${dailySampleCount})"
            type="text"
            value=""
          />
        </div>
      </div>
    </form>
    <div
      className="row"
    >
      <div
        className="col-xs-2"
      />
      <div
        className="col-xs-10"
      >
        <span>
          <div
            className="form-group"
          >
            <div>
              <span
                className="container--action-button btn btn-default"
                onClick={[Function]}
              >
                <i
                  className="fa fa-plus-circle container--addition-icon"
                />
                 Add 
                Parent Alias
              </span>
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
            </div>
          </div>
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`<SampleTypePropertiesPanel/> include dataclass and use custom labels 1`] = `
<div
  className="domain-form-panel domain-panel-no-theme panel panel-default"
>
  <div
    className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
    id="sample-type-properties-hdr"
    onClick={[Function]}
  >
    <span
      className="domain-panel-title"
    >
      Sample Type Properties
    </span>
  </div>
  <div
    className="panel-body"
  >
    <div
      className="margin-bottom row"
    >
      <div
        className="col-xs-12"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-12"
          >
            <a
              className="domain-field-float-right"
              href="https://www.labkey.org/Documentation/wiki-page.view?name=createSampleSet&referrer=inPage"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn more about designing sample types
            </a>
          </div>
        </div>
      </div>
    </div>
    <form
      className=""
    >
      <div
        className="margin-bottom margin-top row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Name
             *
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-name"
            onChange={[Function]}
            placeholder="Enter a name for this sample type"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Description
            <span
              className="label-help-target"
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                data-icon="question-circle"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </span>
            
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <textarea
            className="form-control textarea-noresize"
            id="entity-description"
            onChange={[Function]}
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <div
            className="name-expression-label-div"
            onMouseEnter={[Function]}
          >
            Naming 
            <span
              className="domain-no-wrap"
            >
              Pattern
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
              
            </span>
          </div>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-nameExpression"
            onChange={[Function]}
            placeholder="Enter a naming pattern (e.g., S-\${now:date}-\${dailySampleCount})"
            type="text"
            value=""
          />
        </div>
      </div>
    </form>
    <div
      className="row"
    >
      <div
        className="col-xs-2"
      />
      <div
        className="col-xs-10"
      >
        <span>
          <div
            className="form-group"
          >
            <div>
              <span
                className="container--action-button btn btn-default"
                onClick={[Function]}
              >
                <i
                  className="fa fa-plus-circle container--addition-icon"
                />
                 Add 
                Parent Alias
              </span>
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
            </div>
          </div>
        </span>
      </div>
    </div>
    <div
      className="row"
    >
      <div
        className="col-xs-2"
      />
      <div
        className="col-xs-10"
      >
        <span>
          <div
            className="form-group"
          >
            <div>
              <span
                className="container--action-button btn btn-default"
                onClick={[Function]}
              >
                <i
                  className="fa fa-plus-circle container--addition-icon"
                />
                 Add 
                Source Alias
              </span>
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
            </div>
          </div>
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`<SampleTypePropertiesPanel/> includeMetricUnitProperty 1`] = `
<div
  className="domain-form-panel domain-panel-no-theme panel panel-default"
>
  <div
    className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
    id="sample-type-properties-hdr"
    onClick={[Function]}
  >
    <span
      className="domain-panel-title"
    >
      Sample Type Properties
    </span>
  </div>
  <div
    className="panel-body"
  >
    <div
      className="margin-bottom row"
    >
      <div
        className="col-xs-12"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-12"
          >
            <a
              className="domain-field-float-right"
              href="https://www.labkey.org/Documentation/wiki-page.view?name=createSampleSet&referrer=inPage"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn more about designing sample types
            </a>
          </div>
        </div>
      </div>
    </div>
    <div
      className="domain-field-section-heading"
    >
      General Properties
    </div>
    <form
      className=""
    >
      <div
        className="margin-bottom margin-top row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Name
             *
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-name"
            onChange={[Function]}
            placeholder="Enter a name for this sample type"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Description
            <span
              className="label-help-target"
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                data-icon="question-circle"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </span>
            
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <textarea
            className="form-control textarea-noresize"
            id="entity-description"
            onChange={[Function]}
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <div
            className="name-expression-label-div"
            onMouseEnter={[Function]}
          >
            Naming 
            <span
              className="domain-no-wrap"
            >
              Pattern
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
              
            </span>
          </div>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-nameExpression"
            onChange={[Function]}
            placeholder="Enter a naming pattern (e.g., S-\${now:date}-\${dailySampleCount})"
            type="text"
            value=""
          />
        </div>
      </div>
    </form>
    <div
      className="row"
    >
      <div
        className="col-xs-2"
      />
      <div
        className="col-xs-10"
      >
        <span>
          <div
            className="form-group"
          >
            <div>
              <span
                className="container--action-button btn btn-default"
                onClick={[Function]}
              >
                <i
                  className="fa fa-plus-circle container--addition-icon"
                />
                 Add 
                Parent Alias
              </span>
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
            </div>
          </div>
        </span>
      </div>
    </div>
    <div
      className="domain-field-section-heading top-spacing"
    >
      Storage Settings
    </div>
    <div
      className="margin-top row"
    >
      <div
        className="col-xs-2"
      >
        Label 
        <span
          className="domain-no-wrap"
        >
          Color
          <span
            className="label-help-target"
            onMouseOut={[Function]}
            onMouseOver={[Function]}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
              data-icon="question-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </span>
          
        </span>
      </div>
      <div
        className="col-xs-10"
      >
        <div
          className="color-picker"
        >
          <button
            className="color-picker__button btn btn-default"
            onClick={[Function]}
            type="button"
          >
            None
            <i
              className="fa fa-caret-down"
            />
          </button>
          <div
            className="color-picker__picker"
          />
        </div>
      </div>
    </div>
    <div
      className="margin-top row"
    >
      <div
        className="col-xs-2"
      >
        Metric 
        <span
          className="domain-no-wrap"
        >
          Unit
          <span
            className="label-help-target"
            onMouseOut={[Function]}
            onMouseOver={[Function]}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
              data-icon="question-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </span>
          
        </span>
      </div>
      <div
        className="col-xs-3"
      >
        <input
          className="form-control"
          name="metricUnit"
          onChange={[Function]}
          placeholder="Enter a unit"
          type="text"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`<SampleTypePropertiesPanel/> metricUnitOptions 1`] = `
<div
  className="domain-form-panel domain-panel-no-theme panel panel-default"
>
  <div
    className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
    id="sample-type-properties-hdr"
    onClick={[Function]}
  >
    <span
      className="domain-panel-title"
    >
      Sample Type Properties
    </span>
  </div>
  <div
    className="panel-body"
  >
    <div
      className="margin-bottom row"
    >
      <div
        className="col-xs-12"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-12"
          >
            <a
              className="domain-field-float-right"
              href="https://www.labkey.org/Documentation/wiki-page.view?name=createSampleSet&referrer=inPage"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn more about designing sample types
            </a>
          </div>
        </div>
      </div>
    </div>
    <div
      className="domain-field-section-heading"
    >
      General Properties
    </div>
    <form
      className=""
    >
      <div
        className="margin-bottom margin-top row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Name
             *
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-name"
            onChange={[Function]}
            placeholder="Enter a name for this sample type"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Description
            <span
              className="label-help-target"
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                data-icon="question-circle"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </span>
            
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <textarea
            className="form-control textarea-noresize"
            id="entity-description"
            onChange={[Function]}
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <div
            className="name-expression-label-div"
            onMouseEnter={[Function]}
          >
            Naming 
            <span
              className="domain-no-wrap"
            >
              Pattern
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
              
            </span>
          </div>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-nameExpression"
            onChange={[Function]}
            placeholder="Enter a naming pattern (e.g., S-\${now:date}-\${dailySampleCount})"
            type="text"
            value=""
          />
        </div>
      </div>
    </form>
    <div
      className="row"
    >
      <div
        className="col-xs-2"
      />
      <div
        className="col-xs-10"
      >
        <span>
          <div
            className="form-group"
          >
            <div>
              <span
                className="container--action-button btn btn-default"
                onClick={[Function]}
              >
                <i
                  className="fa fa-plus-circle container--addition-icon"
                />
                 Add 
                Parent Alias
              </span>
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
            </div>
          </div>
        </span>
      </div>
    </div>
    <div
      className="domain-field-section-heading top-spacing"
    >
      Storage Settings
    </div>
    <div
      className="margin-top row"
    >
      <div
        className="col-xs-2"
      >
        Label 
        <span
          className="domain-no-wrap"
        >
          Color
          <span
            className="label-help-target"
            onMouseOut={[Function]}
            onMouseOver={[Function]}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
              data-icon="question-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </span>
          
        </span>
      </div>
      <div
        className="col-xs-10"
      >
        <div
          className="color-picker"
        >
          <button
            className="color-picker__button btn btn-default"
            onClick={[Function]}
            type="button"
          >
            None
            <i
              className="fa fa-caret-down"
            />
          </button>
          <div
            className="color-picker__picker"
          />
        </div>
      </div>
    </div>
    <div
      className="margin-top row"
    >
      <div
        className="col-xs-2"
      >
        Display stored amount 
        <span
          className="domain-no-wrap"
        >
          in
          <span
            className="label-help-target"
            onMouseOut={[Function]}
            onMouseOver={[Function]}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
              data-icon="question-circle"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </span>
           *
        </span>
      </div>
      <div
        className="col-xs-3"
      >
        <div
          className="select-input-container sampleset-metric-unit-select-container"
        >
          <div
            className="sampleset-metric-unit-select"
          >
            <div
              className="select-input css-2b097c-container"
              id="selectinput-0"
              onKeyDown={[Function]}
            >
              <span
                aria-atomic="false"
                aria-live="polite"
                aria-relevant="additions text"
                className="css-1f43avz-a11yText-A11yText"
              />
              <div
                className="select-input__control css-yk16xz-control"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <div
                  className="select-input__value-container css-g1d714-ValueContainer"
                >
                  <div
                    className="select-input__placeholder css-1wa3eu0-placeholder"
                  >
                    Select a unit...
                  </div>
                  <div
                    className="css-b8ldur-Input"
                  >
                    <div
                      className="select-input__input"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <input
                        aria-autocomplete="list"
                        autoCapitalize="none"
                        autoComplete="off"
                        autoCorrect="off"
                        disabled={false}
                        id="react-select-2-input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={true}
                        spellCheck="false"
                        style={
                          Object {
                            "background": 0,
                            "border": 0,
                            "boxSizing": "content-box",
                            "color": "inherit",
                            "fontSize": "inherit",
                            "label": "input",
                            "opacity": 1,
                            "outline": 0,
                            "padding": 0,
                            "width": "1px",
                          }
                        }
                        tabIndex="0"
                        type="text"
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className="select-input__indicators css-1hb7zxy-IndicatorsContainer"
                >
                  <span
                    className="select-input__indicator-separator css-1okebmr-indicatorSeparator"
                  />
                  <div
                    aria-hidden="true"
                    className="select-input__indicator select-input__dropdown-indicator css-tlfecz-indicatorContainer"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <svg
                      aria-hidden="true"
                      className="css-tj5bde-Svg"
                      focusable="false"
                      height={20}
                      viewBox="0 0 20 20"
                      width={20}
                    >
                      <path
                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                      />
                    </svg>
                  </div>
                </div>
              </div>
              <input
                name="metricUnit"
                type="hidden"
                value=""
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`<SampleTypePropertiesPanel/> nameExpressionInfoUrl 1`] = `
<div
  className="domain-form-panel domain-panel-no-theme panel panel-default"
>
  <div
    className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
    id="sample-type-properties-hdr"
    onClick={[Function]}
  >
    <span
      className="domain-panel-title"
    >
      Sample Type Properties
    </span>
  </div>
  <div
    className="panel-body"
  >
    <div
      className="margin-bottom row"
    >
      <div
        className="col-xs-12"
      >
        <div
          className="row"
        >
          <div
            className="col-xs-12"
          >
            <a
              className="domain-field-float-right"
              href="https://www.labkey.org/Documentation/wiki-page.view?name=createSampleSet&referrer=inPage"
              rel="noopener noreferrer"
              target="_blank"
            >
              Learn more about designing sample types
            </a>
          </div>
        </div>
      </div>
    </div>
    <form
      className=""
    >
      <div
        className="margin-bottom margin-top row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Name
             *
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-name"
            onChange={[Function]}
            placeholder="Enter a name for this sample type"
            type="text"
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <span
            className="domain-no-wrap"
          >
            Description
            <span
              className="label-help-target"
              onMouseOut={[Function]}
              onMouseOver={[Function]}
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                data-icon="question-circle"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 512 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </span>
            
          </span>
        </div>
        <div
          className="col-xs-10"
        >
          <textarea
            className="form-control textarea-noresize"
            id="entity-description"
            onChange={[Function]}
            value=""
          />
        </div>
      </div>
      <div
        className="margin-bottom row"
      >
        <div
          className="col-xs-2"
        >
          <div
            className="name-expression-label-div"
            onMouseEnter={[Function]}
          >
            Naming 
            <span
              className="domain-no-wrap"
            >
              Pattern
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
              
            </span>
          </div>
        </div>
        <div
          className="col-xs-10"
        >
          <input
            className="form-control"
            id="entity-nameExpression"
            onChange={[Function]}
            placeholder="Enter a naming pattern (e.g., S-\${now:date}-\${dailySampleCount})"
            type="text"
            value=""
          />
        </div>
      </div>
    </form>
    <div
      className="row"
    >
      <div
        className="col-xs-2"
      />
      <div
        className="col-xs-10"
      >
        <span>
          <div
            className="form-group"
          >
            <div>
              <span
                className="container--action-button btn btn-default"
                onClick={[Function]}
              >
                <i
                  className="fa fa-plus-circle container--addition-icon"
                />
                 Add 
                Parent Alias
              </span>
              <span
                className="label-help-target"
                onMouseOut={[Function]}
                onMouseOver={[Function]}
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                  data-icon="question-circle"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 512 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
            </div>
          </div>
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`<SampleTypePropertiesPanel/> with aliquot preview name 1`] = `
<ComponentWithDomainPropertiesPanelCollapse
  aliquotNamePatternProps={
    Object {
      "showAliquotNameExpression": true,
    }
  }
  appPropertiesOnly={false}
  collapsed={false}
  controlledCollapse={false}
  initCollapsed={false}
  model={
    Immutable.Record {
      "rowId": 1,
      "name": undefined,
      "nameReadOnly": undefined,
      "nameExpression": undefined,
      "aliquotNameExpression": "S-\${\${AliquotedFrom.:withCounter}}",
      "description": undefined,
      "labelColor": undefined,
      "metricUnit": undefined,
      "parentAliases": undefined,
      "importAliases": Immutable.Map {},
      "domainId": undefined,
      "domain": Immutable.Record {
        "name": undefined,
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": false,
        "allowAttachmentProperties": false,
        "allowFlagProperties": true,
        "allowTextChoiceProperties": true,
        "allowTimepointProperties": false,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
        "domainKindName": undefined,
        "schemaName": undefined,
        "queryName": undefined,
      },
      "autoLinkTargetContainerId": undefined,
      "autoLinkCategory": undefined,
      "exception": undefined,
    }
  }
  namePreviews={
    Array [
      null,
      "S-parentSample-1",
    ]
  }
  onAddParentAlias={[Function]}
  onAddUniqueIdField={[Function]}
  onParentAliasChange={[Function]}
  onRemoveParentAlias={[Function]}
  panelStatus="NONE"
  parentOptions={Array []}
  updateModel={[Function]}
  useTheme={false}
  validate={false}
>
  <SampleTypePropertiesPanelImpl
    aliquotNamePatternProps={
      Object {
        "showAliquotNameExpression": true,
      }
    }
    appPropertiesOnly={false}
    collapsed={false}
    controlledCollapse={false}
    dataClassAliasCaption="Data Class Alias"
    dataClassParentageLabel="data class"
    dataClassTypeCaption="Data Class"
    helpTopic="createSampleSet"
    metricUnitProps={
      Object {
        "metricUnitHelpMsg": "The unit of measurement used for the sample type.",
        "metricUnitLabel": "Metric Unit",
      }
    }
    model={
      Immutable.Record {
        "rowId": 1,
        "name": undefined,
        "nameReadOnly": undefined,
        "nameExpression": undefined,
        "aliquotNameExpression": "S-\${\${AliquotedFrom.:withCounter}}",
        "description": undefined,
        "labelColor": undefined,
        "metricUnit": undefined,
        "parentAliases": undefined,
        "importAliases": Immutable.Map {},
        "domainId": undefined,
        "domain": Immutable.Record {
          "name": undefined,
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": false,
          "allowAttachmentProperties": false,
          "allowFlagProperties": true,
          "allowTextChoiceProperties": true,
          "allowTimepointProperties": false,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
          "domainKindName": undefined,
          "schemaName": undefined,
          "queryName": undefined,
        },
        "autoLinkTargetContainerId": undefined,
        "autoLinkCategory": undefined,
        "exception": undefined,
      }
    }
    nameExpressionInfoUrl="https://www.labkey.org/Documentation/wiki-page.view?name=sampleIDs&referrer=inPage"
    nameExpressionPlaceholder="Enter a naming pattern (e.g., S-\${now:date}-\${dailySampleCount})"
    namePreviews={
      Array [
        null,
        "S-parentSample-1",
      ]
    }
    nounPlural="Sample Types"
    nounSingular="Sample Type"
    onAddParentAlias={[Function]}
    onAddUniqueIdField={[Function]}
    onParentAliasChange={[Function]}
    onRemoveParentAlias={[Function]}
    panelStatus="NONE"
    parentOptions={Array []}
    sampleAliasCaption="Sample Alias"
    sampleTypeCaption="Sample Type"
    showLinkToStudy={true}
    togglePanel={[Function]}
    updateModel={[Function]}
    useTheme={false}
    validate={false}
  >
    <BasePropertiesPanel
      aliquotNamePatternProps={
        Object {
          "showAliquotNameExpression": true,
        }
      }
      appPropertiesOnly={false}
      collapsed={false}
      controlledCollapse={false}
      dataClassAliasCaption="Data Class Alias"
      dataClassParentageLabel="data class"
      dataClassTypeCaption="Data Class"
      headerId="sample-type-properties-hdr"
      helpTopic="createSampleSet"
      isValid={true}
      metricUnitProps={
        Object {
          "metricUnitHelpMsg": "The unit of measurement used for the sample type.",
          "metricUnitLabel": "Metric Unit",
        }
      }
      model={
        Immutable.Record {
          "rowId": 1,
          "name": undefined,
          "nameReadOnly": undefined,
          "nameExpression": undefined,
          "aliquotNameExpression": "S-\${\${AliquotedFrom.:withCounter}}",
          "description": undefined,
          "labelColor": undefined,
          "metricUnit": undefined,
          "parentAliases": undefined,
          "importAliases": Immutable.Map {},
          "domainId": undefined,
          "domain": Immutable.Record {
            "name": undefined,
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": false,
            "allowAttachmentProperties": false,
            "allowFlagProperties": true,
            "allowTextChoiceProperties": true,
            "allowTimepointProperties": false,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
            "domainKindName": undefined,
            "schemaName": undefined,
            "queryName": undefined,
          },
          "autoLinkTargetContainerId": undefined,
          "autoLinkCategory": undefined,
          "exception": undefined,
        }
      }
      nameExpressionInfoUrl="https://www.labkey.org/Documentation/wiki-page.view?name=sampleIDs&referrer=inPage"
      nameExpressionPlaceholder="Enter a naming pattern (e.g., S-\${now:date}-\${dailySampleCount})"
      namePreviews={
        Array [
          null,
          "S-parentSample-1",
        ]
      }
      nounPlural="Sample Types"
      nounSingular="Sample Type"
      onAddParentAlias={[Function]}
      onAddUniqueIdField={[Function]}
      onParentAliasChange={[Function]}
      onRemoveParentAlias={[Function]}
      panelStatus="NONE"
      parentOptions={Array []}
      sampleAliasCaption="Sample Alias"
      sampleTypeCaption="Sample Type"
      showLinkToStudy={true}
      title="Sample Type Properties"
      togglePanel={[Function]}
      updateModel={[Function]}
      updateValidStatus={[Function]}
      useTheme={false}
      validate={false}
    >
      <ForwardRef
        className="domain-form-panel domain-panel-no-theme"
        expanded={true}
        onToggle={[Function]}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel domain-panel-no-theme"
          expanded={true}
          innerRef={null}
          onToggle={[Function]}
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel domain-panel-no-theme"
            expanded={true}
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel domain-panel-no-theme panel panel-default"
            >
              <CollapsiblePanelHeader
                collapsed={false}
                controlledCollapse={false}
                iconHelpMsg="Contains errors or is missing required values."
                id="sample-type-properties-hdr"
                isValid={true}
                panelStatus="NONE"
                title="Sample Type Properties"
                togglePanel={[Function]}
                useTheme={false}
              >
                <PanelHeading
                  bsClass="panel"
                  className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme"
                  componentClass="div"
                  id="sample-type-properties-hdr"
                  onClick={[Function]}
                >
                  <div
                    className="domain-panel-header domain-panel-header-expanded domain-panel-header-no-theme panel-heading"
                    id="sample-type-properties-hdr"
                    onClick={[Function]}
                  >
                    <span
                      className="domain-panel-title"
                    >
                      Sample Type Properties
                    </span>
                  </div>
                </PanelHeading>
              </CollapsiblePanelHeader>
              <PanelBody
                bsClass="panel"
                collapsible={false}
              >
                <div
                  className="panel-body"
                >
                  <Row
                    bsClass="row"
                    className="margin-bottom"
                    componentClass="div"
                  >
                    <div
                      className="margin-bottom row"
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        xs={12}
                      >
                        <div
                          className="col-xs-12"
                        >
                          <HelpTopicURL
                            helpTopic="createSampleSet"
                            nounPlural="Sample Types"
                          >
                            <Row
                              bsClass="row"
                              componentClass="div"
                            >
                              <div
                                className="row"
                              >
                                <Col
                                  bsClass="col"
                                  componentClass="div"
                                  xs={12}
                                >
                                  <div
                                    className="col-xs-12"
                                  >
                                    <HelpLink
                                      className="domain-field-float-right"
                                      topic="createSampleSet"
                                    >
                                      <a
                                        className="domain-field-float-right"
                                        href="https://www.labkey.org/Documentation/wiki-page.view?name=createSampleSet&referrer=inPage"
                                        rel="noopener noreferrer"
                                        target="_blank"
                                      >
                                        Learn more about designing sample types
                                      </a>
                                    </HelpLink>
                                  </div>
                                </Col>
                              </div>
                            </Row>
                          </HelpTopicURL>
                        </div>
                      </Col>
                    </div>
                  </Row>
                  <EntityDetailsForm
                    data={
                      Immutable.Record {
                        "rowId": 1,
                        "name": undefined,
                        "nameReadOnly": undefined,
                        "nameExpression": undefined,
                        "aliquotNameExpression": "S-\${\${AliquotedFrom.:withCounter}}",
                        "description": undefined,
                        "labelColor": undefined,
                        "metricUnit": undefined,
                        "parentAliases": undefined,
                        "importAliases": Immutable.Map {},
                        "domainId": undefined,
                        "domain": Immutable.Record {
                          "name": undefined,
                          "container": undefined,
                          "description": undefined,
                          "domainURI": undefined,
                          "domainId": null,
                          "allowFileLinkProperties": false,
                          "allowAttachmentProperties": false,
                          "allowFlagProperties": true,
                          "allowTextChoiceProperties": true,
                          "allowTimepointProperties": false,
                          "showDefaultValueSettings": false,
                          "defaultDefaultValueType": undefined,
                          "defaultValueOptions": Immutable.List [],
                          "fields": Immutable.List [],
                          "indices": Immutable.List [],
                          "domainException": undefined,
                          "mandatoryFieldNames": Immutable.List [],
                          "reservedFieldNames": Immutable.List [],
                          "newDesignFields": undefined,
                          "instructions": undefined,
                          "domainKindName": undefined,
                          "schemaName": undefined,
                          "queryName": undefined,
                        },
                        "autoLinkTargetContainerId": undefined,
                        "autoLinkCategory": undefined,
                        "exception": undefined,
                      }
                    }
                    nameExpressionInfoUrl="https://www.labkey.org/Documentation/wiki-page.view?name=sampleIDs&referrer=inPage"
                    nameExpressionPlaceholder="Enter a naming pattern (e.g., S-\${now:date}-\${dailySampleCount})"
                    noun="Sample Type"
                    onFormChange={[Function]}
                    previewName={null}
                    showPreviewName={false}
                  >
                    <Form
                      bsClass="form"
                      componentClass="form"
                      horizontal={false}
                      inline={false}
                    >
                      <form
                        className=""
                      >
                        <Row
                          bsClass="row"
                          className="margin-bottom margin-top"
                          componentClass="div"
                        >
                          <div
                            className="margin-bottom margin-top row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={2}
                            >
                              <div
                                className="col-xs-2"
                              >
                                <DomainFieldLabel
                                  label="Name"
                                  required={true}
                                >
                                  <span
                                    className="domain-no-wrap"
                                  >
                                    Name
                                     *
                                  </span>
                                </DomainFieldLabel>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={10}
                            >
                              <div
                                className="col-xs-10"
                              >
                                <FormControl
                                  bsClass="form-control"
                                  componentClass="input"
                                  id="entity-name"
                                  onChange={[Function]}
                                  placeholder="Enter a name for this sample type"
                                  type="text"
                                  value=""
                                >
                                  <input
                                    className="form-control"
                                    id="entity-name"
                                    onChange={[Function]}
                                    placeholder="Enter a name for this sample type"
                                    type="text"
                                    value=""
                                  />
                                </FormControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="margin-bottom"
                          componentClass="div"
                        >
                          <div
                            className="margin-bottom row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={2}
                            >
                              <div
                                className="col-xs-2"
                              >
                                <DomainFieldLabel
                                  helpTipBody="A short description for this sample type."
                                  label="Description"
                                >
                                  <span
                                    className="domain-no-wrap"
                                  >
                                    Description
                                    <Component
                                      customStyle={Object {}}
                                      id="tooltip"
                                      size="1x"
                                      title="Description"
                                    >
                                      <span
                                        className="label-help-target"
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                      >
                                        <FontAwesomeIcon
                                          border={false}
                                          className="label-help-icon"
                                          fixedWidth={false}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [
                                                512,
                                                512,
                                                Array [],
                                                "f059",
                                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                              ],
                                              "iconName": "question-circle",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size="1x"
                                          spin={false}
                                          style={Object {}}
                                          swapOpacity={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                        <Overlay
                                          animation={[Function]}
                                          placement="right"
                                          rootClose={false}
                                          show={false}
                                        >
                                          <Overlay
                                            placement="right"
                                            rootClose={false}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Overlay>
                                      </span>
                                    </Component>
                                  </span>
                                </DomainFieldLabel>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={10}
                            >
                              <div
                                className="col-xs-10"
                              >
                                <textarea
                                  className="form-control textarea-noresize"
                                  id="entity-description"
                                  onChange={[Function]}
                                  value=""
                                />
                              </div>
                            </Col>
                          </div>
                        </Row>
                        <Row
                          bsClass="row"
                          className="margin-bottom"
                          componentClass="div"
                        >
                          <div
                            className="margin-bottom row"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={2}
                            >
                              <div
                                className="col-xs-2"
                              >
                                <div
                                  className="name-expression-label-div"
                                  onMouseEnter={[Function]}
                                >
                                  <DomainFieldLabel
                                    helpTipBody={
                                      <React.Fragment>
                                        <p>
                                          Pattern used for generating unique IDs for this 
                                          sample type
                                          .
                                        </p>
                                        <p>
                                          <a
                                            href="https://www.labkey.org/Documentation/wiki-page.view?name=sampleIDs&referrer=inPage"
                                            rel="noopener noreferrer"
                                            target="_blank"
                                          >
                                            More info
                                          </a>
                                        </p>
                                      </React.Fragment>
                                    }
                                    label="Naming Pattern"
                                  >
                                    Naming 
                                    <span
                                      className="domain-no-wrap"
                                    >
                                      Pattern
                                      <Component
                                        customStyle={Object {}}
                                        id="tooltip"
                                        size="1x"
                                        title="Naming Pattern"
                                      >
                                        <span
                                          className="label-help-target"
                                          onMouseOut={[Function]}
                                          onMouseOver={[Function]}
                                        >
                                          <FontAwesomeIcon
                                            border={false}
                                            className="label-help-icon"
                                            fixedWidth={false}
                                            flip={null}
                                            icon={
                                              Object {
                                                "icon": Array [
                                                  512,
                                                  512,
                                                  Array [],
                                                  "f059",
                                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                ],
                                                "iconName": "question-circle",
                                                "prefix": "fas",
                                              }
                                            }
                                            inverse={false}
                                            listItem={false}
                                            mask={null}
                                            pull={null}
                                            pulse={false}
                                            rotation={null}
                                            size="1x"
                                            spin={false}
                                            style={Object {}}
                                            swapOpacity={false}
                                            symbol={false}
                                            title=""
                                            transform={null}
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                              data-icon="question-circle"
                                              data-prefix="fas"
                                              focusable="false"
                                              role="img"
                                              style={Object {}}
                                              viewBox="0 0 512 512"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <path
                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                fill="currentColor"
                                                style={Object {}}
                                              />
                                            </svg>
                                          </FontAwesomeIcon>
                                          <Overlay
                                            animation={[Function]}
                                            placement="right"
                                            rootClose={false}
                                            show={false}
                                          >
                                            <Overlay
                                              placement="right"
                                              rootClose={false}
                                              show={false}
                                              transition={[Function]}
                                            />
                                          </Overlay>
                                        </span>
                                      </Component>
                                    </span>
                                  </DomainFieldLabel>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={10}
                            >
                              <div
                                className="col-xs-10"
                              >
                                <FormControl
                                  bsClass="form-control"
                                  className=""
                                  componentClass="input"
                                  id="entity-nameExpression"
                                  onChange={[Function]}
                                  placeholder="Enter a naming pattern (e.g., S-\${now:date}-\${dailySampleCount})"
                                  type="text"
                                  value=""
                                >
                                  <input
                                    className="form-control"
                                    id="entity-nameExpression"
                                    onChange={[Function]}
                                    placeholder="Enter a naming pattern (e.g., S-\${now:date}-\${dailySampleCount})"
                                    type="text"
                                    value=""
                                  />
                                </FormControl>
                              </div>
                            </Col>
                          </div>
                        </Row>
                      </form>
                    </Form>
                  </EntityDetailsForm>
                  <Row
                    bsClass="row"
                    className="margin-bottom"
                    componentClass="div"
                  >
                    <div
                      className="margin-bottom row"
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}
                      >
                        <div
                          className="col-xs-2"
                        >
                          <div
                            onMouseEnter={[Function]}
                          >
                            <DomainFieldLabel
                              helpTipBody={
                                <React.Fragment>
                                  <p>
                                    Pattern used for generating unique Ids for Aliquots.
                                  </p>
                                  <p>
                                    By default, the name of the aliquot will use the name of its parent followed by a dash and a counter for that parent’s aliquots.
                                  </p>
                                  <p>
                                    For example, if the original sample is S1, aliquots of that sample will be named S1-1, S1-2, etc.
                                  </p>
                                  <NameExpressionPreview
                                    previewName="S-parentSample-1"
                                  />
                                  <p>
                                    <a
                                      href="https://www.labkey.org/Documentation/wiki-page.view?name=aliquotIDs&referrer=inPage"
                                      rel="noopener noreferrer"
                                      target="_blank"
                                    >
                                      More info
                                    </a>
                                  </p>
                                </React.Fragment>
                              }
                              label="Aliquot Naming Pattern"
                            >
                              Aliquot Naming 
                              <span
                                className="domain-no-wrap"
                              >
                                Pattern
                                <Component
                                  customStyle={Object {}}
                                  id="tooltip"
                                  size="1x"
                                  title="Aliquot Naming Pattern"
                                >
                                  <span
                                    className="label-help-target"
                                    onMouseOut={[Function]}
                                    onMouseOver={[Function]}
                                  >
                                    <FontAwesomeIcon
                                      border={false}
                                      className="label-help-icon"
                                      fixedWidth={false}
                                      flip={null}
                                      icon={
                                        Object {
                                          "icon": Array [
                                            512,
                                            512,
                                            Array [],
                                            "f059",
                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                          ],
                                          "iconName": "question-circle",
                                          "prefix": "fas",
                                        }
                                      }
                                      inverse={false}
                                      listItem={false}
                                      mask={null}
                                      pull={null}
                                      pulse={false}
                                      rotation={null}
                                      size="1x"
                                      spin={false}
                                      style={Object {}}
                                      swapOpacity={false}
                                      symbol={false}
                                      title=""
                                      transform={null}
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                        data-icon="question-circle"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        style={Object {}}
                                        viewBox="0 0 512 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                          fill="currentColor"
                                          style={Object {}}
                                        />
                                      </svg>
                                    </FontAwesomeIcon>
                                    <Overlay
                                      animation={[Function]}
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                    >
                                      <Overlay
                                        placement="right"
                                        rootClose={false}
                                        show={false}
                                        transition={[Function]}
                                      />
                                    </Overlay>
                                  </span>
                                </Component>
                              </span>
                            </DomainFieldLabel>
                          </div>
                        </div>
                      </Col>
                      <Col
                        bsClass="col"
                        componentClass="div"
                        xs={10}
                      >
                        <div
                          className="col-xs-10"
                        >
                          <FormControl
                            bsClass="form-control"
                            className=""
                            componentClass="input"
                            name="aliquotNameExpression"
                            onChange={[Function]}
                            placeholder="Enter a naming pattern for aliquots (e.g., \${\${AliquotedFrom}-:withCounter})"
                            type="text"
                            value="S-\${\${AliquotedFrom.:withCounter}}"
                          >
                            <input
                              className="form-control"
                              name="aliquotNameExpression"
                              onChange={[Function]}
                              placeholder="Enter a naming pattern for aliquots (e.g., \${\${AliquotedFrom}-:withCounter})"
                              type="text"
                              value="S-\${\${AliquotedFrom.:withCounter}}"
                            />
                          </FormControl>
                        </div>
                      </Col>
                    </div>
                  </Row>
                  <Row
                    bsClass="row"
                    componentClass="div"
                  >
                    <div
                      className="row"
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}
                      >
                        <div
                          className="col-xs-2"
                        />
                      </Col>
                      <Col
                        bsClass="col"
                        componentClass="div"
                        xs={10}
                      >
                        <div
                          className="col-xs-10"
                        >
                          <span>
                            <AddEntityButton
                              entity="Parent Alias"
                              helperBody={
                                <React.Fragment>
                                  <p>
                                    Column headings used during import to set a sample's parentage.
                                  </p>
                                  <p>
                                    <HelpLink
                                      topic="deriveSamples#alias"
                                    >
                                      More info
                                    </HelpLink>
                                  </p>
                                </React.Fragment>
                              }
                              onClick={[Function]}
                            >
                              <ActionButton
                                containerClass="form-group"
                                helperBody={
                                  <React.Fragment>
                                    <p>
                                      Column headings used during import to set a sample's parentage.
                                    </p>
                                    <p>
                                      <HelpLink
                                        topic="deriveSamples#alias"
                                      >
                                        More info
                                      </HelpLink>
                                    </p>
                                  </React.Fragment>
                                }
                                helperTitle="More Info"
                                onClick={[Function]}
                              >
                                <div
                                  className="form-group"
                                >
                                  <div>
                                    <span
                                      className="container--action-button btn btn-default"
                                      onClick={[Function]}
                                    >
                                      <i
                                        className="fa fa-plus-circle container--addition-icon"
                                      />
                                       Add 
                                      Parent Alias
                                    </span>
                                    <Component
                                      customStyle={Object {}}
                                      id="tooltip"
                                      size="1x"
                                      title="More Info"
                                    >
                                      <span
                                        className="label-help-target"
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                      >
                                        <FontAwesomeIcon
                                          border={false}
                                          className="label-help-icon"
                                          fixedWidth={false}
                                          flip={null}
                                          icon={
                                            Object {
                                              "icon": Array [
                                                512,
                                                512,
                                                Array [],
                                                "f059",
                                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                              ],
                                              "iconName": "question-circle",
                                              "prefix": "fas",
                                            }
                                          }
                                          inverse={false}
                                          listItem={false}
                                          mask={null}
                                          pull={null}
                                          pulse={false}
                                          rotation={null}
                                          size="1x"
                                          spin={false}
                                          style={Object {}}
                                          swapOpacity={false}
                                          symbol={false}
                                          title=""
                                          transform={null}
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                              style={Object {}}
                                            />
                                          </svg>
                                        </FontAwesomeIcon>
                                        <Overlay
                                          animation={[Function]}
                                          placement="right"
                                          rootClose={false}
                                          show={false}
                                        >
                                          <Overlay
                                            placement="right"
                                            rootClose={false}
                                            show={false}
                                            transition={[Function]}
                                          />
                                        </Overlay>
                                      </span>
                                    </Component>
                                  </div>
                                </div>
                              </ActionButton>
                            </AddEntityButton>
                          </span>
                        </div>
                      </Col>
                    </div>
                  </Row>
                  <SectionHeading
                    cls="top-spacing"
                    title="Storage Settings"
                  >
                    <div
                      className="domain-field-section-heading top-spacing"
                    >
                      Storage Settings
                    </div>
                  </SectionHeading>
                  <Row
                    bsClass="row"
                    className="margin-top"
                    componentClass="div"
                  >
                    <div
                      className="margin-top row"
                    >
                      <Col
                        bsClass="col"
                        componentClass="div"
                        xs={2}
                      >
                        <div
                          className="col-xs-2"
                        >
                          <DomainFieldLabel
                            helpTipBody={
                              <React.Fragment>
                                <p>
                                  Use a Unique ID field to represent barcodes or other ID fields in use in your lab.
                                </p>
                                <p>
                                  Learn more about using 
                                  <HelpLink
                                    topic="uniqueStorageIds"
                                  >
                                    barcodes and unique IDs
                                  </HelpLink>
                                   in
                                   
                                  LabKey Server
                                  .
                                </p>
                              </React.Fragment>
                            }
                            label="Barcodes"
                          >
                            <span
                              className="domain-no-wrap"
                            >
                              Barcodes
                              <Component
                                customStyle={Object {}}
                                id="tooltip"
                                size="1x"
                                title="Barcodes"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size="1x"
                                    spin={false}
                                    style={Object {}}
                                    swapOpacity={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </Component>
                            </span>
                          </DomainFieldLabel>
                        </div>
                      </Col>
                      <Col
                        bsClass="col"
                        componentClass="div"
                        xs={10}
                      >
                        <div
                          className="col-xs-10"
                        >
                          <Memo()
                            isFieldsPanel={false}
                            model={
                              Immutable.Record {
                                "rowId": 1,
                                "name": undefined,
                                "nameReadOnly": undefined,
                                "nameExpression": undefined,
                                "aliquotNameExpression": "S-\${\${AliquotedFrom.:withCounter}}",
                                "description": undefined,
                                "labelColor": undefined,
                                "metricUnit": undefined,
                                "parentAliases": undefined,
                                "importAliases": Immutable.Map {},
                                "domainId": undefined,
                                "domain": Immutable.Record {
                                  "name": undefined,
                                  "container": undefined,
                                  "description": undefined,
                                  "domainURI": undefined,
                                  "domainId": null,
                                  "allowFileLinkProperties": false,
                                  "allowAttachmentProperties": false,
                                  "allowFlagProperties": true,
                                  "allowTextChoiceProperties": true,
                                  "allowTimepointProperties": false,
                                  "showDefaultValueSettings": false,
                                  "defaultDefaultValueType": undefined,
                                  "defaultValueOptions": Immutable.List [],
                                  "fields": Immutable.List [],
                                  "indices": Immutable.List [],
                                  "domainException": undefined,
                                  "mandatoryFieldNames": Immutable.List [],
                                  "reservedFieldNames": Immutable.List [],
                                  "newDesignFields": undefined,
                                  "instructions": undefined,
                                  "domainKindName": undefined,
                                  "schemaName": undefined,
                                  "queryName": undefined,
                                },
                                "autoLinkTargetContainerId": undefined,
                                "autoLinkCategory": undefined,
                                "exception": undefined,
                              }
                            }
                            onAddField={[Function]}
                          >
                            <Alert
                              bsStyle="info"
                              className="uniqueid-alert"
                            >
                              <Alert
                                bsClass="alert"
                                bsStyle="info"
                                className="uniqueid-alert"
                                closeLabel="Close alert"
                              >
                                <div
                                  className="uniqueid-alert alert alert-info"
                                  role="alert"
                                >
                                  Do you want to add a unique ID field to create barcodes for this sample type?
                                  <Button
                                    active={false}
                                    block={false}
                                    bsClass="btn"
                                    bsStyle="info"
                                    className="pull-right alert-button"
                                    disabled={false}
                                    onClick={[Function]}
                                  >
                                    <button
                                      className="pull-right alert-button btn btn-info"
                                      disabled={false}
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      Yes, Add Unique ID Field
                                    </button>
                                  </Button>
                                </div>
                              </Alert>
                            </Alert>
                          </Memo()>
                        </div>
                      </Col>
                    </div>
                  </Row>
                </div>
              </PanelBody>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </ForwardRef>
    </BasePropertiesPanel>
  </SampleTypePropertiesPanelImpl>
</ComponentWithDomainPropertiesPanelCollapse>
`;
