// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RangeValidationOptions Range Validator - collapsed 1`] = `
<RangeValidationOptions
  dataType={
    Immutable.Record {
      "conceptURI": undefined,
      "display": "Integer",
      "name": "int",
      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
      "alternateRangeURI": "xsd:int",
      "shortDisplay": undefined,
      "lookupSchema": undefined,
      "lookupQuery": undefined,
    }
  }
  domainIndex={1}
  expanded={false}
  index={1}
  mvEnabled={true}
  onChange={[MockFunction]}
  onDelete={[MockFunction]}
  onExpand={[MockFunction]}
  validator={
    Immutable.Record {
      "type": "Range",
      "name": "Test range validator",
      "properties": Immutable.Record {
        "failOnMatch": true,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "extraProperties": Immutable.Record {
        "failOnMatch": false,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "errorMessage": "Range validation failed",
      "description": "This is a range validator",
      "new": true,
      "shouldShowWarning": true,
      "rowId": 11267,
      "expression": "~gt=0&~lt=10",
    }
  }
  validatorIndex={0}
>
  <div
    className="domain-validator-panel"
    id="domain-range-validator-0"
  >
    <div
      className="domain-validator-collapse"
    >
      Test range validator: Is Greater Than 0 and Is Less Than 10
      <div
        className="domain-validator-collapse-icon"
        onClick={[Function]}
      >
        <span
          className="fa fa-pencil"
        />
      </div>
    </div>
  </div>
</RangeValidationOptions>
`;

exports[`RangeValidationOptions Range Validator - expanded 1`] = `
<RangeValidationOptions
  dataType={
    Immutable.Record {
      "conceptURI": undefined,
      "display": "Integer",
      "name": "int",
      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
      "alternateRangeURI": "xsd:int",
      "shortDisplay": undefined,
      "lookupSchema": undefined,
      "lookupQuery": undefined,
    }
  }
  domainIndex={1}
  expanded={true}
  index={1}
  mvEnabled={true}
  onChange={[MockFunction]}
  onDelete={[MockFunction]}
  onExpand={[MockFunction]}
  validator={
    Immutable.Record {
      "type": "Range",
      "name": "Test range validator",
      "properties": Immutable.Record {
        "failOnMatch": true,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "extraProperties": Immutable.Record {
        "failOnMatch": false,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "errorMessage": "Range validation failed",
      "description": "This is a range validator",
      "new": true,
      "shouldShowWarning": true,
      "rowId": 11267,
      "expression": "~gt=0&~lt=10",
    }
  }
  validatorIndex={0}
>
  <div
    className="domain-validator-panel"
    id="domain-range-validator-0"
  >
    <div>
      <Filters
        domainIndex={1}
        expression="~gt=0&~lt=10"
        firstFilterTooltip={
          <Memo(LabelHelpTip)
            required={true}
            title="First Condition"
          >
            Add a condition to this validation rule that will be tested against the value for this field.
          </Memo(LabelHelpTip)>
        }
        firstFilterTypeLabel="First Condition *"
        firstFilterValueLabel=""
        mvEnabled={true}
        onChange={[Function]}
        range={true}
        secondFilterTooltip={
          <Memo(LabelHelpTip)
            title="Second Condition"
          >
            Add a condition to this validation rule that will be tested against the value for this field. Both the first and second conditions will be tested for this field.
          </Memo(LabelHelpTip)>
        }
        secondFilterTypeLabel="Second Condition"
        secondFilterValueLabel=""
        type="int"
        validatorIndex={0}
      >
        <Row
          bsClass="row"
          className="domain-validator-filter-type-row"
          componentClass="div"
        >
          <div
            className="domain-validator-filter-type-row row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              xs={4}
            >
              <div
                className="col-xs-4"
              >
                <div
                  id="domain-filter-type-label-1"
                >
                  First Condition *
                  <LabelHelpTip
                    required={true}
                    title="First Condition"
                  >
                    <OverlayTrigger
                      id="label-help-tip0"
                      overlay={
                        <Popover
                          id="label-help-tip-popover"
                          title="First Condition"
                        >
                          Add a condition to this validation rule that will be tested against the value for this field.
                          <div
                            className="label-help-required"
                          >
                            This field is required.
                          </div>
                        </Popover>
                      }
                    >
                      <div
                        className="overlay-trigger"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          className="label-help-target"
                        >
                          <span
                            className="label-help-icon fa fa-question-circle"
                          />
                        </span>
                      </div>
                    </OverlayTrigger>
                  </LabelHelpTip>
                </div>
              </div>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              xs={8}
            >
              <div
                className="col-xs-8"
              >
                <div>
                  <FormControl
                    bsClass="form-control"
                    componentClass="select"
                    id="domainpropertiesrow-firstFilterType-1-0"
                    name="domainpropertiesrow-firstFilterType"
                    onChange={[Function]}
                    required={true}
                    value="gt"
                  >
                    <select
                      className="form-control"
                      id="domainpropertiesrow-firstFilterType-1-0"
                      name="domainpropertiesrow-firstFilterType"
                      onChange={[Function]}
                      required={true}
                      value="gt"
                    >
                      <option
                        key="0"
                        value="eq"
                      >
                        Equals
                      </option>
                      <option
                        key="1"
                        value="neq"
                      >
                        Does Not Equal
                      </option>
                      <option
                        key="2"
                        value="gt"
                      >
                        Is Greater Than
                      </option>
                      <option
                        key="3"
                        value="gte"
                      >
                        Is Greater Than or Equal To
                      </option>
                      <option
                        key="4"
                        value="lt"
                      >
                        Is Less Than
                      </option>
                      <option
                        key="5"
                        value="lte"
                      >
                        Is Less Than or Equal To
                      </option>
                    </select>
                  </FormControl>
                </div>
              </div>
            </Col>
          </div>
        </Row>
        <Row
          bsClass="row"
          className="domain-validator-filter-row"
          componentClass="div"
        >
          <div
            className="domain-validator-filter-row row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              xs={4}
            >
              <div
                className="col-xs-4"
              >
                <div
                  id="domain-filter-value-label-1"
                />
              </div>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              xs={8}
            >
              <div
                className="col-xs-8"
              >
                <div>
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    disabled={false}
                    id="domainpropertiesrow-firstFilterValue-1-0"
                    name="domainpropertiesrow-firstFilterValue"
                    onChange={[Function]}
                    required={true}
                    type="number"
                    value="0"
                  >
                    <input
                      className="form-control"
                      disabled={false}
                      id="domainpropertiesrow-firstFilterValue-1-0"
                      name="domainpropertiesrow-firstFilterValue"
                      onChange={[Function]}
                      required={true}
                      type="number"
                      value="0"
                    />
                  </FormControl>
                </div>
              </div>
            </Col>
          </div>
        </Row>
        <Row
          bsClass="row"
          className="domain-validator-filter-type-row"
          componentClass="div"
        >
          <div
            className="domain-validator-filter-type-row row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              xs={4}
            >
              <div
                className="col-xs-4"
              >
                <div
                  id="domain-filter-type-label-2"
                >
                  Second Condition
                  <LabelHelpTip
                    title="Second Condition"
                  >
                    <OverlayTrigger
                      id="label-help-tip1"
                      overlay={
                        <Popover
                          id="label-help-tip-popover"
                          title="Second Condition"
                        >
                          Add a condition to this validation rule that will be tested against the value for this field. Both the first and second conditions will be tested for this field.
                        </Popover>
                      }
                    >
                      <div
                        className="overlay-trigger"
                        onClick={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                      >
                        <span
                          className="label-help-target"
                        >
                          <span
                            className="label-help-icon fa fa-question-circle"
                          />
                        </span>
                      </div>
                    </OverlayTrigger>
                  </LabelHelpTip>
                </div>
              </div>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              xs={8}
            >
              <div
                className="col-xs-8"
              >
                <div>
                  <FormControl
                    bsClass="form-control"
                    componentClass="select"
                    id="domainpropertiesrow-secondFilterType-1-0"
                    name="domainpropertiesrow-secondFilterType"
                    onChange={[Function]}
                    value="lt"
                  >
                    <select
                      className="form-control"
                      id="domainpropertiesrow-secondFilterType-1-0"
                      name="domainpropertiesrow-secondFilterType"
                      onChange={[Function]}
                      value="lt"
                    >
                      <option
                        key="0"
                        value="None"
                      >
                        No other filter
                      </option>
                      <option
                        key="1"
                        value="eq"
                      >
                        Equals
                      </option>
                      <option
                        key="2"
                        value="neq"
                      >
                        Does Not Equal
                      </option>
                      <option
                        key="3"
                        value="gt"
                      >
                        Is Greater Than
                      </option>
                      <option
                        key="4"
                        value="gte"
                      >
                        Is Greater Than or Equal To
                      </option>
                      <option
                        key="5"
                        value="lt"
                      >
                        Is Less Than
                      </option>
                      <option
                        key="6"
                        value="lte"
                      >
                        Is Less Than or Equal To
                      </option>
                    </select>
                  </FormControl>
                </div>
              </div>
            </Col>
          </div>
        </Row>
        <Row
          bsClass="row"
          className="domain-validator-filter-bottom"
          componentClass="div"
        >
          <div
            className="domain-validator-filter-bottom row"
          >
            <Col
              bsClass="col"
              componentClass="div"
              xs={4}
            >
              <div
                className="col-xs-4"
              >
                <div
                  id="domain-filter-value-label-2"
                />
              </div>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              xs={8}
            >
              <div
                className="col-xs-8"
              >
                <div>
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    disabled={false}
                    id="domainpropertiesrow-secondFilterValue-1-0"
                    name="domainpropertiesrow-secondFilterValue"
                    onChange={[Function]}
                    type="number"
                    value="10"
                  >
                    <input
                      className="form-control"
                      disabled={false}
                      id="domainpropertiesrow-secondFilterValue-1-0"
                      name="domainpropertiesrow-secondFilterValue"
                      onChange={[Function]}
                      type="number"
                      value="10"
                    />
                  </FormControl>
                </div>
              </div>
            </Col>
          </div>
        </Row>
      </Filters>
      <Row
        bsClass="row"
        className="domain-validator-filter-row"
        componentClass="div"
      >
        <div
          className="domain-validator-filter-row row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            xs={4}
          >
            <div
              className="col-xs-4"
            >
              <div>
                Description
              </div>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            xs={8}
          >
            <div
              className="col-xs-8"
            >
              <div>
                <FormControl
                  bsClass="form-control"
                  className="textarea-fullwidth"
                  componentClass="textarea"
                  id="domainpropertiesrow-description-1-0"
                  name="domainpropertiesrow-description"
                  onChange={[Function]}
                  rows={3}
                  value="This is a range validator"
                >
                  <textarea
                    className="textarea-fullwidth form-control"
                    id="domainpropertiesrow-description-1-0"
                    name="domainpropertiesrow-description"
                    onChange={[Function]}
                    rows={3}
                    value="This is a range validator"
                  />
                </FormControl>
              </div>
            </div>
          </Col>
        </div>
      </Row>
      <Row
        bsClass="row"
        className="domain-validator-filter-row"
        componentClass="div"
      >
        <div
          className="domain-validator-filter-row row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            xs={4}
          >
            <div
              className="col-xs-4"
            >
              <div>
                Error Message
              </div>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            xs={8}
          >
            <div
              className="col-xs-8"
            >
              <div>
                <FormControl
                  bsClass="form-control"
                  className="textarea-fullwidth"
                  componentClass="textarea"
                  id="domainpropertiesrow-errorMessage-1-0"
                  name="domainpropertiesrow-errorMessage"
                  onChange={[Function]}
                  rows={3}
                  value="Range validation failed"
                >
                  <textarea
                    className="textarea-fullwidth form-control"
                    id="domainpropertiesrow-errorMessage-1-0"
                    name="domainpropertiesrow-errorMessage"
                    onChange={[Function]}
                    rows={3}
                    value="Range validation failed"
                  />
                </FormControl>
              </div>
            </div>
          </Col>
        </div>
      </Row>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <div
          className="row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            xs={4}
          >
            <div
              className="col-xs-4"
            >
              <div>
                Name *
              </div>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            xs={8}
          >
            <div
              className="col-xs-8"
            >
              <FormControl
                bsClass="form-control"
                componentClass="input"
                id="domainpropertiesrow-name-1-0"
                name="domainpropertiesrow-name"
                onChange={[Function]}
                type="text"
                value="Test range validator"
              >
                <input
                  className="form-control"
                  id="domainpropertiesrow-name-1-0"
                  name="domainpropertiesrow-name"
                  onChange={[Function]}
                  type="text"
                  value="Test range validator"
                />
              </FormControl>
            </div>
          </Col>
        </div>
      </Row>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <div
          className="row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            xs={12}
          >
            <div
              className="col-xs-12"
            >
              <button
                className="domain-validation-delete btn btn-default"
                id="domainpropertiesrow-removeValidator-1-0"
                name="domainpropertiesrow-removeValidator"
                onClick={[Function]}
                type="button"
              >
                Remove Validator
              </button>
            </div>
          </Col>
        </div>
      </Row>
    </div>
  </div>
</RangeValidationOptions>
`;
