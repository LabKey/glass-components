// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegexValidationOptions Regex Validator - collapsed 1`] = `
<RegexValidationOptions
  dataType={
    Immutable.Record {
      "conceptURI": undefined,
      "display": "Integer",
      "name": "int",
      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
      "alternateRangeURI": "xsd:int",
      "shortDisplay": undefined,
      "lookupSchema": undefined,
      "lookupQuery": undefined,
    }
  }
  domainIndex={1}
  expanded={false}
  index={1}
  mvEnabled={true}
  onChange={[MockFunction]}
  onDelete={[MockFunction]}
  onExpand={[MockFunction]}
  validator={
    Immutable.Record {
      "type": "RegEx",
      "name": "Test Validator",
      "properties": Immutable.Record {
        "failOnMatch": true,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "extraProperties": Immutable.Record {
        "failOnMatch": false,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "errorMessage": "Test Validation Failure",
      "description": "This is my validator description",
      "new": true,
      "shouldShowWarning": true,
      "rowId": 11266,
      "expression": "$[abc]",
    }
  }
  validatorIndex={0}
>
  <div
    className="domain-validator-panel"
    id="domain-regex-validator-0"
  >
    <div>
      <div>
        Test Validator: $[abc]
        <div
          className="domain-validator-collapse-icon"
          onClick={[Function]}
        >
          <FontAwesomeIcon
            beat={false}
            beatFade={false}
            border={false}
            bounce={false}
            className=""
            fade={false}
            fixedWidth={false}
            flip={false}
            icon={
              Object {
                "icon": Array [
                  512,
                  512,
                  Array [],
                  "f303",
                  "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z",
                ],
                "iconName": "pencil-alt",
                "prefix": "fas",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            maskId={null}
            pull={null}
            pulse={false}
            rotation={null}
            shake={false}
            size={null}
            spin={false}
            spinPulse={false}
            spinReverse={false}
            swapOpacity={false}
            symbol={false}
            title=""
            titleId={null}
            transform={null}
          >
            <svg
              aria-hidden="true"
              className="svg-inline--fa fa-pencil-alt fa-w-16 "
              data-icon="pencil-alt"
              data-prefix="fas"
              focusable="false"
              role="img"
              style={Object {}}
              viewBox="0 0 512 512"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z"
                fill="currentColor"
                style={Object {}}
              />
            </svg>
          </FontAwesomeIcon>
        </div>
      </div>
    </div>
  </div>
</RegexValidationOptions>
`;

exports[`RegexValidationOptions Regex Validator - expanded 1`] = `
<RegexValidationOptions
  dataType={
    Immutable.Record {
      "conceptURI": undefined,
      "display": "Integer",
      "name": "int",
      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
      "alternateRangeURI": "xsd:int",
      "shortDisplay": undefined,
      "lookupSchema": undefined,
      "lookupQuery": undefined,
    }
  }
  domainIndex={1}
  expanded={true}
  index={1}
  mvEnabled={true}
  onChange={[MockFunction]}
  onDelete={[MockFunction]}
  onExpand={[MockFunction]}
  validator={
    Immutable.Record {
      "type": "RegEx",
      "name": "Test Validator",
      "properties": Immutable.Record {
        "failOnMatch": true,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "extraProperties": Immutable.Record {
        "failOnMatch": false,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "errorMessage": "Test Validation Failure",
      "description": "This is my validator description",
      "new": true,
      "shouldShowWarning": true,
      "rowId": 11266,
      "expression": "$[abc]",
    }
  }
  validatorIndex={0}
>
  <div
    className="domain-validator-panel"
    id="domain-regex-validator-0"
  >
    <div>
      <Row
        bsClass="row"
        className="domain-validator-filter-row"
        componentClass="div"
      >
        <div
          className="domain-validator-filter-row row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            xs={4}
          >
            <div
              className="col-xs-4"
            >
              <div>
                Regular Expression *
                <Component
                  customStyle={Object {}}
                  id="tooltip"
                  required={true}
                  size="1x"
                  title="Regular Expression"
                >
                  <span
                    className="label-help-target"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <FontAwesomeIcon
                      beat={false}
                      beatFade={false}
                      border={false}
                      bounce={false}
                      className="label-help-icon"
                      fade={false}
                      fixedWidth={false}
                      flip={false}
                      icon={
                        Object {
                          "icon": Array [
                            512,
                            512,
                            Array [],
                            "f059",
                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                          ],
                          "iconName": "question-circle",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      maskId={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      shake={false}
                      size="1x"
                      spin={false}
                      spinPulse={false}
                      spinReverse={false}
                      style={Object {}}
                      swapOpacity={false}
                      symbol={false}
                      title=""
                      titleId={null}
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                        data-icon="question-circle"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 512 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                    <Overlay
                      animation={[Function]}
                      placement="right"
                      rootClose={false}
                      show={false}
                    >
                      <Overlay
                        placement="right"
                        rootClose={false}
                        show={false}
                        transition={[Function]}
                      />
                    </Overlay>
                  </span>
                </Component>
              </div>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            xs={8}
          >
            <div
              className="col-xs-8"
            >
              <div>
                <FormControl
                  bsClass="form-control"
                  className="domain-validation-textarea"
                  componentClass="textarea"
                  id="domainpropertiesrow-expression-1-0"
                  name="domainpropertiesrow-expression"
                  onChange={[Function]}
                  rows={3}
                  value="$[abc]"
                >
                  <textarea
                    className="domain-validation-textarea form-control"
                    id="domainpropertiesrow-expression-1-0"
                    name="domainpropertiesrow-expression"
                    onChange={[Function]}
                    rows={3}
                    value="$[abc]"
                  />
                </FormControl>
              </div>
            </div>
          </Col>
        </div>
      </Row>
      <Row
        bsClass="row"
        className="domain-validator-filter-row"
        componentClass="div"
      >
        <div
          className="domain-validator-filter-row row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            xs={4}
          >
            <div
              className="col-xs-4"
            >
              <div>
                Description
              </div>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            xs={8}
          >
            <div
              className="col-xs-8"
            >
              <div>
                <FormControl
                  bsClass="form-control"
                  className="domain-validation-textarea"
                  componentClass="textarea"
                  id="domainpropertiesrow-description-1-0"
                  name="domainpropertiesrow-description"
                  onChange={[Function]}
                  rows={3}
                  value="This is my validator description"
                >
                  <textarea
                    className="domain-validation-textarea form-control"
                    id="domainpropertiesrow-description-1-0"
                    name="domainpropertiesrow-description"
                    onChange={[Function]}
                    rows={3}
                    value="This is my validator description"
                  />
                </FormControl>
              </div>
            </div>
          </Col>
        </div>
      </Row>
      <Row
        bsClass="row"
        className="domain-validator-filter-row"
        componentClass="div"
      >
        <div
          className="domain-validator-filter-row row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            xs={4}
          >
            <div
              className="col-xs-4"
            >
              <div>
                Error Message
                <Component
                  customStyle={Object {}}
                  id="tooltip"
                  size="1x"
                  title="Error Message"
                >
                  <span
                    className="label-help-target"
                    onMouseOut={[Function]}
                    onMouseOver={[Function]}
                  >
                    <FontAwesomeIcon
                      beat={false}
                      beatFade={false}
                      border={false}
                      bounce={false}
                      className="label-help-icon"
                      fade={false}
                      fixedWidth={false}
                      flip={false}
                      icon={
                        Object {
                          "icon": Array [
                            512,
                            512,
                            Array [],
                            "f059",
                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                          ],
                          "iconName": "question-circle",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      maskId={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      shake={false}
                      size="1x"
                      spin={false}
                      spinPulse={false}
                      spinReverse={false}
                      style={Object {}}
                      swapOpacity={false}
                      symbol={false}
                      title=""
                      titleId={null}
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                        data-icon="question-circle"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 512 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                    <Overlay
                      animation={[Function]}
                      placement="right"
                      rootClose={false}
                      show={false}
                    >
                      <Overlay
                        placement="right"
                        rootClose={false}
                        show={false}
                        transition={[Function]}
                      />
                    </Overlay>
                  </span>
                </Component>
              </div>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            xs={8}
          >
            <div
              className="col-xs-8"
            >
              <div>
                <FormControl
                  bsClass="form-control"
                  className="domain-validation-textarea"
                  componentClass="textarea"
                  id="domainpropertiesrow-errorMessage-1-0"
                  name="domainpropertiesrow-errorMessage"
                  onChange={[Function]}
                  rows={3}
                  value="Test Validation Failure"
                >
                  <textarea
                    className="domain-validation-textarea form-control"
                    id="domainpropertiesrow-errorMessage-1-0"
                    name="domainpropertiesrow-errorMessage"
                    onChange={[Function]}
                    rows={3}
                    value="Test Validation Failure"
                  />
                </FormControl>
              </div>
            </div>
          </Col>
        </div>
      </Row>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <div
          className="row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            xs={4}
          >
            <div
              className="col-xs-4"
            />
          </Col>
          <Col
            bsClass="col"
            className="domain-validation-failOnMatch-row"
            componentClass="div"
            xs={8}
          >
            <div
              className="domain-validation-failOnMatch-row col-xs-8"
            >
              <Checkbox
                bsClass="checkbox"
                checked={true}
                disabled={false}
                id="domainpropertiesrow-failOnMatch-1-0"
                inline={false}
                name="domainpropertiesrow-failOnMatch"
                onChange={[Function]}
                title=""
              >
                <div
                  className="checkbox"
                >
                  <label
                    title=""
                  >
                    <input
                      checked={true}
                      disabled={false}
                      id="domainpropertiesrow-failOnMatch-1-0"
                      name="domainpropertiesrow-failOnMatch"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    Fail validation when pattern matches field value
                    <Component
                      customStyle={Object {}}
                      id="tooltip"
                      size="1x"
                      title="Fail when pattern matches?"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          beat={false}
                          beatFade={false}
                          border={false}
                          bounce={false}
                          className="label-help-icon"
                          fade={false}
                          fixedWidth={false}
                          flip={false}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          maskId={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          shake={false}
                          size="1x"
                          spin={false}
                          spinPulse={false}
                          spinReverse={false}
                          style={Object {}}
                          swapOpacity={false}
                          symbol={false}
                          title=""
                          titleId={null}
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 fa-1x label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="right"
                          rootClose={false}
                          show={false}
                        >
                          <Overlay
                            placement="right"
                            rootClose={false}
                            show={false}
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </Component>
                  </label>
                </div>
              </Checkbox>
            </div>
          </Col>
        </div>
      </Row>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <div
          className="row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            xs={4}
          >
            <div
              className="col-xs-4"
            >
              <div>
                Name *
              </div>
            </div>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            xs={8}
          >
            <div
              className="col-xs-8"
            >
              <FormControl
                bsClass="form-control"
                componentClass="input"
                id="domainpropertiesrow-name-1-0"
                name="domainpropertiesrow-name"
                onChange={[Function]}
                type="text"
                value="Test Validator"
              >
                <input
                  className="form-control"
                  id="domainpropertiesrow-name-1-0"
                  name="domainpropertiesrow-name"
                  onChange={[Function]}
                  type="text"
                  value="Test Validator"
                />
              </FormControl>
            </div>
          </Col>
        </div>
      </Row>
      <Row
        bsClass="row"
        componentClass="div"
      >
        <div
          className="row"
        >
          <Col
            bsClass="col"
            componentClass="div"
            xs={12}
          >
            <div
              className="col-xs-12"
            >
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsStyle="default"
                className="domain-validation-delete"
                disabled={false}
                id="domainpropertiesrow-removeValidator-1-0"
                name="domainpropertiesrow-removeValidator"
                onClick={[Function]}
              >
                <button
                  className="domain-validation-delete btn btn-default"
                  disabled={false}
                  id="domainpropertiesrow-removeValidator-1-0"
                  name="domainpropertiesrow-removeValidator"
                  onClick={[Function]}
                  type="button"
                >
                  Remove Validator
                </button>
              </Button>
            </div>
          </Col>
        </div>
      </Row>
    </div>
  </div>
</RegexValidationOptions>
`;
