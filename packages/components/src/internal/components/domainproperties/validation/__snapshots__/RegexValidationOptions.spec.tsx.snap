// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegexValidationOptions Regex Validator - collapsed 1`] = `
<RegexValidationOptions
  dataType={
    Immutable.Record {
      "conceptURI": undefined,
      "display": "Integer",
      "name": "int",
      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
      "alternateRangeURI": "xsd:int",
      "shortDisplay": undefined,
      "lookupSchema": undefined,
      "lookupQuery": undefined,
    }
  }
  domainIndex={1}
  expanded={false}
  index={1}
  mvEnabled={true}
  onChange={[MockFunction]}
  onDelete={[MockFunction]}
  onExpand={[MockFunction]}
  validator={
    Immutable.Record {
      "type": "RegEx",
      "name": "Test Validator",
      "properties": Immutable.Record {
        "failOnMatch": true,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "extraProperties": Immutable.Record {
        "failOnMatch": false,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "errorMessage": "Test Validation Failure",
      "description": "This is my validator description",
      "new": true,
      "shouldShowWarning": true,
      "rowId": 11266,
      "expression": "$[abc]",
    }
  }
  validatorIndex={0}
>
  <div
    className="domain-validator-panel"
    id="domain-regex-validator-0"
  >
    <div>
      <div>
        Test Validator: $[abc]
        <div
          className="domain-validator-collapse-icon"
          onClick={[Function]}
        >
          <span
            className="fa fa-pencil"
          />
        </div>
      </div>
    </div>
  </div>
</RegexValidationOptions>
`;

exports[`RegexValidationOptions Regex Validator - expanded 1`] = `
<RegexValidationOptions
  dataType={
    Immutable.Record {
      "conceptURI": undefined,
      "display": "Integer",
      "name": "int",
      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
      "alternateRangeURI": "xsd:int",
      "shortDisplay": undefined,
      "lookupSchema": undefined,
      "lookupQuery": undefined,
    }
  }
  domainIndex={1}
  expanded={true}
  index={1}
  mvEnabled={true}
  onChange={[MockFunction]}
  onDelete={[MockFunction]}
  onExpand={[MockFunction]}
  validator={
    Immutable.Record {
      "type": "RegEx",
      "name": "Test Validator",
      "properties": Immutable.Record {
        "failOnMatch": true,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "extraProperties": Immutable.Record {
        "failOnMatch": false,
        "validValues": undefined,
        "valueUpdates": undefined,
      },
      "errorMessage": "Test Validation Failure",
      "description": "This is my validator description",
      "new": true,
      "shouldShowWarning": true,
      "rowId": 11266,
      "expression": "$[abc]",
    }
  }
  validatorIndex={0}
>
  <div
    className="domain-validator-panel"
    id="domain-regex-validator-0"
  >
    <div>
      <div
        className="row domain-validator-filter-row"
      >
        <div
          className="col-xs-4"
        >
          <div>
            Regular Expression *
            <LabelHelpTip
              required={true}
              title="Regular Expression"
            >
              <OverlayTrigger
                id="label-help-tip0"
                overlay={
                  <Popover
                    id="label-help-tip-popover"
                    title="Regular Expression"
                  >
                    <p>
                      The regular expression that this field's value will be evaluated against. All regular expressions must be compatible with Java regular expressions as implemented in the
                       
                      <Memo
                        urlSuffix="java/util/regex/Pattern.html"
                      >
                        Pattern
                      </Memo>
                       class.
                    </p>
                    <div
                      className="label-help-required"
                    >
                      This field is required.
                    </div>
                  </Popover>
                }
              >
                <div
                  className="overlay-trigger"
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                >
                  <span
                    className="label-help-target"
                  >
                    <span
                      className="label-help-icon fa fa-question-circle"
                    />
                  </span>
                </div>
              </OverlayTrigger>
            </LabelHelpTip>
          </div>
        </div>
        <div
          className="col-xs-8"
        >
          <div>
            <textarea
              className="form-control textarea-fullwidth"
              id="domainpropertiesrow-expression-1-0"
              name="domainpropertiesrow-expression"
              onChange={[Function]}
              rows={3}
              value="$[abc]"
            />
          </div>
        </div>
      </div>
      <div
        className="row domain-validator-filter-row"
      >
        <div
          className="col-xs-4"
        >
          <div>
            Description
          </div>
        </div>
        <div
          className="col-xs-8"
        >
          <div>
            <textarea
              className="form-control textarea-fullwidth"
              id="domainpropertiesrow-description-1-0"
              name="domainpropertiesrow-description"
              onChange={[Function]}
              rows={3}
              value="This is my validator description"
            />
          </div>
        </div>
      </div>
      <div
        className="row domain-validator-filter-row"
      >
        <div
          className="col-xs-4"
        >
          <div>
            Error Message
            <LabelHelpTip
              title="Error Message"
            >
              <OverlayTrigger
                id="label-help-tip1"
                overlay={
                  <Popover
                    id="label-help-tip-popover"
                    title="Error Message"
                  >
                    The message that will be displayed to the user in the event that validation fails for this field.
                  </Popover>
                }
              >
                <div
                  className="overlay-trigger"
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                >
                  <span
                    className="label-help-target"
                  >
                    <span
                      className="label-help-icon fa fa-question-circle"
                    />
                  </span>
                </div>
              </OverlayTrigger>
            </LabelHelpTip>
          </div>
        </div>
        <div
          className="col-xs-8"
        >
          <div>
            <textarea
              className="form-control textarea-fullwidth"
              id="domainpropertiesrow-errorMessage-1-0"
              name="domainpropertiesrow-errorMessage"
              onChange={[Function]}
              rows={3}
              value="Test Validation Failure"
            />
          </div>
        </div>
      </div>
      <div
        className="row"
      >
        <div
          className="col-xs-4"
        />
        <div
          className="col-xs-8 domain-validation-failOnMatch-row"
        >
          <Memo()
            checked={true}
            id="domainpropertiesrow-failOnMatch-1-0"
            name="domainpropertiesrow-failOnMatch"
            onChange={[Function]}
          >
            <div
              className="checkbox"
            >
              <label>
                <input
                  checked={true}
                  id="domainpropertiesrow-failOnMatch-1-0"
                  name="domainpropertiesrow-failOnMatch"
                  onChange={[Function]}
                  type="checkbox"
                />
                Fail validation when pattern matches field value
                <LabelHelpTip
                  title="Fail when pattern matches?"
                >
                  <OverlayTrigger
                    id="label-help-tip2"
                    overlay={
                      <Popover
                        id="label-help-tip-popover"
                        title="Fail when pattern matches?"
                      >
                        By default, validation will fail if the field value does not match the specified regular expression. Check this box if you want validation to fail when the pattern matches the field value.
                      </Popover>
                    }
                  >
                    <div
                      className="overlay-trigger"
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                    >
                      <span
                        className="label-help-target"
                      >
                        <span
                          className="label-help-icon fa fa-question-circle"
                        />
                      </span>
                    </div>
                  </OverlayTrigger>
                </LabelHelpTip>
              </label>
            </div>
          </Memo()>
        </div>
      </div>
      <div
        className="row"
      >
        <div
          className="col-xs-4"
        >
          <div>
            Name *
          </div>
        </div>
        <div
          className="col-xs-8"
        >
          <input
            className="form-control"
            id="domainpropertiesrow-name-1-0"
            name="domainpropertiesrow-name"
            onChange={[Function]}
            type="text"
            value="Test Validator"
          />
        </div>
      </div>
      <div
        className="row"
      >
        <div
          className="col-xs-12"
        >
          <button
            className="domain-validation-delete btn btn-default"
            id="domainpropertiesrow-removeValidator-1-0"
            name="domainpropertiesrow-removeValidator"
            onClick={[Function]}
            type="button"
          >
            Remove Validator
          </button>
        </div>
      </div>
    </div>
  </div>
</RegexValidationOptions>
`;
