// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReportItemModal /> ReportItemModal renders 1`] = `
"<ReportItemModal report={{...}} onClose={[Function: noop]}>
  <div className=\\"report-item-modal\\">
    <Modal show={true} onHide={[Function: noop]} backdrop={true} keyboard={true} autoFocus={true} enforceFocus={true} restoreFocus={true} manager={{...}} renderBackdrop={[Function: renderBackdrop]} animation={true} dialogComponentClass={[Function: ModalDialog] { propTypes: { dialogClassName: [Function: bound checkType] { isRequired: [Function: bound checkType] }, bsSize: [Function: bound checkType] { isRequired: [Function: bound checkType], _values: [ 'lg', 'large', 'sm', 'small' ] }, bsClass: [Function: bound checkType] { isRequired: [Function: bound checkType] } }, SIZES: [ 'large', 'small' ], defaultProps: { bsClass: 'modal' } }} bsClass=\\"modal\\">
      <Modal onHide={[Function: noop]} keyboard={true} autoFocus={true} enforceFocus={true} restoreFocus={true} manager={{...}} renderBackdrop={[Function: renderBackdrop]} show={true} containerClassName=\\"modal-open\\" transition={[Function: DialogTransition]} backdrop={true} backdropTransition={[Function: BackdropTransition]} backdropClassName=\\"modal-backdrop\\" onEntering={[Function: bound handleEntering]} onExited={[Function: bound handleExited]} onMouseUp={[Function (anonymous)]}>
        <Portal container={[undefined]} onRendered={[Function (anonymous)]}>
          <Portal containerInfo={{...}}>
            <div role=\\"dialog\\" onMouseUp={[Function (anonymous)]} style={[undefined]} className={[undefined]}>
              <BackdropTransition appear={true} in={true}>
                <Fade appear={true} in={true} timeout={150} mountOnEnter={false} unmountOnExit={false}>
                  <Transition appear={true} in={true} timeout={150} mountOnEnter={false} unmountOnExit={false} enter={true} exit={true} onEnter={[Function: noop]} onEntering={[Function: noop]} onEntered={[Function: noop]} onExit={[Function: noop]} onExiting={[Function: noop]} onExited={[Function: noop]}>
                    <div style={[undefined]} className=\\"fade modal-backdrop in\\" onClick={[Function (anonymous)]} />
                  </Transition>
                </Fade>
              </BackdropTransition>
              <RefHolder>
                <DialogTransition appear={true} unmountOnExit={true} in={true} onExit={[undefined]} onExiting={[undefined]} onExited={[Function (anonymous)]} onEnter={[undefined]} onEntering={[Function: bound handleEntering]} onEntered={[undefined]}>
                  <Fade appear={true} unmountOnExit={true} in={true} onExit={[undefined]} onExiting={[undefined]} onExited={[Function (anonymous)]} onEnter={[undefined]} onEntering={[Function: bound handleEntering]} onEntered={[undefined]} timeout={300} mountOnEnter={false}>
                    <Transition appear={true} unmountOnExit={true} in={true} onExit={[Function: noop]} onExiting={[Function: noop]} onExited={[Function (anonymous)]} onEnter={[Function: noop]} onEntering={[Function: bound handleEntering]} onEntered={[Function: noop]} timeout={300} mountOnEnter={false} enter={true} exit={true}>
                      <ModalDialog bsClass=\\"modal\\" style={{...}} className=\\"fade in\\" onClick={[Function: bound handleDialogClick]} onMouseDownDialog={[Function (anonymous)]} role=\\"document\\" tabIndex=\\"-1\\">
                        <div onClick={[Function: bound handleDialogClick]} role=\\"dialog\\" tabIndex=\\"-1\\" style={{...}} className=\\"fade in modal\\">
                          <div className=\\"modal-dialog\\" onMouseDown={[Function (anonymous)]}>
                            <div className=\\"modal-content\\" role=\\"document\\">
                              <ModalHeader closeButton={true} closeLabel=\\"Close\\" bsClass=\\"modal-header\\">
                                <div className=\\"modal-header\\">
                                  <CloseButton label=\\"Close\\" onClick={[Function: noop]}>
                                    <button type=\\"button\\" className=\\"close\\" onClick={[Function: noop]}>
                                      <span aria-hidden=\\"true\\">
                                        Ã—
                                      </span>
                                      <span className=\\"sr-only\\">
                                        Close
                                      </span>
                                    </button>
                                  </CloseButton>
                                  <ModalTitle componentClass=\\"h4\\" bsClass=\\"modal-title\\">
                                    <h4 className=\\"modal-title\\">
                                      Example SCR
                                    </h4>
                                  </ModalTitle>
                                </div>
                              </ModalHeader>
                              <ModalBody componentClass=\\"div\\" bsClass=\\"modal-body\\">
                                <div className=\\"modal-body\\">
                                  <SampleComparisonReportBody report={{...}}>
                                    <div className=\\"report-list__scr-preview\\">
                                      <div className=\\"report-item__links\\">
                                        <p>
                                          <a href=\\"/labkey/Biologics/assayreport-view.view?id=37\\">
                                            View in LabKey Server
                                          </a>
                                        </p>
                                        <p>
                                          <a href=\\"/labkey/assayreport/edit.view?id=37\\">
                                            Edit in LabKey Server
                                          </a>
                                        </p>
                                        <p>
                                          <Link to=\\"/reports/37\\" onlyActiveOnIndex={false} style={{...}}>
                                            <a style={{...}} onClick={[Function: bound handleClick] { __reactBoundContext: { '@@contextSubscriber/router/handleContextUpdate': [Function: bound ] { __reactBoundContext: [Circular], __reactBoundMethod: [Function (anonymous)], __reactBoundArguments: null, bind: [Function (anonymous)] }, handleClick: [Circular], props: { to: '/reports/37', children: 'View in Biologics', onlyActiveOnIndex: false, style: {} }, context: { '@@contextSubscriber/router': undefined, router: undefined }, refs: {}, updater: { isMounted: [Function: isMounted], enqueueSetState: [Function: enqueueSetState], enqueueReplaceState: [Function: enqueueReplaceState], enqueueForceUpdate: [Function: enqueueForceUpdate] }, state: {}, _reactInternalFiber: { tag: 1, key: null, elementType: [Function (anonymous)] { contextTypes: { '@@contextSubscriber/router': [Function: bound checkType] { isRequired: [Function: bound checkType] }, router: [Function: bound checkType] { isRequired: [Function: bound checkType] } }, displayName: 'Link', propTypes: { to: [Function: bound checkType] { isRequired: [Function: bound checkType] }, activeStyle: [Function: bound checkType] { isRequired: [Function: bound checkType] }, activeClassName: [Function: bound checkType] { isRequired: [Function: bound checkType] }, onlyActiveOnIndex: [Function: bound checkType], onClick: [Function: bound checkType] { isRequired: [Function: bound checkType] }, target: [Function: bound checkType] { isRequired: [Function: bound checkType] }, innerRef: [Function: bound checkType] { isRequired: [Function: bound checkType] } }, getDefaultProps: [Function: getDefaultProps] { isReactClassApproved: [Object] }, defaultProps: { onlyActiveOnIndex: false, style: [Object] } }, type: [Function (anonymous)] { contextTypes: { '@@contextSubscriber/router': [Function: bound checkType] { isRequired: [Function: bound checkType] }, router: [Function: bound checkType] { isRequired: [Function: bound checkType] } }, displayName: 'Link', propTypes: { to: [Function: bound checkType] { isRequired: [Function: bound checkType] }, activeStyle: [Function: bound checkType] { isRequired: [Function: bound checkType] }, activeClassName: [Function: bound checkType] { isRequired: [Function: bound checkType] }, onlyActiveOnIndex: [Function: bound checkType], onClick: [Function: bound checkType] { isRequired: [Function: bound checkType] }, target: [Function: bound checkType] { isRequired: [Function: bound checkType] }, innerRef: [Function: bound checkType] { isRequired: [Function: bound checkType] } }, getDefaultProps: [Function: getDefaultProps] { isReactClassApproved: [Object] }, defaultProps: { onlyActiveOnIndex: false, style: [Object] } }, stateNode: [Circular], return: { tag: 5, key: null, elementType: 'p', type: 'p', stateNode: <p>...</p>, return: { tag: 5, key: null, elementType: 'div', type: 'div', stateNode: [Object], return: [Object], child: [Object], sibling: [Object], index: 0, ref: null, pendingProps: [Object], memoizedProps: [Object], updateQueue: null, memoizedState: null, dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: [Object], lastEffect: [Object], expirationTime: 0, childExpirationTime: 0, alternate: [Object], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 192, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Object], _debugNeedsRemount: false, _debugHookTypes: null }, child: [Circular], sibling: null, index: 2, ref: null, pendingProps: { children: [Object] }, memoizedProps: { children: [Object] }, updateQueue: null, memoizedState: null, dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: [Circular], lastEffect: [Circular], expirationTime: 0, childExpirationTime: 0, alternate: { tag: 5, key: null, elementType: 'p', type: 'p', stateNode: [Object], return: [Object], child: [Object], sibling: null, index: 2, ref: null, pendingProps: [Object], memoizedProps: [Object], updateQueue: null, memoizedState: null, dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: [Object], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 198, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Object], _debugNeedsRemount: false, _debugHookTypes: null }, actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 198, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: { tag: 1, key: null, elementType: [Function: SampleComparisonReportBody], type: [Function: SampleComparisonReportBody], stateNode: [Object], return: [Object], child: [Object], sibling: null, index: 0, ref: null, pendingProps: [Object], memoizedProps: [Object], updateQueue: [Object], memoizedState: [Object], dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: [Object], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 188, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Object], _debugNeedsRemount: false, _debugHookTypes: null }, _debugNeedsRemount: false, _debugHookTypes: null }, child: { tag: 5, key: null, elementType: 'a', type: 'a', stateNode: <a>...</a>, return: [Circular], child: null, sibling: null, index: 0, ref: null, pendingProps: { children: 'View in Biologics', style: [Object], onClick: [Circular] }, memoizedProps: { children: 'View in Biologics', style: [Object], onClick: [Circular] }, updateQueue: null, memoizedState: null, dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: { tag: 5, key: null, elementType: 'a', type: 'a', stateNode: [Object], return: [Object], child: null, sibling: null, index: 0, ref: null, pendingProps: [Object], memoizedProps: [Object], updateQueue: null, memoizedState: null, dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: [Object], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 208, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Object], _debugNeedsRemount: false, _debugHookTypes: null }, actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 208, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Circular], _debugNeedsRemount: false, _debugHookTypes: null }, sibling: null, index: 0, ref: null, pendingProps: { to: '/reports/37', children: 'View in Biologics', onlyActiveOnIndex: false, style: {} }, memoizedProps: { to: '/reports/37', children: 'View in Biologics', onlyActiveOnIndex: false, style: {} }, updateQueue: { baseState: {}, baseQueue: null, shared: { pending: null }, effects: null }, memoizedState: {}, dependencies: null, mode: 0, effectTag: 5, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: { tag: 1, key: null, elementType: [Function (anonymous)] { contextTypes: [Object], displayName: 'Link', propTypes: [Object], getDefaultProps: [Function: getDefaultProps] { isReactClassApproved: [Object] }, defaultProps: [Object] }, type: [Function (anonymous)] { contextTypes: [Object], displayName: 'Link', propTypes: [Object], getDefaultProps: [Function: getDefaultProps] { isReactClassApproved: [Object] }, defaultProps: [Object] }, stateNode: [Circular], return: { tag: 5, key: null, elementType: 'p', type: 'p', stateNode: [Object], return: [Object], child: [Object], sibling: null, index: 2, ref: null, pendingProps: [Object], memoizedProps: [Object], updateQueue: null, memoizedState: null, dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: [Object], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 198, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Object], _debugNeedsRemount: false, _debugHookTypes: null }, child: { tag: 5, key: null, elementType: 'a', type: 'a', stateNode: [Object], return: [Object], child: null, sibling: null, index: 0, ref: null, pendingProps: [Object], memoizedProps: [Object], updateQueue: null, memoizedState: null, dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: [Object], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 208, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Object], _debugNeedsRemount: false, _debugHookTypes: null }, sibling: null, index: 0, ref: null, pendingProps: { to: '/reports/37', children: 'View in Biologics', onlyActiveOnIndex: false, style: [Object] }, memoizedProps: { to: '/reports/37', children: 'View in Biologics', onlyActiveOnIndex: false, style: [Object] }, updateQueue: { baseState: [Object], baseQueue: null, shared: [Object], effects: null }, memoizedState: {}, dependencies: null, mode: 0, effectTag: 1, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: [Circular], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 206, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: { tag: 1, key: null, elementType: [Function: SampleComparisonReportBody], type: [Function: SampleComparisonReportBody], stateNode: [Object], return: [Object], child: [Object], sibling: null, index: 0, ref: null, pendingProps: [Object], memoizedProps: [Object], updateQueue: [Object], memoizedState: [Object], dependencies: null, mode: 0, effectTag: 1, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: [Object], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 188, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Object], _debugNeedsRemount: false, _debugHookTypes: null }, _debugNeedsRemount: false, _debugHookTypes: null }, actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 206, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: { tag: 1, key: null, elementType: [Function: SampleComparisonReportBody], type: [Function: SampleComparisonReportBody], stateNode: { props: [Object], context: [Object], refs: [Object], updater: [Object], getReportId: [Function (anonymous)], fetchReport: [Function (anonymous)], state: [Object], _reactInternalFiber: [Object], _reactInternalInstance: [Object] }, return: { tag: 5, key: null, elementType: 'div', type: 'div', stateNode: [Object], return: [Object], child: [Object], sibling: null, index: 0, ref: null, pendingProps: [Object], memoizedProps: [Object], updateQueue: null, memoizedState: null, dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: [Object], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 186, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Object], _debugNeedsRemount: false, _debugHookTypes: null }, child: { tag: 5, key: null, elementType: 'div', type: 'div', stateNode: [Object], return: [Object], child: [Object], sibling: null, index: 0, ref: null, pendingProps: [Object], memoizedProps: [Object], updateQueue: null, memoizedState: null, dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: [Object], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 190, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Object], _debugNeedsRemount: false, _debugHookTypes: null }, sibling: null, index: 0, ref: null, pendingProps: { report: [Object] }, memoizedProps: { report: [Object] }, updateQueue: { baseState: [Object], baseQueue: null, shared: [Object], effects: null }, memoizedState: { loading: true, report: null, error: null }, dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: { tag: 1, key: null, elementType: [Function: SampleComparisonReportBody], type: [Function: SampleComparisonReportBody], stateNode: [Object], return: [Object], child: [Object], sibling: null, index: 0, ref: null, pendingProps: [Object], memoizedProps: [Object], updateQueue: [Object], memoizedState: [Object], dependencies: null, mode: 0, effectTag: 1, nextEffect: null, firstEffect: null, lastEffect: null, expirationTime: 0, childExpirationTime: 0, alternate: [Object], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 188, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Object], _debugNeedsRemount: false, _debugHookTypes: null }, actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 188, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: { tag: 1, key: null, elementType: [Function: ReportItemModal], type: [Function: ReportItemModal], stateNode: [Object], return: [Object], child: [Object], sibling: null, index: 0, ref: null, pendingProps: [Object], memoizedProps: [Object], updateQueue: [Object], memoizedState: null, dependencies: null, mode: 0, effectTag: 0, nextEffect: null, firstEffect: [Object], lastEffect: [Object], expirationTime: 0, childExpirationTime: 0, alternate: [Object], actualDuration: 0, actualStartTime: -1, selfBaseDuration: 0, treeBaseDuration: 0, _debugID: 130, _debugIsCurrentlyTiming: false, _debugSource: null, _debugOwner: [Object], _debugNeedsRemount: false, _debugHookTypes: null }, _debugNeedsRemount: false, _debugHookTypes: null }, _debugNeedsRemount: false, _debugHookTypes: null }, _reactInternalInstance: {}, __reactInternalMemoizedUnmaskedChildContext: { $bs_modal: { onHide: [Function: noop] }, transitionGroup: null }, __reactInternalMemoizedMaskedChildContext: { '@@contextSubscriber/router': undefined, router: undefined }, __isMounted: true }, __reactBoundMethod: [Function: handleClick], __reactBoundArguments: null, bind: [Function (anonymous)] }}>
                                              View in Biologics
                                            </a>
                                          </Link>
                                        </p>
                                      </div>
                                      <div>
                                        <LoadingSpinner msg=\\"Loading report definition...\\" wrapperClassName=\\"\\">
                                          <span className=\\"\\">
                                            <i aria-hidden=\\"true\\" className=\\"fa fa-spinner fa-pulse\\" />
                                             
                                            Loading report definition...
                                          </span>
                                        </LoadingSpinner>
                                      </div>
                                      <ReportMetadata report={{...}}>
                                        <div className=\\"report-item__metadata\\">
                                          <div className=\\"report-item__metadata-item\\">
                                            <label>
                                              Created By:
                                            </label>
                                            <span>
                                              alanv
                                            </span>
                                          </div>
                                          <div className=\\"report-item__metadata-item\\">
                                            <label>
                                              Type:
                                            </label>
                                            <span>
                                              Sample Comparison
                                            </span>
                                          </div>
                                          <div className=\\"report-item__metadata-item\\">
                                            <label>
                                              Description:
                                            </label>
                                            <span>
                                              From Kevin
                                            </span>
                                          </div>
                                        </div>
                                      </ReportMetadata>
                                    </div>
                                  </SampleComparisonReportBody>
                                </div>
                              </ModalBody>
                            </div>
                          </div>
                        </div>
                      </ModalDialog>
                    </Transition>
                  </Fade>
                </DialogTransition>
              </RefHolder>
            </div>
          </Portal>
        </Portal>
      </Modal>
    </Modal>
  </div>
</ReportItemModal>"
`;

exports[`<ReportList /> Render loading 1`] = `
<div
  className="panel panel-default"
>
  <div
    className="report-list"
  >
    <div
      className="report-list__message"
    >
      <span
        className=""
      >
        <i
          aria-hidden="true"
          className="fa fa-spinner fa-pulse"
        />
         
        Loading...
      </span>
    </div>
  </div>
</div>
`;

exports[`<ReportList /> Render with data 1`] = `
<div
  className="panel panel-default"
>
  <div
    className="report-list"
  >
    <ul
      className="report-list__list media-list"
    >
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="sample_comparison-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/sample_comparison.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Example SCR
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="xy_scatter-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/xy_scatter.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Injection Volume Comparison 2
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="xy_scatter-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/xy_scatter.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Avg Mass vs pl
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="box_plot-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/box_plot.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Arg Box Plot
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="bar_chart-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/bar_chart.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Bar plot of Mean Cys for Runs
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="pie_chart-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/pie_chart.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Pie chart example
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="bar_chart-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/bar_chart.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Sum of Molecular Weight by Chemical Formula
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="xy_line-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/xy_line.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Line plot: Pro by Sample Date
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="box_plot-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/box_plot.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              MAb Box Plot
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="pie_chart-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/pie_chart.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Distribution by Lot
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="xy_scatter-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/xy_scatter.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Scatter: Arg vs Ala (filtered)
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="xy_scatter-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/xy_scatter.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Scatter: Arg vs Ala
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="xy_scatter-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/xy_scatter.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Injection Volume Comparison
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="box_plot-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/box_plot.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Private Chart
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="custom_grid-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/custom_grid.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Test Custom View
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="custom_grid-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/custom_grid.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Test Custom View
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="custom_grid-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/custom_grid.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Name only
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="custom_grid-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/custom_grid.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Private view
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="custom_grid-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/custom_grid.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Scientific Name only
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="custom_grid-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/custom_grid.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Name only
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="custom_grid-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/custom_grid.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              SampleID only
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
      <li
        className="report-list-item media"
        onClick={[Function]}
      >
        <div
          className="media-left"
        >
          <img
            alt="custom_grid-icon"
            className="report-list-item__icon"
            height={null}
            src="/labkey/_images/custom_grid.svg"
            width="100%"
          />
        </div>
        <div
          className="media-body"
        >
          <h4
            className="report-list-item__name media-heading"
          >
            <a
              onClick={[Function]}
              style={Object {}}
            >
              Test Custom View
            </a>
          </h4>
          <p
            className="report-list-item__person"
          >
            Created by: 
            alanv
          </p>
        </div>
      </li>
    </ul>
  </div>
</div>
`;

exports[`<ReportList /> Render with no data 1`] = `
<div
  className="panel panel-default"
>
  <div
    className="report-list"
  >
    <div
      className="report-list__message"
    >
      No reports.
    </div>
  </div>
</div>
`;

exports[`<ReportListItem /> ReportListItem renders 1`] = `
<li
  className="report-list-item media"
  onClick={[Function]}
>
  <div
    className="media-left"
  >
    <img
      alt="xy_scatter-icon"
      className="report-list-item__icon"
      height={null}
      src="/labkey/_images/xy_scatter.svg"
      width="100%"
    />
  </div>
  <div
    className="media-body"
  >
    <h4
      className="report-list-item__name media-heading"
    >
      <a
        href="/q/assay.General.SEC/Data"
        onClick={[Function]}
        style={Object {}}
      >
        Injection Volume Comparison 2
      </a>
    </h4>
    <p
      className="report-list-item__person"
    >
      Created by: 
      alanv
    </p>
  </div>
</li>
`;
