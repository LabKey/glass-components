// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DomainRowDisplay client side warning on field 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={6}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="6"
            >
              <DomainRow
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "defaultScale": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "#ColumnAwesome",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": undefined,
                    "propertyURI": "test",
                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text (String)",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "shortDisplay": "String",
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "shortDisplay": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text (String)",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "shortDisplay": "String",
                      },
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                fieldError={
                  Immutable.Record {
                    "message": "SQL queries, R scripts, and other code are easiest to write when field names only contain combination of letters, numbers, and underscores, and start with a letter or underscore.",
                    "fieldName": "#ColumnAwesome",
                    "propertyId": undefined,
                    "severity": "Warning",
                    "rowIndexes": Immutable.List [],
                    "newRowIndexes": undefined,
                  }
                }
                index={1}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-1"
                  index={1}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-1"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={1}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      aria-roledescription="Draggable item. Press space bar to lift"
                      className="domain-field-row-warning "
                      data-react-beautiful-dnd-drag-handle="6"
                      data-react-beautiful-dnd-draggable="6"
                      draggable={true}
                      onBlur={[Function]}
                      onDragStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={1}
                    >
                      <Row
                        bsClass="row"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-1"
                      >
                        <div
                          className="row"
                        >
                          <AdvancedSettings
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "defaultScale": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "#ColumnAwesome",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": "test",
                                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text (String)",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "shortDisplay": "String",
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  "shortDisplay": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text (String)",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": "String",
                                  },
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            index={1}
                            label="#ColumnAwesome"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            id="domainpropertiesrow-row-1"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={3}
                            >
                              <div
                                className="col-xs-3"
                              >
                                <Tip
                                  caption="Name"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Name
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="input"
                                      disabled={false}
                                      id="domainpropertiesrow-name-1"
                                      name="domainpropertiesrow-name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      type="text"
                                      value="#ColumnAwesome"
                                    >
                                      <input
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-name-1"
                                        name="domainpropertiesrow-name"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        type="text"
                                        value="#ColumnAwesome"
                                      />
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={2}
                            >
                              <div
                                className="col-xs-2"
                              >
                                <Tip
                                  caption="Data Type"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Data Type
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="select"
                                      disabled={false}
                                      id="domainpropertiesrow-type-1"
                                      name="domainpropertiesrow-type"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      value="string"
                                    >
                                      <select
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-type-1"
                                        name="domainpropertiesrow-type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        value="string"
                                      >
                                        <option
                                          key="0"
                                          value="string"
                                        >
                                          Text (String)
                                        </option>
                                        <option
                                          key="1"
                                          value="multiLine"
                                        >
                                          Multi-Line Text
                                        </option>
                                        <option
                                          key="2"
                                          value="boolean"
                                        >
                                          Boolean
                                        </option>
                                        <option
                                          key="3"
                                          value="int"
                                        >
                                          Integer
                                        </option>
                                        <option
                                          key="4"
                                          value="double"
                                        >
                                          Decimal
                                        </option>
                                        <option
                                          key="5"
                                          value="dateTime"
                                        >
                                          Date Time
                                        </option>
                                        <option
                                          key="6"
                                          value="flag"
                                        >
                                          Flag (String)
                                        </option>
                                        <option
                                          key="7"
                                          value="fileLink"
                                        >
                                          File
                                        </option>
                                        <option
                                          key="8"
                                          value="attachment"
                                        >
                                          Attachment
                                        </option>
                                        <option
                                          key="9"
                                          value="users"
                                        >
                                          User
                                        </option>
                                        <option
                                          key="10"
                                          value="ParticipantId"
                                        >
                                          Subject/Participant (String)
                                        </option>
                                        <option
                                          key="11"
                                          value="lookup"
                                        >
                                          Lookup
                                        </option>
                                      </select>
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={1}
                            >
                              <div
                                className="col-xs-1"
                              >
                                <div
                                  className="domain-field-checkbox"
                                >
                                  <Tip
                                    caption="Required?"
                                  >
                                    <OverlayTrigger
                                      defaultOverlayShown={false}
                                      delay={200}
                                      onClick={[Function]}
                                      overlay={
                                        <Tooltip
                                          bsClass="tooltip"
                                          id="tooltip"
                                          placement="right"
                                        >
                                          Required?
                                        </Tooltip>
                                      }
                                      placement="top"
                                      trigger={
                                        Array [
                                          "focus",
                                          "hover",
                                        ]
                                      }
                                    >
                                      <Checkbox
                                        bsClass="checkbox"
                                        checked={false}
                                        className="domain-field-checkbox"
                                        disabled={false}
                                        id="domainpropertiesrow-required-1"
                                        inline={false}
                                        name="domainpropertiesrow-required"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        title=""
                                      >
                                        <div
                                          className="domain-field-checkbox checkbox"
                                        >
                                          <label
                                            title=""
                                          >
                                            <input
                                              checked={false}
                                              disabled={false}
                                              id="domainpropertiesrow-required-1"
                                              name="domainpropertiesrow-required"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseOut={[Function]}
                                              onMouseOver={[Function]}
                                              type="checkbox"
                                            />
                                          </label>
                                        </div>
                                      </Checkbox>
                                    </OverlayTrigger>
                                  </Tip>
                                </div>
                              </div>
                            </Col>
                          </div>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={6}
                          >
                            <div
                              className="col-xs-6"
                            >
                              <span
                                className="domain-field-details"
                                id="domainpropertiesrow-details-1"
                              >
                                New field
                                . 
                                <b
                                  key="#ColumnAwesome_1"
                                >
                                  Warning: SQL queries, R scripts, and other code are easiest to write when field names only contain combination of letters, numbers, and underscores, and start with a letter or underscore.
                                </b>
                              </span>
                              <div
                                className="pull-right"
                              >
                                <Tip
                                  caption="Additional Settings"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Additional Settings
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <div
                                      className="domain-field-icon"
                                      id="domainpropertiesrow-expand-1"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                    >
                                      <FontAwesomeIcon
                                        border={false}
                                        className=""
                                        fixedWidth={false}
                                        flip={null}
                                        icon={
                                          Object {
                                            "icon": Array [
                                              512,
                                              512,
                                              Array [],
                                              "f303",
                                              "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z",
                                            ],
                                            "iconName": "pencil-alt",
                                            "prefix": "fas",
                                          }
                                        }
                                        inverse={false}
                                        listItem={false}
                                        mask={null}
                                        pull={null}
                                        pulse={false}
                                        rotation={null}
                                        size={null}
                                        spin={false}
                                        symbol={false}
                                        title=""
                                        transform={null}
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="svg-inline--fa fa-pencil-alt fa-w-16 "
                                          data-icon="pencil-alt"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          style={Object {}}
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z"
                                            fill="currentColor"
                                            style={Object {}}
                                          />
                                        </svg>
                                      </FontAwesomeIcon>
                                    </div>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "defaultScale": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "#ColumnAwesome",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": undefined,
                                  "propertyURI": "test",
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text (String)",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": "String",
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    "shortDisplay": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Text (String)",
                                      "name": "string",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": "String",
                                    },
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={1}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                            >
                              <TextFieldOptions
                                index={1}
                                label="Text Options"
                                lockType="NotLocked"
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Text Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded "
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded  row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Max Text Character Count
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Max Text Length"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        className="domain-text-options-col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="domain-text-options-col col-xs-12"
                                        >
                                          <input
                                            checked={true}
                                            className="domain-text-options-radio1 domain-field-float-left"
                                            disabled={false}
                                            id="domainpropertiesrow-maxLength-1"
                                            name="domainpropertiesrow-maxLength"
                                            onChange={[Function]}
                                            type="radio"
                                            value="maxLength"
                                          />
                                          <div
                                            className="domain-text-label"
                                          >
                                            Allow max character count
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <input
                                            checked={false}
                                            className="domain-text-options-radio2 domain-field-float-left"
                                            id="domainpropertiesrow-customLength-1"
                                            name="domainpropertiesrow-customLength"
                                            onChange={[Function]}
                                            type="radio"
                                            value="customLength"
                                          />
                                          <span
                                            className="domain-text-options-length domain-field-float-left domain-text-label"
                                          >
                                            Set character count to
                                          </span>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={true}
                                            id="domainpropertiesrow-scale-1"
                                            name="domainpropertiesrow-scale"
                                            onChange={[Function]}
                                            style={
                                              Object {
                                                "width": "60px",
                                              }
                                            }
                                            type="text"
                                            value={4000}
                                          >
                                            <input
                                              className="form-control"
                                              disabled={true}
                                              id="domainpropertiesrow-scale-1"
                                              name="domainpropertiesrow-scale"
                                              onChange={[Function]}
                                              style={
                                                Object {
                                                  "width": "60px",
                                                }
                                              }
                                              type="text"
                                              value={4000}
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </TextFieldOptions>
                              <NameAndLinkingOptions
                                field={
                                  Immutable.Record {
                                    "conceptURI": undefined,
                                    "defaultScale": undefined,
                                    "description": undefined,
                                    "dimension": undefined,
                                    "excludeFromShifting": false,
                                    "format": undefined,
                                    "hidden": false,
                                    "importAliases": undefined,
                                    "label": undefined,
                                    "lookupContainer": undefined,
                                    "lookupQuery": undefined,
                                    "lookupSchema": undefined,
                                    "measure": undefined,
                                    "mvEnabled": false,
                                    "name": "#ColumnAwesome",
                                    "PHI": undefined,
                                    "primaryKey": undefined,
                                    "propertyId": undefined,
                                    "propertyURI": "test",
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    "recommendedVariable": false,
                                    "required": false,
                                    "scale": undefined,
                                    "URL": undefined,
                                    "shownInDetailsView": true,
                                    "shownInInsertView": true,
                                    "shownInUpdateView": true,
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Text (String)",
                                      "name": "string",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": "String",
                                    },
                                    "lookupQueryValue": undefined,
                                    "lookupType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Lookup",
                                      "name": "lookup",
                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                      "shortDisplay": undefined,
                                    },
                                    "original": Object {
                                      "dataType": Immutable.Record {
                                        "conceptURI": undefined,
                                        "display": "Text (String)",
                                        "name": "string",
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        "shortDisplay": "String",
                                      },
                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    },
                                    "updatedField": false,
                                    "isPrimaryKey": false,
                                    "lockType": "NotLocked",
                                  }
                                }
                                index={1}
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Name and Linking Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Description
                                          </div>
                                          <textarea
                                            className="form-control domain-field-description"
                                            disabled={false}
                                            id="domainpropertiesrow-description-1"
                                            name="domainpropertiesrow-description"
                                            onChange={[Function]}
                                            placeholder="Add a description"
                                            rows={4}
                                            value=""
                                          />
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={3}
                                      >
                                        <div
                                          className="col-xs-3"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Label
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-label-1"
                                            name="domainpropertiesrow-label"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-label-1"
                                              name="domainpropertiesrow-label"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                          <div
                                            className="domain-field-label"
                                          >
                                            Import Aliases
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Import Aliases"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-importAliases-1"
                                            name="domainpropertiesrow-importAliases"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-importAliases-1"
                                              name="domainpropertiesrow-importAliases"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            URL
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="URL"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-URL-1"
                                            name="domainpropertiesrow-URL"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-URL-1"
                                              name="domainpropertiesrow-URL"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </NameAndLinkingOptions>
                              <Row
                                bsClass="row"
                                componentClass="div"
                                style={
                                  Object {
                                    "height": "20px",
                                  }
                                }
                              >
                                <div
                                  className="row"
                                  style={
                                    Object {
                                      "height": "20px",
                                    }
                                  }
                                />
                              </Row>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRowDisplay date time field 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={3}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="3"
            >
              <DomainRow
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "defaultScale": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "dateTimeField",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": 1,
                    "propertyURI": "test",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "shortDisplay": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "shortDisplay": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "shortDisplay": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                index={0}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-0"
                  index={0}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-0"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={0}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      aria-roledescription="Draggable item. Press space bar to lift"
                      className="domain-field-row "
                      data-react-beautiful-dnd-drag-handle="3"
                      data-react-beautiful-dnd-draggable="3"
                      draggable={true}
                      onBlur={[Function]}
                      onDragStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={0}
                    >
                      <Row
                        bsClass="row"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-0"
                      >
                        <div
                          className="row"
                        >
                          <AdvancedSettings
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "defaultScale": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "dateTimeField",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": 1,
                                "propertyURI": "test",
                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "shortDisplay": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "shortDisplay": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "shortDisplay": undefined,
                                  },
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            index={0}
                            label="dateTimeField"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            id="domainpropertiesrow-row-0"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={3}
                            >
                              <div
                                className="col-xs-3"
                              >
                                <Tip
                                  caption="Name"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Name
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="input"
                                      disabled={false}
                                      id="domainpropertiesrow-name-0"
                                      name="domainpropertiesrow-name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      type="text"
                                      value="dateTimeField"
                                    >
                                      <input
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-name-0"
                                        name="domainpropertiesrow-name"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        type="text"
                                        value="dateTimeField"
                                      />
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={2}
                            >
                              <div
                                className="col-xs-2"
                              >
                                <Tip
                                  caption="Data Type"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Data Type
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="select"
                                      disabled={false}
                                      id="domainpropertiesrow-type-0"
                                      name="domainpropertiesrow-type"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      value="dateTime"
                                    >
                                      <select
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-type-0"
                                        name="domainpropertiesrow-type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        value="dateTime"
                                      >
                                        <option
                                          key="0"
                                          value="dateTime"
                                        >
                                          Date Time
                                        </option>
                                      </select>
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={1}
                            >
                              <div
                                className="col-xs-1"
                              >
                                <div
                                  className="domain-field-checkbox"
                                >
                                  <Tip
                                    caption="Required?"
                                  >
                                    <OverlayTrigger
                                      defaultOverlayShown={false}
                                      delay={200}
                                      onClick={[Function]}
                                      overlay={
                                        <Tooltip
                                          bsClass="tooltip"
                                          id="tooltip"
                                          placement="right"
                                        >
                                          Required?
                                        </Tooltip>
                                      }
                                      placement="top"
                                      trigger={
                                        Array [
                                          "focus",
                                          "hover",
                                        ]
                                      }
                                    >
                                      <Checkbox
                                        bsClass="checkbox"
                                        checked={false}
                                        className="domain-field-checkbox"
                                        disabled={false}
                                        id="domainpropertiesrow-required-0"
                                        inline={false}
                                        name="domainpropertiesrow-required"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        title=""
                                      >
                                        <div
                                          className="domain-field-checkbox checkbox"
                                        >
                                          <label
                                            title=""
                                          >
                                            <input
                                              checked={false}
                                              disabled={false}
                                              id="domainpropertiesrow-required-0"
                                              name="domainpropertiesrow-required"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseOut={[Function]}
                                              onMouseOver={[Function]}
                                              type="checkbox"
                                            />
                                          </label>
                                        </div>
                                      </Checkbox>
                                    </OverlayTrigger>
                                  </Tip>
                                </div>
                              </div>
                            </Col>
                          </div>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={6}
                          >
                            <div
                              className="col-xs-6"
                            >
                              <span
                                className="domain-field-details"
                                id="domainpropertiesrow-details-0"
                              />
                              <div
                                className="pull-right"
                              >
                                <Tip
                                  caption="Additional Settings"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Additional Settings
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <div
                                      className="domain-field-icon"
                                      id="domainpropertiesrow-expand-0"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                    >
                                      <FontAwesomeIcon
                                        border={false}
                                        className=""
                                        fixedWidth={false}
                                        flip={null}
                                        icon={
                                          Object {
                                            "icon": Array [
                                              512,
                                              512,
                                              Array [],
                                              "f303",
                                              "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z",
                                            ],
                                            "iconName": "pencil-alt",
                                            "prefix": "fas",
                                          }
                                        }
                                        inverse={false}
                                        listItem={false}
                                        mask={null}
                                        pull={null}
                                        pulse={false}
                                        rotation={null}
                                        size={null}
                                        spin={false}
                                        symbol={false}
                                        title=""
                                        transform={null}
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="svg-inline--fa fa-pencil-alt fa-w-16 "
                                          data-icon="pencil-alt"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          style={Object {}}
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z"
                                            fill="currentColor"
                                            style={Object {}}
                                          />
                                        </svg>
                                      </FontAwesomeIcon>
                                    </div>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "defaultScale": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "dateTimeField",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": 1,
                                  "propertyURI": "test",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "shortDisplay": undefined,
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "shortDisplay": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Date Time",
                                      "name": "dateTime",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                      "shortDisplay": undefined,
                                    },
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={0}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                            >
                              <DateTimeFieldOptions
                                excludeFromShifting={false}
                                index={0}
                                label="Date and Time Options"
                                lockType="NotLocked"
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Date and Time Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={3}
                                      >
                                        <div
                                          className="col-xs-3"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Format for Dates
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Format String"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={3}
                                      >
                                        <div
                                          className="col-xs-3"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Participant Date Shifting
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Participant Date Shifting"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={2}
                                      >
                                        <div
                                          className="col-xs-2"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-format-0"
                                            name="domainpropertiesrow-format"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-format-0"
                                              name="domainpropertiesrow-format"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={1}
                                      >
                                        <div
                                          className="col-xs-1"
                                        />
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={9}
                                      >
                                        <div
                                          className="col-xs-9"
                                        >
                                          <input
                                            checked={false}
                                            className="domain-field-float-left domain-field-checkbox"
                                            disabled={false}
                                            id="domainpropertiesrow-excludeFromShifting-0"
                                            name="domainpropertiesrow-excludeFromShifting"
                                            onChange={[Function]}
                                            type="checkbox"
                                            value="ExcludeFromShiftingOptions"
                                          />
                                          <div
                                            className="domain-field-float-left domain-field-checkbox-label"
                                          >
                                            Do Not Shift Dates on Export or Publication
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </DateTimeFieldOptions>
                              <NameAndLinkingOptions
                                field={
                                  Immutable.Record {
                                    "conceptURI": undefined,
                                    "defaultScale": undefined,
                                    "description": undefined,
                                    "dimension": undefined,
                                    "excludeFromShifting": false,
                                    "format": undefined,
                                    "hidden": false,
                                    "importAliases": undefined,
                                    "label": undefined,
                                    "lookupContainer": undefined,
                                    "lookupQuery": undefined,
                                    "lookupSchema": undefined,
                                    "measure": undefined,
                                    "mvEnabled": false,
                                    "name": "dateTimeField",
                                    "PHI": undefined,
                                    "primaryKey": undefined,
                                    "propertyId": 1,
                                    "propertyURI": "test",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "recommendedVariable": false,
                                    "required": false,
                                    "scale": undefined,
                                    "URL": undefined,
                                    "shownInDetailsView": true,
                                    "shownInInsertView": true,
                                    "shownInUpdateView": true,
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Date Time",
                                      "name": "dateTime",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                      "shortDisplay": undefined,
                                    },
                                    "lookupQueryValue": undefined,
                                    "lookupType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Lookup",
                                      "name": "lookup",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                      "shortDisplay": undefined,
                                    },
                                    "original": Object {
                                      "dataType": Immutable.Record {
                                        "conceptURI": undefined,
                                        "display": "Date Time",
                                        "name": "dateTime",
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                        "shortDisplay": undefined,
                                      },
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    },
                                    "updatedField": false,
                                    "isPrimaryKey": false,
                                    "lockType": "NotLocked",
                                  }
                                }
                                index={0}
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Name and Linking Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Description
                                          </div>
                                          <textarea
                                            className="form-control domain-field-description"
                                            disabled={false}
                                            id="domainpropertiesrow-description-0"
                                            name="domainpropertiesrow-description"
                                            onChange={[Function]}
                                            placeholder="Add a description"
                                            rows={4}
                                            value=""
                                          />
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={3}
                                      >
                                        <div
                                          className="col-xs-3"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Label
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-label-0"
                                            name="domainpropertiesrow-label"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-label-0"
                                              name="domainpropertiesrow-label"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                          <div
                                            className="domain-field-label"
                                          >
                                            Import Aliases
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Import Aliases"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-importAliases-0"
                                            name="domainpropertiesrow-importAliases"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-importAliases-0"
                                              name="domainpropertiesrow-importAliases"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            URL
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="URL"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-URL-0"
                                            name="domainpropertiesrow-URL"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-URL-0"
                                              name="domainpropertiesrow-URL"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </NameAndLinkingOptions>
                              <Row
                                bsClass="row"
                                componentClass="div"
                                style={
                                  Object {
                                    "height": "20px",
                                  }
                                }
                              >
                                <div
                                  className="row"
                                  style={
                                    Object {
                                      "height": "20px",
                                    }
                                  }
                                />
                              </Row>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRowDisplay decimal field 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={2}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="2"
            >
              <DomainRow
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "defaultScale": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "decimalField",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": 1,
                    "propertyURI": "test",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                    "recommendedVariable": false,
                    "required": true,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Decimal",
                      "name": "double",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                      "shortDisplay": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                      "shortDisplay": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Decimal",
                        "name": "double",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                        "shortDisplay": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                index={2}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-2"
                  index={2}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-2"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={2}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      aria-roledescription="Draggable item. Press space bar to lift"
                      className="domain-field-row "
                      data-react-beautiful-dnd-drag-handle="2"
                      data-react-beautiful-dnd-draggable="2"
                      draggable={true}
                      onBlur={[Function]}
                      onDragStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={2}
                    >
                      <Row
                        bsClass="row"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-2"
                      >
                        <div
                          className="row"
                        >
                          <AdvancedSettings
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "defaultScale": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "decimalField",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": 1,
                                "propertyURI": "test",
                                "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                "recommendedVariable": false,
                                "required": true,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Decimal",
                                  "name": "double",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                  "shortDisplay": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                  "shortDisplay": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Decimal",
                                    "name": "double",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                    "shortDisplay": undefined,
                                  },
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            index={2}
                            label="decimalField"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            id="domainpropertiesrow-row-2"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={3}
                            >
                              <div
                                className="col-xs-3"
                              >
                                <Tip
                                  caption="Name"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Name
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="input"
                                      disabled={false}
                                      id="domainpropertiesrow-name-2"
                                      name="domainpropertiesrow-name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      type="text"
                                      value="decimalField"
                                    >
                                      <input
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-name-2"
                                        name="domainpropertiesrow-name"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        type="text"
                                        value="decimalField"
                                      />
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={2}
                            >
                              <div
                                className="col-xs-2"
                              >
                                <Tip
                                  caption="Data Type"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Data Type
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="select"
                                      disabled={false}
                                      id="domainpropertiesrow-type-2"
                                      name="domainpropertiesrow-type"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      value="double"
                                    >
                                      <select
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-type-2"
                                        name="domainpropertiesrow-type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        value="double"
                                      >
                                        <option
                                          key="0"
                                          value="double"
                                        >
                                          Decimal
                                        </option>
                                      </select>
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={1}
                            >
                              <div
                                className="col-xs-1"
                              >
                                <div
                                  className="domain-field-checkbox"
                                >
                                  <Tip
                                    caption="Required?"
                                  >
                                    <OverlayTrigger
                                      defaultOverlayShown={false}
                                      delay={200}
                                      onClick={[Function]}
                                      overlay={
                                        <Tooltip
                                          bsClass="tooltip"
                                          id="tooltip"
                                          placement="right"
                                        >
                                          Required?
                                        </Tooltip>
                                      }
                                      placement="top"
                                      trigger={
                                        Array [
                                          "focus",
                                          "hover",
                                        ]
                                      }
                                    >
                                      <Checkbox
                                        bsClass="checkbox"
                                        checked={true}
                                        className="domain-field-checkbox"
                                        disabled={false}
                                        id="domainpropertiesrow-required-2"
                                        inline={false}
                                        name="domainpropertiesrow-required"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        title=""
                                      >
                                        <div
                                          className="domain-field-checkbox checkbox"
                                        >
                                          <label
                                            title=""
                                          >
                                            <input
                                              checked={true}
                                              disabled={false}
                                              id="domainpropertiesrow-required-2"
                                              name="domainpropertiesrow-required"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseOut={[Function]}
                                              onMouseOver={[Function]}
                                              type="checkbox"
                                            />
                                          </label>
                                        </div>
                                      </Checkbox>
                                    </OverlayTrigger>
                                  </Tip>
                                </div>
                              </div>
                            </Col>
                          </div>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={6}
                          >
                            <div
                              className="col-xs-6"
                            >
                              <span
                                className="domain-field-details"
                                id="domainpropertiesrow-details-2"
                              />
                              <div
                                className="pull-right"
                              >
                                <Tip
                                  caption="Additional Settings"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Additional Settings
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <div
                                      className="domain-field-icon"
                                      id="domainpropertiesrow-expand-2"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                    >
                                      <FontAwesomeIcon
                                        border={false}
                                        className=""
                                        fixedWidth={false}
                                        flip={null}
                                        icon={
                                          Object {
                                            "icon": Array [
                                              512,
                                              512,
                                              Array [],
                                              "f303",
                                              "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z",
                                            ],
                                            "iconName": "pencil-alt",
                                            "prefix": "fas",
                                          }
                                        }
                                        inverse={false}
                                        listItem={false}
                                        mask={null}
                                        pull={null}
                                        pulse={false}
                                        rotation={null}
                                        size={null}
                                        spin={false}
                                        symbol={false}
                                        title=""
                                        transform={null}
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="svg-inline--fa fa-pencil-alt fa-w-16 "
                                          data-icon="pencil-alt"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          style={Object {}}
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z"
                                            fill="currentColor"
                                            style={Object {}}
                                          />
                                        </svg>
                                      </FontAwesomeIcon>
                                    </div>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "defaultScale": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "decimalField",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": 1,
                                  "propertyURI": "test",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                  "recommendedVariable": false,
                                  "required": true,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Decimal",
                                    "name": "double",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                    "shortDisplay": undefined,
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                    "shortDisplay": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Decimal",
                                      "name": "double",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                      "shortDisplay": undefined,
                                    },
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={2}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                            >
                              <NumericFieldOptions
                                index={2}
                                label="Decimal Options"
                                lockType="NotLocked"
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Decimal Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={3}
                                      >
                                        <div
                                          className="col-xs-3"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Format Numeric Values
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Format Strings"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={3}
                                      >
                                        <div
                                          className="col-xs-3"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Default Scale Type
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={2}
                                      >
                                        <div
                                          className="col-xs-2"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-format-2"
                                            name="domainpropertiesrow-format"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-format-2"
                                              name="domainpropertiesrow-format"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={1}
                                      >
                                        <div
                                          className="col-xs-1"
                                        />
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={2}
                                      >
                                        <div
                                          className="col-xs-2"
                                        >
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="select"
                                            disabled={false}
                                            id="domainpropertiesrow-defaultScale-2"
                                            name="domainpropertiesrow-defaultScale"
                                            onChange={[Function]}
                                          >
                                            <select
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-defaultScale-2"
                                              name="domainpropertiesrow-defaultScale"
                                              onChange={[Function]}
                                            >
                                              <option
                                                key="domainpropertiesrow-defaultScaleoption-LINEAR-2"
                                                value="LINEAR"
                                              >
                                                LINEAR
                                              </option>
                                              <option
                                                key="domainpropertiesrow-defaultScaleoption-LOG-2"
                                                value="LOG"
                                              >
                                                LOG
                                              </option>
                                            </select>
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </NumericFieldOptions>
                              <NameAndLinkingOptions
                                field={
                                  Immutable.Record {
                                    "conceptURI": undefined,
                                    "defaultScale": undefined,
                                    "description": undefined,
                                    "dimension": undefined,
                                    "excludeFromShifting": false,
                                    "format": undefined,
                                    "hidden": false,
                                    "importAliases": undefined,
                                    "label": undefined,
                                    "lookupContainer": undefined,
                                    "lookupQuery": undefined,
                                    "lookupSchema": undefined,
                                    "measure": undefined,
                                    "mvEnabled": false,
                                    "name": "decimalField",
                                    "PHI": undefined,
                                    "primaryKey": undefined,
                                    "propertyId": 1,
                                    "propertyURI": "test",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                    "recommendedVariable": false,
                                    "required": true,
                                    "scale": undefined,
                                    "URL": undefined,
                                    "shownInDetailsView": true,
                                    "shownInInsertView": true,
                                    "shownInUpdateView": true,
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Decimal",
                                      "name": "double",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                      "shortDisplay": undefined,
                                    },
                                    "lookupQueryValue": undefined,
                                    "lookupType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Lookup",
                                      "name": "lookup",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                      "shortDisplay": undefined,
                                    },
                                    "original": Object {
                                      "dataType": Immutable.Record {
                                        "conceptURI": undefined,
                                        "display": "Decimal",
                                        "name": "double",
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                        "shortDisplay": undefined,
                                      },
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                    },
                                    "updatedField": false,
                                    "isPrimaryKey": false,
                                    "lockType": "NotLocked",
                                  }
                                }
                                index={2}
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Name and Linking Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Description
                                          </div>
                                          <textarea
                                            className="form-control domain-field-description"
                                            disabled={false}
                                            id="domainpropertiesrow-description-2"
                                            name="domainpropertiesrow-description"
                                            onChange={[Function]}
                                            placeholder="Add a description"
                                            rows={4}
                                            value=""
                                          />
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={3}
                                      >
                                        <div
                                          className="col-xs-3"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Label
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-label-2"
                                            name="domainpropertiesrow-label"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-label-2"
                                              name="domainpropertiesrow-label"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                          <div
                                            className="domain-field-label"
                                          >
                                            Import Aliases
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Import Aliases"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-importAliases-2"
                                            name="domainpropertiesrow-importAliases"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-importAliases-2"
                                              name="domainpropertiesrow-importAliases"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            URL
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="URL"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-URL-2"
                                            name="domainpropertiesrow-URL"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-URL-2"
                                              name="domainpropertiesrow-URL"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </NameAndLinkingOptions>
                              <Row
                                bsClass="row"
                                componentClass="div"
                                style={
                                  Object {
                                    "height": "20px",
                                  }
                                }
                              >
                                <div
                                  className="row"
                                  style={
                                    Object {
                                      "height": "20px",
                                    }
                                  }
                                />
                              </Row>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRowDisplay participant id field 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={4}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="4"
            >
              <DomainRow
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                    "defaultScale": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "participantField",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": 1,
                    "propertyURI": "test",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "dataType": Immutable.Record {
                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                      "display": "Subject/Participant (String)",
                      "name": "ParticipantId",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "shortDisplay": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "shortDisplay": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                        "display": "Subject/Participant (String)",
                        "name": "ParticipantId",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "shortDisplay": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                index={0}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-0"
                  index={0}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-0"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={0}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      aria-roledescription="Draggable item. Press space bar to lift"
                      className="domain-field-row "
                      data-react-beautiful-dnd-drag-handle="4"
                      data-react-beautiful-dnd-draggable="4"
                      draggable={true}
                      onBlur={[Function]}
                      onDragStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={0}
                    >
                      <Row
                        bsClass="row"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-0"
                      >
                        <div
                          className="row"
                        >
                          <AdvancedSettings
                            field={
                              Immutable.Record {
                                "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                "defaultScale": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "participantField",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": 1,
                                "propertyURI": "test",
                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                  "display": "Subject/Participant (String)",
                                  "name": "ParticipantId",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "shortDisplay": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "shortDisplay": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                    "display": "Subject/Participant (String)",
                                    "name": "ParticipantId",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": undefined,
                                  },
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            index={0}
                            label="participantField"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            id="domainpropertiesrow-row-0"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={3}
                            >
                              <div
                                className="col-xs-3"
                              >
                                <Tip
                                  caption="Name"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Name
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="input"
                                      disabled={false}
                                      id="domainpropertiesrow-name-0"
                                      name="domainpropertiesrow-name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      type="text"
                                      value="participantField"
                                    >
                                      <input
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-name-0"
                                        name="domainpropertiesrow-name"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        type="text"
                                        value="participantField"
                                      />
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={2}
                            >
                              <div
                                className="col-xs-2"
                              >
                                <Tip
                                  caption="Data Type"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Data Type
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="select"
                                      disabled={false}
                                      id="domainpropertiesrow-type-0"
                                      name="domainpropertiesrow-type"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      value="ParticipantId"
                                    >
                                      <select
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-type-0"
                                        name="domainpropertiesrow-type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        value="ParticipantId"
                                      >
                                        <option
                                          key="0"
                                          value="string"
                                        >
                                          Text (String)
                                        </option>
                                        <option
                                          key="1"
                                          value="multiLine"
                                        >
                                          Multi-Line Text
                                        </option>
                                        <option
                                          key="2"
                                          value="flag"
                                        >
                                          Flag (String)
                                        </option>
                                        <option
                                          key="3"
                                          value="ParticipantId"
                                        >
                                          Subject/Participant (String)
                                        </option>
                                        <option
                                          key="4"
                                          value="lookup"
                                        >
                                          Lookup
                                        </option>
                                      </select>
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={1}
                            >
                              <div
                                className="col-xs-1"
                              >
                                <div
                                  className="domain-field-checkbox"
                                >
                                  <Tip
                                    caption="Required?"
                                  >
                                    <OverlayTrigger
                                      defaultOverlayShown={false}
                                      delay={200}
                                      onClick={[Function]}
                                      overlay={
                                        <Tooltip
                                          bsClass="tooltip"
                                          id="tooltip"
                                          placement="right"
                                        >
                                          Required?
                                        </Tooltip>
                                      }
                                      placement="top"
                                      trigger={
                                        Array [
                                          "focus",
                                          "hover",
                                        ]
                                      }
                                    >
                                      <Checkbox
                                        bsClass="checkbox"
                                        checked={false}
                                        className="domain-field-checkbox"
                                        disabled={false}
                                        id="domainpropertiesrow-required-0"
                                        inline={false}
                                        name="domainpropertiesrow-required"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        title=""
                                      >
                                        <div
                                          className="domain-field-checkbox checkbox"
                                        >
                                          <label
                                            title=""
                                          >
                                            <input
                                              checked={false}
                                              disabled={false}
                                              id="domainpropertiesrow-required-0"
                                              name="domainpropertiesrow-required"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseOut={[Function]}
                                              onMouseOver={[Function]}
                                              type="checkbox"
                                            />
                                          </label>
                                        </div>
                                      </Checkbox>
                                    </OverlayTrigger>
                                  </Tip>
                                </div>
                              </div>
                            </Col>
                          </div>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={6}
                          >
                            <div
                              className="col-xs-6"
                            >
                              <span
                                className="domain-field-details"
                                id="domainpropertiesrow-details-0"
                              />
                              <div
                                className="pull-right"
                              >
                                <Tip
                                  caption="Additional Settings"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Additional Settings
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <div
                                      className="domain-field-icon"
                                      id="domainpropertiesrow-expand-0"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                    >
                                      <FontAwesomeIcon
                                        border={false}
                                        className=""
                                        fixedWidth={false}
                                        flip={null}
                                        icon={
                                          Object {
                                            "icon": Array [
                                              512,
                                              512,
                                              Array [],
                                              "f303",
                                              "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z",
                                            ],
                                            "iconName": "pencil-alt",
                                            "prefix": "fas",
                                          }
                                        }
                                        inverse={false}
                                        listItem={false}
                                        mask={null}
                                        pull={null}
                                        pulse={false}
                                        rotation={null}
                                        size={null}
                                        spin={false}
                                        symbol={false}
                                        title=""
                                        transform={null}
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="svg-inline--fa fa-pencil-alt fa-w-16 "
                                          data-icon="pencil-alt"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          style={Object {}}
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z"
                                            fill="currentColor"
                                            style={Object {}}
                                          />
                                        </svg>
                                      </FontAwesomeIcon>
                                    </div>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                  "defaultScale": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "participantField",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": 1,
                                  "propertyURI": "test",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                    "display": "Subject/Participant (String)",
                                    "name": "ParticipantId",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": undefined,
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                      "display": "Subject/Participant (String)",
                                      "name": "ParticipantId",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": undefined,
                                    },
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={0}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                            >
                              <NameAndLinkingOptions
                                field={
                                  Immutable.Record {
                                    "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                    "defaultScale": undefined,
                                    "description": undefined,
                                    "dimension": undefined,
                                    "excludeFromShifting": false,
                                    "format": undefined,
                                    "hidden": false,
                                    "importAliases": undefined,
                                    "label": undefined,
                                    "lookupContainer": undefined,
                                    "lookupQuery": undefined,
                                    "lookupSchema": undefined,
                                    "measure": undefined,
                                    "mvEnabled": false,
                                    "name": "participantField",
                                    "PHI": undefined,
                                    "primaryKey": undefined,
                                    "propertyId": 1,
                                    "propertyURI": "test",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "recommendedVariable": false,
                                    "required": false,
                                    "scale": undefined,
                                    "URL": undefined,
                                    "shownInDetailsView": true,
                                    "shownInInsertView": true,
                                    "shownInUpdateView": true,
                                    "dataType": Immutable.Record {
                                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                      "display": "Subject/Participant (String)",
                                      "name": "ParticipantId",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": undefined,
                                    },
                                    "lookupQueryValue": undefined,
                                    "lookupType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Lookup",
                                      "name": "lookup",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": undefined,
                                    },
                                    "original": Object {
                                      "dataType": Immutable.Record {
                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                        "display": "Subject/Participant (String)",
                                        "name": "ParticipantId",
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        "shortDisplay": undefined,
                                      },
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    },
                                    "updatedField": false,
                                    "isPrimaryKey": false,
                                    "lockType": "NotLocked",
                                  }
                                }
                                index={0}
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Name and Linking Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Description
                                          </div>
                                          <textarea
                                            className="form-control domain-field-description"
                                            disabled={false}
                                            id="domainpropertiesrow-description-0"
                                            name="domainpropertiesrow-description"
                                            onChange={[Function]}
                                            placeholder="Add a description"
                                            rows={4}
                                            value=""
                                          />
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={3}
                                      >
                                        <div
                                          className="col-xs-3"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Label
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-label-0"
                                            name="domainpropertiesrow-label"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-label-0"
                                              name="domainpropertiesrow-label"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                          <div
                                            className="domain-field-label"
                                          >
                                            Import Aliases
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Import Aliases"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-importAliases-0"
                                            name="domainpropertiesrow-importAliases"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-importAliases-0"
                                              name="domainpropertiesrow-importAliases"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            URL
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="URL"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-URL-0"
                                            name="domainpropertiesrow-URL"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-URL-0"
                                              name="domainpropertiesrow-URL"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </NameAndLinkingOptions>
                              <Row
                                bsClass="row"
                                componentClass="div"
                                style={
                                  Object {
                                    "height": "20px",
                                  }
                                }
                              >
                                <div
                                  className="row"
                                  style={
                                    Object {
                                      "height": "20px",
                                    }
                                  }
                                />
                              </Row>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRowDisplay server side error on reserved field 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={7}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="7"
            >
              <DomainRow
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "defaultScale": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "modified",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": undefined,
                    "propertyURI": "test",
                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text (String)",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "shortDisplay": "String",
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "shortDisplay": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text (String)",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "shortDisplay": "String",
                      },
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                fieldError={
                  Immutable.Record {
                    "message": "'modified' is a reserved field name in 'CancerCuringStudy'",
                    "fieldName": "modified",
                    "propertyId": undefined,
                    "severity": "Error",
                    "rowIndexes": Immutable.List [],
                    "newRowIndexes": undefined,
                  }
                }
                index={1}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-1"
                  index={1}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-1"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={1}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      aria-roledescription="Draggable item. Press space bar to lift"
                      className="domain-field-row-error "
                      data-react-beautiful-dnd-drag-handle="7"
                      data-react-beautiful-dnd-draggable="7"
                      draggable={true}
                      onBlur={[Function]}
                      onDragStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={1}
                    >
                      <Row
                        bsClass="row"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-1"
                      >
                        <div
                          className="row"
                        >
                          <AdvancedSettings
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "defaultScale": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "modified",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": "test",
                                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text (String)",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "shortDisplay": "String",
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  "shortDisplay": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text (String)",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": "String",
                                  },
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            index={1}
                            label="modified"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            id="domainpropertiesrow-row-1"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={3}
                            >
                              <div
                                className="col-xs-3"
                              >
                                <Tip
                                  caption="Name"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Name
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="input"
                                      disabled={false}
                                      id="domainpropertiesrow-name-1"
                                      name="domainpropertiesrow-name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      type="text"
                                      value="modified"
                                    >
                                      <input
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-name-1"
                                        name="domainpropertiesrow-name"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        type="text"
                                        value="modified"
                                      />
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={2}
                            >
                              <div
                                className="col-xs-2"
                              >
                                <Tip
                                  caption="Data Type"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Data Type
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="select"
                                      disabled={false}
                                      id="domainpropertiesrow-type-1"
                                      name="domainpropertiesrow-type"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      value="string"
                                    >
                                      <select
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-type-1"
                                        name="domainpropertiesrow-type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        value="string"
                                      >
                                        <option
                                          key="0"
                                          value="string"
                                        >
                                          Text (String)
                                        </option>
                                        <option
                                          key="1"
                                          value="multiLine"
                                        >
                                          Multi-Line Text
                                        </option>
                                        <option
                                          key="2"
                                          value="boolean"
                                        >
                                          Boolean
                                        </option>
                                        <option
                                          key="3"
                                          value="int"
                                        >
                                          Integer
                                        </option>
                                        <option
                                          key="4"
                                          value="double"
                                        >
                                          Decimal
                                        </option>
                                        <option
                                          key="5"
                                          value="dateTime"
                                        >
                                          Date Time
                                        </option>
                                        <option
                                          key="6"
                                          value="flag"
                                        >
                                          Flag (String)
                                        </option>
                                        <option
                                          key="7"
                                          value="fileLink"
                                        >
                                          File
                                        </option>
                                        <option
                                          key="8"
                                          value="attachment"
                                        >
                                          Attachment
                                        </option>
                                        <option
                                          key="9"
                                          value="users"
                                        >
                                          User
                                        </option>
                                        <option
                                          key="10"
                                          value="ParticipantId"
                                        >
                                          Subject/Participant (String)
                                        </option>
                                        <option
                                          key="11"
                                          value="lookup"
                                        >
                                          Lookup
                                        </option>
                                      </select>
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={1}
                            >
                              <div
                                className="col-xs-1"
                              >
                                <div
                                  className="domain-field-checkbox"
                                >
                                  <Tip
                                    caption="Required?"
                                  >
                                    <OverlayTrigger
                                      defaultOverlayShown={false}
                                      delay={200}
                                      onClick={[Function]}
                                      overlay={
                                        <Tooltip
                                          bsClass="tooltip"
                                          id="tooltip"
                                          placement="right"
                                        >
                                          Required?
                                        </Tooltip>
                                      }
                                      placement="top"
                                      trigger={
                                        Array [
                                          "focus",
                                          "hover",
                                        ]
                                      }
                                    >
                                      <Checkbox
                                        bsClass="checkbox"
                                        checked={false}
                                        className="domain-field-checkbox"
                                        disabled={false}
                                        id="domainpropertiesrow-required-1"
                                        inline={false}
                                        name="domainpropertiesrow-required"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        title=""
                                      >
                                        <div
                                          className="domain-field-checkbox checkbox"
                                        >
                                          <label
                                            title=""
                                          >
                                            <input
                                              checked={false}
                                              disabled={false}
                                              id="domainpropertiesrow-required-1"
                                              name="domainpropertiesrow-required"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseOut={[Function]}
                                              onMouseOver={[Function]}
                                              type="checkbox"
                                            />
                                          </label>
                                        </div>
                                      </Checkbox>
                                    </OverlayTrigger>
                                  </Tip>
                                </div>
                              </div>
                            </Col>
                          </div>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={6}
                          >
                            <div
                              className="col-xs-6"
                            >
                              <span
                                className="domain-field-details"
                                id="domainpropertiesrow-details-1"
                              >
                                New field
                                . 
                                <b
                                  key="modified_1"
                                >
                                  Error: 'modified' is a reserved field name in 'CancerCuringStudy'
                                </b>
                              </span>
                              <div
                                className="pull-right"
                              >
                                <Tip
                                  caption="Additional Settings"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Additional Settings
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <div
                                      className="domain-field-icon"
                                      id="domainpropertiesrow-expand-1"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                    >
                                      <FontAwesomeIcon
                                        border={false}
                                        className=""
                                        fixedWidth={false}
                                        flip={null}
                                        icon={
                                          Object {
                                            "icon": Array [
                                              512,
                                              512,
                                              Array [],
                                              "f303",
                                              "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z",
                                            ],
                                            "iconName": "pencil-alt",
                                            "prefix": "fas",
                                          }
                                        }
                                        inverse={false}
                                        listItem={false}
                                        mask={null}
                                        pull={null}
                                        pulse={false}
                                        rotation={null}
                                        size={null}
                                        spin={false}
                                        symbol={false}
                                        title=""
                                        transform={null}
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="svg-inline--fa fa-pencil-alt fa-w-16 "
                                          data-icon="pencil-alt"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          style={Object {}}
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z"
                                            fill="currentColor"
                                            style={Object {}}
                                          />
                                        </svg>
                                      </FontAwesomeIcon>
                                    </div>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "defaultScale": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "modified",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": undefined,
                                  "propertyURI": "test",
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text (String)",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": "String",
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    "shortDisplay": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Text (String)",
                                      "name": "string",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": "String",
                                    },
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={1}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                            >
                              <TextFieldOptions
                                index={1}
                                label="Text Options"
                                lockType="NotLocked"
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Text Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded "
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded  row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Max Text Character Count
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Max Text Length"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        className="domain-text-options-col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="domain-text-options-col col-xs-12"
                                        >
                                          <input
                                            checked={true}
                                            className="domain-text-options-radio1 domain-field-float-left"
                                            disabled={false}
                                            id="domainpropertiesrow-maxLength-1"
                                            name="domainpropertiesrow-maxLength"
                                            onChange={[Function]}
                                            type="radio"
                                            value="maxLength"
                                          />
                                          <div
                                            className="domain-text-label"
                                          >
                                            Allow max character count
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <input
                                            checked={false}
                                            className="domain-text-options-radio2 domain-field-float-left"
                                            id="domainpropertiesrow-customLength-1"
                                            name="domainpropertiesrow-customLength"
                                            onChange={[Function]}
                                            type="radio"
                                            value="customLength"
                                          />
                                          <span
                                            className="domain-text-options-length domain-field-float-left domain-text-label"
                                          >
                                            Set character count to
                                          </span>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={true}
                                            id="domainpropertiesrow-scale-1"
                                            name="domainpropertiesrow-scale"
                                            onChange={[Function]}
                                            style={
                                              Object {
                                                "width": "60px",
                                              }
                                            }
                                            type="text"
                                            value={4000}
                                          >
                                            <input
                                              className="form-control"
                                              disabled={true}
                                              id="domainpropertiesrow-scale-1"
                                              name="domainpropertiesrow-scale"
                                              onChange={[Function]}
                                              style={
                                                Object {
                                                  "width": "60px",
                                                }
                                              }
                                              type="text"
                                              value={4000}
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </TextFieldOptions>
                              <NameAndLinkingOptions
                                field={
                                  Immutable.Record {
                                    "conceptURI": undefined,
                                    "defaultScale": undefined,
                                    "description": undefined,
                                    "dimension": undefined,
                                    "excludeFromShifting": false,
                                    "format": undefined,
                                    "hidden": false,
                                    "importAliases": undefined,
                                    "label": undefined,
                                    "lookupContainer": undefined,
                                    "lookupQuery": undefined,
                                    "lookupSchema": undefined,
                                    "measure": undefined,
                                    "mvEnabled": false,
                                    "name": "modified",
                                    "PHI": undefined,
                                    "primaryKey": undefined,
                                    "propertyId": undefined,
                                    "propertyURI": "test",
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    "recommendedVariable": false,
                                    "required": false,
                                    "scale": undefined,
                                    "URL": undefined,
                                    "shownInDetailsView": true,
                                    "shownInInsertView": true,
                                    "shownInUpdateView": true,
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Text (String)",
                                      "name": "string",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": "String",
                                    },
                                    "lookupQueryValue": undefined,
                                    "lookupType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Lookup",
                                      "name": "lookup",
                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                      "shortDisplay": undefined,
                                    },
                                    "original": Object {
                                      "dataType": Immutable.Record {
                                        "conceptURI": undefined,
                                        "display": "Text (String)",
                                        "name": "string",
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        "shortDisplay": "String",
                                      },
                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    },
                                    "updatedField": false,
                                    "isPrimaryKey": false,
                                    "lockType": "NotLocked",
                                  }
                                }
                                index={1}
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Name and Linking Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Description
                                          </div>
                                          <textarea
                                            className="form-control domain-field-description"
                                            disabled={false}
                                            id="domainpropertiesrow-description-1"
                                            name="domainpropertiesrow-description"
                                            onChange={[Function]}
                                            placeholder="Add a description"
                                            rows={4}
                                            value=""
                                          />
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={3}
                                      >
                                        <div
                                          className="col-xs-3"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Label
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-label-1"
                                            name="domainpropertiesrow-label"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-label-1"
                                              name="domainpropertiesrow-label"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                          <div
                                            className="domain-field-label"
                                          >
                                            Import Aliases
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Import Aliases"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-importAliases-1"
                                            name="domainpropertiesrow-importAliases"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-importAliases-1"
                                              name="domainpropertiesrow-importAliases"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            URL
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="URL"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-URL-1"
                                            name="domainpropertiesrow-URL"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-URL-1"
                                              name="domainpropertiesrow-URL"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </NameAndLinkingOptions>
                              <Row
                                bsClass="row"
                                componentClass="div"
                                style={
                                  Object {
                                    "height": "20px",
                                  }
                                }
                              >
                                <div
                                  className="row"
                                  style={
                                    Object {
                                      "height": "20px",
                                    }
                                  }
                                />
                              </Row>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRowDisplay string field test 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={1}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="1"
            >
              <DomainRow
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "defaultScale": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "stringField",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": 1,
                    "propertyURI": "test",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text (String)",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "shortDisplay": "String",
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "shortDisplay": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text (String)",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "shortDisplay": "String",
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                index={1}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-1"
                  index={1}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-1"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={1}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      aria-roledescription="Draggable item. Press space bar to lift"
                      className="domain-field-row "
                      data-react-beautiful-dnd-drag-handle="1"
                      data-react-beautiful-dnd-draggable="1"
                      draggable={true}
                      onBlur={[Function]}
                      onDragStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={1}
                    >
                      <Row
                        bsClass="row"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-1"
                      >
                        <div
                          className="row"
                        >
                          <AdvancedSettings
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "defaultScale": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "stringField",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": 1,
                                "propertyURI": "test",
                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text (String)",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "shortDisplay": "String",
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "shortDisplay": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text (String)",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": "String",
                                  },
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            index={1}
                            label="stringField"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            id="domainpropertiesrow-row-1"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={3}
                            >
                              <div
                                className="col-xs-3"
                              >
                                <Tip
                                  caption="Name"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Name
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="input"
                                      disabled={false}
                                      id="domainpropertiesrow-name-1"
                                      name="domainpropertiesrow-name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      type="text"
                                      value="stringField"
                                    >
                                      <input
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-name-1"
                                        name="domainpropertiesrow-name"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        type="text"
                                        value="stringField"
                                      />
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={2}
                            >
                              <div
                                className="col-xs-2"
                              >
                                <Tip
                                  caption="Data Type"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Data Type
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="select"
                                      disabled={false}
                                      id="domainpropertiesrow-type-1"
                                      name="domainpropertiesrow-type"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      value="string"
                                    >
                                      <select
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-type-1"
                                        name="domainpropertiesrow-type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        value="string"
                                      >
                                        <option
                                          key="0"
                                          value="string"
                                        >
                                          Text (String)
                                        </option>
                                        <option
                                          key="1"
                                          value="multiLine"
                                        >
                                          Multi-Line Text
                                        </option>
                                        <option
                                          key="2"
                                          value="flag"
                                        >
                                          Flag (String)
                                        </option>
                                        <option
                                          key="3"
                                          value="ParticipantId"
                                        >
                                          Subject/Participant (String)
                                        </option>
                                        <option
                                          key="4"
                                          value="lookup"
                                        >
                                          Lookup
                                        </option>
                                      </select>
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={1}
                            >
                              <div
                                className="col-xs-1"
                              >
                                <div
                                  className="domain-field-checkbox"
                                >
                                  <Tip
                                    caption="Required?"
                                  >
                                    <OverlayTrigger
                                      defaultOverlayShown={false}
                                      delay={200}
                                      onClick={[Function]}
                                      overlay={
                                        <Tooltip
                                          bsClass="tooltip"
                                          id="tooltip"
                                          placement="right"
                                        >
                                          Required?
                                        </Tooltip>
                                      }
                                      placement="top"
                                      trigger={
                                        Array [
                                          "focus",
                                          "hover",
                                        ]
                                      }
                                    >
                                      <Checkbox
                                        bsClass="checkbox"
                                        checked={false}
                                        className="domain-field-checkbox"
                                        disabled={false}
                                        id="domainpropertiesrow-required-1"
                                        inline={false}
                                        name="domainpropertiesrow-required"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        title=""
                                      >
                                        <div
                                          className="domain-field-checkbox checkbox"
                                        >
                                          <label
                                            title=""
                                          >
                                            <input
                                              checked={false}
                                              disabled={false}
                                              id="domainpropertiesrow-required-1"
                                              name="domainpropertiesrow-required"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseOut={[Function]}
                                              onMouseOver={[Function]}
                                              type="checkbox"
                                            />
                                          </label>
                                        </div>
                                      </Checkbox>
                                    </OverlayTrigger>
                                  </Tip>
                                </div>
                              </div>
                            </Col>
                          </div>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={6}
                          >
                            <div
                              className="col-xs-6"
                            >
                              <span
                                className="domain-field-details"
                                id="domainpropertiesrow-details-1"
                              />
                              <div
                                className="pull-right"
                              >
                                <Tip
                                  caption="Additional Settings"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Additional Settings
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <div
                                      className="domain-field-icon"
                                      id="domainpropertiesrow-expand-1"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                    >
                                      <FontAwesomeIcon
                                        border={false}
                                        className=""
                                        fixedWidth={false}
                                        flip={null}
                                        icon={
                                          Object {
                                            "icon": Array [
                                              512,
                                              512,
                                              Array [],
                                              "f303",
                                              "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z",
                                            ],
                                            "iconName": "pencil-alt",
                                            "prefix": "fas",
                                          }
                                        }
                                        inverse={false}
                                        listItem={false}
                                        mask={null}
                                        pull={null}
                                        pulse={false}
                                        rotation={null}
                                        size={null}
                                        spin={false}
                                        symbol={false}
                                        title=""
                                        transform={null}
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="svg-inline--fa fa-pencil-alt fa-w-16 "
                                          data-icon="pencil-alt"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          style={Object {}}
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z"
                                            fill="currentColor"
                                            style={Object {}}
                                          />
                                        </svg>
                                      </FontAwesomeIcon>
                                    </div>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "defaultScale": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "stringField",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": 1,
                                  "propertyURI": "test",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text (String)",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": "String",
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Text (String)",
                                      "name": "string",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": "String",
                                    },
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={1}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                            >
                              <TextFieldOptions
                                index={1}
                                label="Text Options"
                                lockType="NotLocked"
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Text Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded "
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded  row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Max Text Character Count
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Max Text Length"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        className="domain-text-options-col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="domain-text-options-col col-xs-12"
                                        >
                                          <input
                                            checked={true}
                                            className="domain-text-options-radio1 domain-field-float-left"
                                            disabled={false}
                                            id="domainpropertiesrow-maxLength-1"
                                            name="domainpropertiesrow-maxLength"
                                            onChange={[Function]}
                                            type="radio"
                                            value="maxLength"
                                          />
                                          <div
                                            className="domain-text-label"
                                          >
                                            Allow max character count
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <input
                                            checked={false}
                                            className="domain-text-options-radio2 domain-field-float-left"
                                            id="domainpropertiesrow-customLength-1"
                                            name="domainpropertiesrow-customLength"
                                            onChange={[Function]}
                                            type="radio"
                                            value="customLength"
                                          />
                                          <span
                                            className="domain-text-options-length domain-field-float-left domain-text-label"
                                          >
                                            Set character count to
                                          </span>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={true}
                                            id="domainpropertiesrow-scale-1"
                                            name="domainpropertiesrow-scale"
                                            onChange={[Function]}
                                            style={
                                              Object {
                                                "width": "60px",
                                              }
                                            }
                                            type="text"
                                            value={4000}
                                          >
                                            <input
                                              className="form-control"
                                              disabled={true}
                                              id="domainpropertiesrow-scale-1"
                                              name="domainpropertiesrow-scale"
                                              onChange={[Function]}
                                              style={
                                                Object {
                                                  "width": "60px",
                                                }
                                              }
                                              type="text"
                                              value={4000}
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </TextFieldOptions>
                              <NameAndLinkingOptions
                                field={
                                  Immutable.Record {
                                    "conceptURI": undefined,
                                    "defaultScale": undefined,
                                    "description": undefined,
                                    "dimension": undefined,
                                    "excludeFromShifting": false,
                                    "format": undefined,
                                    "hidden": false,
                                    "importAliases": undefined,
                                    "label": undefined,
                                    "lookupContainer": undefined,
                                    "lookupQuery": undefined,
                                    "lookupSchema": undefined,
                                    "measure": undefined,
                                    "mvEnabled": false,
                                    "name": "stringField",
                                    "PHI": undefined,
                                    "primaryKey": undefined,
                                    "propertyId": 1,
                                    "propertyURI": "test",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "recommendedVariable": false,
                                    "required": false,
                                    "scale": undefined,
                                    "URL": undefined,
                                    "shownInDetailsView": true,
                                    "shownInInsertView": true,
                                    "shownInUpdateView": true,
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Text (String)",
                                      "name": "string",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": "String",
                                    },
                                    "lookupQueryValue": undefined,
                                    "lookupType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Lookup",
                                      "name": "lookup",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": undefined,
                                    },
                                    "original": Object {
                                      "dataType": Immutable.Record {
                                        "conceptURI": undefined,
                                        "display": "Text (String)",
                                        "name": "string",
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        "shortDisplay": "String",
                                      },
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    },
                                    "updatedField": false,
                                    "isPrimaryKey": false,
                                    "lockType": "NotLocked",
                                  }
                                }
                                index={1}
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Name and Linking Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Description
                                          </div>
                                          <textarea
                                            className="form-control domain-field-description"
                                            disabled={false}
                                            id="domainpropertiesrow-description-1"
                                            name="domainpropertiesrow-description"
                                            onChange={[Function]}
                                            placeholder="Add a description"
                                            rows={4}
                                            value=""
                                          />
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={3}
                                      >
                                        <div
                                          className="col-xs-3"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Label
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-label-1"
                                            name="domainpropertiesrow-label"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-label-1"
                                              name="domainpropertiesrow-label"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                          <div
                                            className="domain-field-label"
                                          >
                                            Import Aliases
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Import Aliases"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-importAliases-1"
                                            name="domainpropertiesrow-importAliases"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-importAliases-1"
                                              name="domainpropertiesrow-importAliases"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            URL
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="URL"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-URL-1"
                                            name="domainpropertiesrow-URL"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-URL-1"
                                              name="domainpropertiesrow-URL"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </NameAndLinkingOptions>
                              <Row
                                bsClass="row"
                                componentClass="div"
                                style={
                                  Object {
                                    "height": "20px",
                                  }
                                }
                              >
                                <div
                                  className="row"
                                  style={
                                    Object {
                                      "height": "20px",
                                    }
                                  }
                                />
                              </Row>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRowDisplay with empty domain form 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={0}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="0"
            >
              <DomainRow
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "defaultScale": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": undefined,
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "rangeURI": undefined,
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text (String)",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "shortDisplay": "String",
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "shortDisplay": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text (String)",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "shortDisplay": "String",
                      },
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                index={1}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-1"
                  index={1}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-1"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={1}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      aria-roledescription="Draggable item. Press space bar to lift"
                      className="domain-field-row "
                      data-react-beautiful-dnd-drag-handle="0"
                      data-react-beautiful-dnd-draggable="0"
                      draggable={true}
                      onBlur={[Function]}
                      onDragStart={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchStart={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={1}
                    >
                      <Row
                        bsClass="row"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-1"
                      >
                        <div
                          className="row"
                        >
                          <AdvancedSettings
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "defaultScale": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": undefined,
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "rangeURI": undefined,
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text (String)",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "shortDisplay": "String",
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": undefined,
                                  "shortDisplay": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text (String)",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": "String",
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            index={1}
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            id="domainpropertiesrow-row-1"
                          >
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={3}
                            >
                              <div
                                className="col-xs-3"
                              >
                                <Tip
                                  caption="Name"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Name
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="input"
                                      disabled={false}
                                      id="domainpropertiesrow-name-1"
                                      name="domainpropertiesrow-name"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      type="text"
                                      value=""
                                    >
                                      <input
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-name-1"
                                        name="domainpropertiesrow-name"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        type="text"
                                        value=""
                                      />
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={2}
                            >
                              <div
                                className="col-xs-2"
                              >
                                <Tip
                                  caption="Data Type"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Data Type
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <FormControl
                                      bsClass="form-control"
                                      componentClass="select"
                                      disabled={false}
                                      id="domainpropertiesrow-type-1"
                                      name="domainpropertiesrow-type"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      value="string"
                                    >
                                      <select
                                        className="form-control"
                                        disabled={false}
                                        id="domainpropertiesrow-type-1"
                                        name="domainpropertiesrow-type"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        value="string"
                                      >
                                        <option
                                          key="0"
                                          value="string"
                                        >
                                          Text (String)
                                        </option>
                                        <option
                                          key="1"
                                          value="multiLine"
                                        >
                                          Multi-Line Text
                                        </option>
                                        <option
                                          key="2"
                                          value="boolean"
                                        >
                                          Boolean
                                        </option>
                                        <option
                                          key="3"
                                          value="int"
                                        >
                                          Integer
                                        </option>
                                        <option
                                          key="4"
                                          value="double"
                                        >
                                          Decimal
                                        </option>
                                        <option
                                          key="5"
                                          value="dateTime"
                                        >
                                          Date Time
                                        </option>
                                        <option
                                          key="6"
                                          value="flag"
                                        >
                                          Flag (String)
                                        </option>
                                        <option
                                          key="7"
                                          value="fileLink"
                                        >
                                          File
                                        </option>
                                        <option
                                          key="8"
                                          value="attachment"
                                        >
                                          Attachment
                                        </option>
                                        <option
                                          key="9"
                                          value="users"
                                        >
                                          User
                                        </option>
                                        <option
                                          key="10"
                                          value="ParticipantId"
                                        >
                                          Subject/Participant (String)
                                        </option>
                                        <option
                                          key="11"
                                          value="lookup"
                                        >
                                          Lookup
                                        </option>
                                      </select>
                                    </FormControl>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              componentClass="div"
                              xs={1}
                            >
                              <div
                                className="col-xs-1"
                              >
                                <div
                                  className="domain-field-checkbox"
                                >
                                  <Tip
                                    caption="Required?"
                                  >
                                    <OverlayTrigger
                                      defaultOverlayShown={false}
                                      delay={200}
                                      onClick={[Function]}
                                      overlay={
                                        <Tooltip
                                          bsClass="tooltip"
                                          id="tooltip"
                                          placement="right"
                                        >
                                          Required?
                                        </Tooltip>
                                      }
                                      placement="top"
                                      trigger={
                                        Array [
                                          "focus",
                                          "hover",
                                        ]
                                      }
                                    >
                                      <Checkbox
                                        bsClass="checkbox"
                                        checked={false}
                                        className="domain-field-checkbox"
                                        disabled={false}
                                        id="domainpropertiesrow-required-1"
                                        inline={false}
                                        name="domainpropertiesrow-required"
                                        onBlur={[Function]}
                                        onChange={[Function]}
                                        onClick={[Function]}
                                        onFocus={[Function]}
                                        onMouseOut={[Function]}
                                        onMouseOver={[Function]}
                                        title=""
                                      >
                                        <div
                                          className="domain-field-checkbox checkbox"
                                        >
                                          <label
                                            title=""
                                          >
                                            <input
                                              checked={false}
                                              disabled={false}
                                              id="domainpropertiesrow-required-1"
                                              name="domainpropertiesrow-required"
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onMouseOut={[Function]}
                                              onMouseOver={[Function]}
                                              type="checkbox"
                                            />
                                          </label>
                                        </div>
                                      </Checkbox>
                                    </OverlayTrigger>
                                  </Tip>
                                </div>
                              </div>
                            </Col>
                          </div>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={6}
                          >
                            <div
                              className="col-xs-6"
                            >
                              <span
                                className="domain-field-details"
                                id="domainpropertiesrow-details-1"
                              >
                                New field
                              </span>
                              <div
                                className="pull-right"
                              >
                                <Tip
                                  caption="Additional Settings"
                                >
                                  <OverlayTrigger
                                    defaultOverlayShown={false}
                                    delay={200}
                                    onClick={[Function]}
                                    overlay={
                                      <Tooltip
                                        bsClass="tooltip"
                                        id="tooltip"
                                        placement="right"
                                      >
                                        Additional Settings
                                      </Tooltip>
                                    }
                                    placement="top"
                                    trigger={
                                      Array [
                                        "focus",
                                        "hover",
                                      ]
                                    }
                                  >
                                    <div
                                      className="domain-field-icon"
                                      id="domainpropertiesrow-expand-1"
                                      onBlur={[Function]}
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                    >
                                      <FontAwesomeIcon
                                        border={false}
                                        className=""
                                        fixedWidth={false}
                                        flip={null}
                                        icon={
                                          Object {
                                            "icon": Array [
                                              512,
                                              512,
                                              Array [],
                                              "f303",
                                              "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z",
                                            ],
                                            "iconName": "pencil-alt",
                                            "prefix": "fas",
                                          }
                                        }
                                        inverse={false}
                                        listItem={false}
                                        mask={null}
                                        pull={null}
                                        pulse={false}
                                        rotation={null}
                                        size={null}
                                        spin={false}
                                        symbol={false}
                                        title=""
                                        transform={null}
                                      >
                                        <svg
                                          aria-hidden="true"
                                          className="svg-inline--fa fa-pencil-alt fa-w-16 "
                                          data-icon="pencil-alt"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          style={Object {}}
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z"
                                            fill="currentColor"
                                            style={Object {}}
                                          />
                                        </svg>
                                      </FontAwesomeIcon>
                                    </div>
                                  </OverlayTrigger>
                                </Tip>
                              </div>
                            </div>
                          </Col>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "defaultScale": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": undefined,
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": undefined,
                                  "propertyURI": undefined,
                                  "rangeURI": undefined,
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text (String)",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "shortDisplay": "String",
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": undefined,
                                    "shortDisplay": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Text (String)",
                                      "name": "string",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": "String",
                                    },
                                    "rangeURI": undefined,
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={1}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                            >
                              <TextFieldOptions
                                index={1}
                                label="Text Options"
                                lockType="NotLocked"
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Text Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded "
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded  row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Max Text Character Count
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Max Text Length"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        className="domain-text-options-col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="domain-text-options-col col-xs-12"
                                        >
                                          <input
                                            checked={true}
                                            className="domain-text-options-radio1 domain-field-float-left"
                                            disabled={false}
                                            id="domainpropertiesrow-maxLength-1"
                                            name="domainpropertiesrow-maxLength"
                                            onChange={[Function]}
                                            type="radio"
                                            value="maxLength"
                                          />
                                          <div
                                            className="domain-text-label"
                                          >
                                            Allow max character count
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <input
                                            checked={false}
                                            className="domain-text-options-radio2 domain-field-float-left"
                                            id="domainpropertiesrow-customLength-1"
                                            name="domainpropertiesrow-customLength"
                                            onChange={[Function]}
                                            type="radio"
                                            value="customLength"
                                          />
                                          <span
                                            className="domain-text-options-length domain-field-float-left domain-text-label"
                                          >
                                            Set character count to
                                          </span>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={true}
                                            id="domainpropertiesrow-scale-1"
                                            name="domainpropertiesrow-scale"
                                            onChange={[Function]}
                                            style={
                                              Object {
                                                "width": "60px",
                                              }
                                            }
                                            type="text"
                                            value={4000}
                                          >
                                            <input
                                              className="form-control"
                                              disabled={true}
                                              id="domainpropertiesrow-scale-1"
                                              name="domainpropertiesrow-scale"
                                              onChange={[Function]}
                                              style={
                                                Object {
                                                  "width": "60px",
                                                }
                                              }
                                              type="text"
                                              value={4000}
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </TextFieldOptions>
                              <NameAndLinkingOptions
                                field={
                                  Immutable.Record {
                                    "conceptURI": undefined,
                                    "defaultScale": undefined,
                                    "description": undefined,
                                    "dimension": undefined,
                                    "excludeFromShifting": false,
                                    "format": undefined,
                                    "hidden": false,
                                    "importAliases": undefined,
                                    "label": undefined,
                                    "lookupContainer": undefined,
                                    "lookupQuery": undefined,
                                    "lookupSchema": undefined,
                                    "measure": undefined,
                                    "mvEnabled": false,
                                    "name": undefined,
                                    "PHI": undefined,
                                    "primaryKey": undefined,
                                    "propertyId": undefined,
                                    "propertyURI": undefined,
                                    "rangeURI": undefined,
                                    "recommendedVariable": false,
                                    "required": false,
                                    "scale": undefined,
                                    "URL": undefined,
                                    "shownInDetailsView": true,
                                    "shownInInsertView": true,
                                    "shownInUpdateView": true,
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Text (String)",
                                      "name": "string",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "shortDisplay": "String",
                                    },
                                    "lookupQueryValue": undefined,
                                    "lookupType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Lookup",
                                      "name": "lookup",
                                      "rangeURI": undefined,
                                      "shortDisplay": undefined,
                                    },
                                    "original": Object {
                                      "dataType": Immutable.Record {
                                        "conceptURI": undefined,
                                        "display": "Text (String)",
                                        "name": "string",
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        "shortDisplay": "String",
                                      },
                                      "rangeURI": undefined,
                                    },
                                    "updatedField": false,
                                    "isPrimaryKey": false,
                                    "lockType": "NotLocked",
                                  }
                                }
                                index={1}
                                onChange={[Function]}
                              >
                                <div>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={12}
                                      >
                                        <div
                                          className="col-xs-12"
                                        >
                                          <div
                                            className="domain-field-section-heading"
                                          >
                                            Name and Linking Options
                                          </div>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Description
                                          </div>
                                          <textarea
                                            className="form-control domain-field-description"
                                            disabled={false}
                                            id="domainpropertiesrow-description-1"
                                            name="domainpropertiesrow-description"
                                            onChange={[Function]}
                                            placeholder="Add a description"
                                            rows={4}
                                            value=""
                                          />
                                        </div>
                                      </Col>
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={3}
                                      >
                                        <div
                                          className="col-xs-3"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            Label
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-label-1"
                                            name="domainpropertiesrow-label"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-label-1"
                                              name="domainpropertiesrow-label"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                          <div
                                            className="domain-field-label"
                                          >
                                            Import Aliases
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="Import Aliases"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-importAliases-1"
                                            name="domainpropertiesrow-importAliases"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-importAliases-1"
                                              name="domainpropertiesrow-importAliases"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                  <Row
                                    bsClass="row"
                                    className="domain-row-expanded"
                                    componentClass="div"
                                  >
                                    <div
                                      className="domain-row-expanded row"
                                    >
                                      <Col
                                        bsClass="col"
                                        componentClass="div"
                                        xs={5}
                                      >
                                        <div
                                          className="col-xs-5"
                                        >
                                          <div
                                            className="domain-field-label"
                                          >
                                            URL
                                            <LabelHelpTip
                                              body={[Function]}
                                              title="URL"
                                            >
                                              <span
                                                className="label-help-target"
                                                onMouseOut={[Function]}
                                                onMouseOver={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  border={false}
                                                  className="label-help-icon"
                                                  fixedWidth={false}
                                                  flip={null}
                                                  icon={
                                                    Object {
                                                      "icon": Array [
                                                        512,
                                                        512,
                                                        Array [],
                                                        "f059",
                                                        "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                      ],
                                                      "iconName": "question-circle",
                                                      "prefix": "fas",
                                                    }
                                                  }
                                                  inverse={false}
                                                  listItem={false}
                                                  mask={null}
                                                  pull={null}
                                                  pulse={false}
                                                  rotation={null}
                                                  size={null}
                                                  spin={false}
                                                  symbol={false}
                                                  title=""
                                                  transform={null}
                                                >
                                                  <svg
                                                    aria-hidden="true"
                                                    className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                    data-icon="question-circle"
                                                    data-prefix="fas"
                                                    focusable="false"
                                                    role="img"
                                                    style={Object {}}
                                                    viewBox="0 0 512 512"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                      fill="currentColor"
                                                      style={Object {}}
                                                    />
                                                  </svg>
                                                </FontAwesomeIcon>
                                                <Overlay
                                                  animation={[Function]}
                                                  placement="right"
                                                  rootClose={false}
                                                  show={false}
                                                  target={
                                                    <span
                                                      class="label-help-target"
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                        />
                                                      </svg>
                                                    </span>
                                                  }
                                                >
                                                  <Overlay
                                                    placement="right"
                                                    rootClose={false}
                                                    show={false}
                                                    target={
                                                      <span
                                                        class="label-help-target"
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                          />
                                                        </svg>
                                                      </span>
                                                    }
                                                    transition={[Function]}
                                                  />
                                                </Overlay>
                                              </span>
                                            </LabelHelpTip>
                                          </div>
                                          <FormControl
                                            bsClass="form-control"
                                            componentClass="input"
                                            disabled={false}
                                            id="domainpropertiesrow-URL-1"
                                            name="domainpropertiesrow-URL"
                                            onChange={[Function]}
                                            type="text"
                                            value=""
                                          >
                                            <input
                                              className="form-control"
                                              disabled={false}
                                              id="domainpropertiesrow-URL-1"
                                              name="domainpropertiesrow-URL"
                                              onChange={[Function]}
                                              type="text"
                                              value=""
                                            />
                                          </FormControl>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </div>
                              </NameAndLinkingOptions>
                              <Row
                                bsClass="row"
                                componentClass="div"
                                style={
                                  Object {
                                    "height": "20px",
                                  }
                                }
                              >
                                <div
                                  className="row"
                                  style={
                                    Object {
                                      "height": "20px",
                                    }
                                  }
                                />
                              </Row>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;
