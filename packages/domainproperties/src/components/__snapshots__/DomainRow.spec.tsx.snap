// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DomainRow client side warning on field 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={6}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="6"
            >
              <DomainRow
                availableTypes={
                  Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Multi-Line Text",
                      "name": "multiLine",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Boolean",
                      "name": "boolean",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": "xsd:boolean",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Decimal",
                      "name": "double",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                      "alternateRangeURI": "xsd:double",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": "http://www.labkey.org/exp/xml#flag",
                      "display": "Flag",
                      "name": "flag",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "File",
                      "name": "fileLink",
                      "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "User",
                      "name": "users",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": "core",
                      "lookupQuery": "users",
                    },
                    Immutable.Record {
                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                      "display": "Subject/Participant",
                      "name": "ParticipantId",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                  ]
                }
                defaultDefaultValueType="FIXED_EDITABLE"
                defaultValueOptions={
                  Immutable.List [
                    "FIXED_EDITABLE",
                    "LAST_ENTERED",
                    "FIXED_NON_EDITABLE",
                  ]
                }
                dragging={false}
                expandTransition={300}
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "#ColumnAwesome",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": undefined,
                    "propertyURI": "test",
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Attachment",
                        "name": "attachment",
                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                fieldError={
                  Immutable.Record {
                    "message": "SQL queries, R scripts, and other code are easiest to write when field names only contain combination of letters, numbers, and underscores, and start with a letter or underscore.",
                    "fieldName": "#ColumnAwesome",
                    "propertyId": undefined,
                    "severity": "Warning",
                    "rowIndexes": Immutable.List [],
                    "newRowIndexes": undefined,
                  }
                }
                helpNoun="domain"
                index={1}
                isDragDisabled={false}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-1"
                  index={1}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-1"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={1}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      className="domain-field-row domain-row-border-warning"
                      data-react-beautiful-dnd-draggable="6"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={1}
                    >
                      <Row
                        bsClass="row"
                        className="domain-row-container"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-1"
                      >
                        <div
                          className="domain-row-container row"
                        >
                          <AdvancedSettings
                            defaultDefaultValueType="FIXED_EDITABLE"
                            defaultValueOptions={
                              Immutable.List [
                                "FIXED_EDITABLE",
                                "LAST_ENTERED",
                                "FIXED_NON_EDITABLE",
                              ]
                            }
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "#ColumnAwesome",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": "test",
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Attachment",
                                  "name": "attachment",
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Attachment",
                                    "name": "attachment",
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            helpNoun="domain"
                            index={1}
                            label="#ColumnAwesome"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            aria-roledescription="Draggable item. Press space bar to lift"
                            className="domain-row-handle"
                            data-react-beautiful-dnd-drag-handle="6"
                            draggable={false}
                            onBlur={[Function]}
                            onDragStart={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              color="#999999"
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    320,
                                    512,
                                    Array [],
                                    "f58e",
                                    "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                  ],
                                  "iconName": "grip-vertical",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size="lg"
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                color="#999999"
                                data-icon="grip-vertical"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 320 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </div>
                          <div
                            className="domain-row-main"
                          >
                            <Col
                              bsClass="col"
                              className="domain-row-base-fields"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-row-base-fields col-xs-6"
                              >
                                <div
                                  id="domainpropertiesrow-row-1"
                                >
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}
                                  >
                                    <div
                                      className="col-xs-6"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="input"
                                        disabled={false}
                                        id="domainpropertiesrow-name-1"
                                        name="domainpropertiesrow-name"
                                        onChange={[Function]}
                                        type="text"
                                        value="#ColumnAwesome"
                                      >
                                        <input
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-name-1"
                                          name="domainpropertiesrow-name"
                                          onChange={[Function]}
                                          type="text"
                                          value="#ColumnAwesome"
                                        />
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}
                                  >
                                    <div
                                      className="col-xs-4"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="select"
                                        disabled={false}
                                        id="domainpropertiesrow-type-1"
                                        name="domainpropertiesrow-type"
                                        onChange={[Function]}
                                        value="attachment"
                                      >
                                        <select
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-type-1"
                                          name="domainpropertiesrow-type"
                                          onChange={[Function]}
                                          value="attachment"
                                        >
                                          <option
                                            key="0"
                                            value="string"
                                          >
                                            Text
                                          </option>
                                          <option
                                            key="1"
                                            value="multiLine"
                                          >
                                            Multi-Line Text
                                          </option>
                                          <option
                                            key="2"
                                            value="boolean"
                                          >
                                            Boolean
                                          </option>
                                          <option
                                            key="3"
                                            value="int"
                                          >
                                            Integer
                                          </option>
                                          <option
                                            key="4"
                                            value="double"
                                          >
                                            Decimal
                                          </option>
                                          <option
                                            key="5"
                                            value="dateTime"
                                          >
                                            Date Time
                                          </option>
                                          <option
                                            key="6"
                                            value="flag"
                                          >
                                            Flag
                                          </option>
                                          <option
                                            key="7"
                                            value="fileLink"
                                          >
                                            File
                                          </option>
                                          <option
                                            key="8"
                                            value="attachment"
                                          >
                                            Attachment
                                          </option>
                                          <option
                                            key="9"
                                            value="users"
                                          >
                                            User
                                          </option>
                                          <option
                                            key="10"
                                            value="ParticipantId"
                                          >
                                            Subject/Participant
                                          </option>
                                          <option
                                            key="11"
                                            value="lookup"
                                          >
                                            Lookup
                                          </option>
                                        </select>
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}
                                  >
                                    <div
                                      className="col-xs-2"
                                    >
                                      <div
                                        className="domain-field-checkbox-container"
                                      >
                                        <Checkbox
                                          bsClass="checkbox"
                                          checked={false}
                                          className="domain-field-checkbox"
                                          disabled={false}
                                          id="domainpropertiesrow-required-1"
                                          inline={false}
                                          name="domainpropertiesrow-required"
                                          onChange={[Function]}
                                          title=""
                                        >
                                          <div
                                            className="domain-field-checkbox checkbox"
                                          >
                                            <label
                                              title=""
                                            >
                                              <input
                                                checked={false}
                                                disabled={false}
                                                id="domainpropertiesrow-required-1"
                                                name="domainpropertiesrow-required"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </label>
                                          </div>
                                        </Checkbox>
                                      </div>
                                    </div>
                                  </Col>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="domain-field-details-container"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-field-details-container col-xs-6"
                              >
                                <div
                                  className="domain-field-details"
                                  id="domainpropertiesrow-details-1"
                                >
                                  New field
                                  . 
                                  <b
                                    key="#ColumnAwesome_1"
                                  >
                                    Warning: SQL queries, R scripts, and other code are easiest to write when field names only contain combination of letters, numbers, and underscores, and start with a letter or underscore.
                                  </b>
                                </div>
                                <div
                                  className="domain-field-buttons"
                                >
                                  <div
                                    className="domain-field-icon"
                                    id="domainpropertiesrow-expand-1"
                                    onClick={[Function]}
                                  >
                                    <FontAwesomeIcon
                                      border={false}
                                      className=""
                                      color="#999999"
                                      fixedWidth={false}
                                      flip={null}
                                      icon={
                                        Object {
                                          "icon": Array [
                                            448,
                                            512,
                                            Array [],
                                            "f0fe",
                                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                          ],
                                          "iconName": "plus-square",
                                          "prefix": "fas",
                                        }
                                      }
                                      inverse={false}
                                      listItem={false}
                                      mask={null}
                                      pull={null}
                                      pulse={false}
                                      rotation={null}
                                      size="lg"
                                      spin={false}
                                      symbol={false}
                                      title=""
                                      transform={null}
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                        color="#999999"
                                        data-icon="plus-square"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        style={Object {}}
                                        viewBox="0 0 448 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                          fill="currentColor"
                                          style={Object {}}
                                        />
                                      </svg>
                                    </FontAwesomeIcon>
                                  </div>
                                </div>
                              </div>
                            </Col>
                          </div>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        onExiting={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "conditionalFormats": Immutable.List [],
                                  "defaultScale": undefined,
                                  "defaultValueType": undefined,
                                  "defaultValue": undefined,
                                  "defaultDisplayValue": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "lookupValidator": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "#ColumnAwesome",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": undefined,
                                  "propertyURI": "test",
                                  "propertyValidators": Immutable.List [],
                                  "rangeValidators": Immutable.List [],
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  "regexValidators": Immutable.List [],
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "visible": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Attachment",
                                    "name": "attachment",
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Attachment",
                                      "name": "attachment",
                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                      "alternateRangeURI": undefined,
                                      "shortDisplay": undefined,
                                      "lookupSchema": undefined,
                                      "lookupQuery": undefined,
                                    },
                                    "rangeURI": undefined,
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={1}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                              setDragDisabled={[Function]}
                            >
                              <div
                                className="domain-row-container"
                              >
                                <div
                                  className="domain-row-handle"
                                />
                                <div
                                  className="domain-row-container-expanded"
                                >
                                  <NameAndLinkingOptions
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "#ColumnAwesome",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": undefined,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Attachment",
                                          "name": "attachment",
                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Attachment",
                                            "name": "attachment",
                                            "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                            "alternateRangeURI": undefined,
                                            "shortDisplay": undefined,
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": undefined,
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={1}
                                    onChange={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Name and Linking Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <div>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={5}
                                            >
                                              <div
                                                className="col-xs-5"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Description
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  className="form-control domain-field-textarea"
                                                  componentClass="textarea"
                                                  disabled={false}
                                                  id="domainpropertiesrow-description-1"
                                                  name="domainpropertiesrow-description"
                                                  onChange={[Function]}
                                                  rows={4}
                                                  value=""
                                                >
                                                  <textarea
                                                    className="form-control domain-field-textarea form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-description-1"
                                                    name="domainpropertiesrow-description"
                                                    onChange={[Function]}
                                                    rows={4}
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={3}
                                            >
                                              <div
                                                className="col-xs-3"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Label
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-label-1"
                                                  name="domainpropertiesrow-label"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-label-1"
                                                    name="domainpropertiesrow-label"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Import Aliases
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Import Aliases"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-importAliases-1"
                                                  name="domainpropertiesrow-importAliases"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-importAliases-1"
                                                    name="domainpropertiesrow-importAliases"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={4}
                                            >
                                              <div
                                                className="col-xs-4"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  URL
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="URL"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-URL-1"
                                                  name="domainpropertiesrow-URL"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-URL-1"
                                                    name="domainpropertiesrow-URL"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                          </div>
                                        </div>
                                      </Row>
                                    </div>
                                  </NameAndLinkingOptions>
                                  <ConditionalFormattingAndValidation
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "#ColumnAwesome",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": undefined,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Attachment",
                                          "name": "attachment",
                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Attachment",
                                            "name": "attachment",
                                            "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                            "alternateRangeURI": undefined,
                                            "shortDisplay": undefined,
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": undefined,
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={1}
                                    onChange={[Function]}
                                    setDragDisabled={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Conditional Formatting and Validation Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Conditional Format Criteria
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-conditionalFormat-1"
                                                    name="domainpropertiesrow-conditionalFormat"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-conditionalFormat-1"
                                                      name="domainpropertiesrow-conditionalFormat"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Format
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Regular Expression Validator
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Add Regex Validator"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-regexValidator-1"
                                                    name="domainpropertiesrow-regexValidator"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-regexValidator-1"
                                                      name="domainpropertiesrow-regexValidator"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Regex
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </div>
                                  </ConditionalFormattingAndValidation>
                                </div>
                              </div>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRow date time field 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={3}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="3"
            >
              <DomainRow
                availableTypes={
                  Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Multi-Line Text",
                      "name": "multiLine",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Boolean",
                      "name": "boolean",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": "xsd:boolean",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Decimal",
                      "name": "double",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                      "alternateRangeURI": "xsd:double",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": "http://www.labkey.org/exp/xml#flag",
                      "display": "Flag",
                      "name": "flag",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "File",
                      "name": "fileLink",
                      "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "User",
                      "name": "users",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": "core",
                      "lookupQuery": "users",
                    },
                    Immutable.Record {
                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                      "display": "Subject/Participant",
                      "name": "ParticipantId",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                  ]
                }
                defaultDefaultValueType="FIXED_EDITABLE"
                defaultValueOptions={
                  Immutable.List [
                    "FIXED_EDITABLE",
                    "LAST_ENTERED",
                    "FIXED_NON_EDITABLE",
                  ]
                }
                dragging={false}
                expandTransition={300}
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "dateTimeField",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": 1,
                    "propertyURI": "test",
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Date Time",
                        "name": "dateTime",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                        "alternateRangeURI": "xsd:dateTime",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                helpNoun="domain"
                index={0}
                isDragDisabled={false}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-0"
                  index={0}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-0"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={0}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      className="domain-field-row domain-row-border-default"
                      data-react-beautiful-dnd-draggable="3"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={0}
                    >
                      <Row
                        bsClass="row"
                        className="domain-row-container"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-0"
                      >
                        <div
                          className="domain-row-container row"
                        >
                          <AdvancedSettings
                            defaultDefaultValueType="FIXED_EDITABLE"
                            defaultValueOptions={
                              Immutable.List [
                                "FIXED_EDITABLE",
                                "LAST_ENTERED",
                                "FIXED_NON_EDITABLE",
                              ]
                            }
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "dateTimeField",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": 1,
                                "propertyURI": "test",
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            helpNoun="domain"
                            index={0}
                            label="dateTimeField"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            aria-roledescription="Draggable item. Press space bar to lift"
                            className="domain-row-handle"
                            data-react-beautiful-dnd-drag-handle="3"
                            draggable={false}
                            onBlur={[Function]}
                            onDragStart={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              color="#999999"
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    320,
                                    512,
                                    Array [],
                                    "f58e",
                                    "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                  ],
                                  "iconName": "grip-vertical",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size="lg"
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                color="#999999"
                                data-icon="grip-vertical"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 320 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </div>
                          <div
                            className="domain-row-main"
                          >
                            <Col
                              bsClass="col"
                              className="domain-row-base-fields"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-row-base-fields col-xs-6"
                              >
                                <div
                                  id="domainpropertiesrow-row-0"
                                >
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}
                                  >
                                    <div
                                      className="col-xs-6"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="input"
                                        disabled={false}
                                        id="domainpropertiesrow-name-0"
                                        name="domainpropertiesrow-name"
                                        onChange={[Function]}
                                        type="text"
                                        value="dateTimeField"
                                      >
                                        <input
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-name-0"
                                          name="domainpropertiesrow-name"
                                          onChange={[Function]}
                                          type="text"
                                          value="dateTimeField"
                                        />
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}
                                  >
                                    <div
                                      className="col-xs-4"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="select"
                                        disabled={false}
                                        id="domainpropertiesrow-type-0"
                                        name="domainpropertiesrow-type"
                                        onChange={[Function]}
                                        value="dateTime"
                                      >
                                        <select
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-type-0"
                                          name="domainpropertiesrow-type"
                                          onChange={[Function]}
                                          value="dateTime"
                                        >
                                          <option
                                            key="0"
                                            value="dateTime"
                                          >
                                            Date Time
                                          </option>
                                        </select>
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}
                                  >
                                    <div
                                      className="col-xs-2"
                                    >
                                      <div
                                        className="domain-field-checkbox-container"
                                      >
                                        <Checkbox
                                          bsClass="checkbox"
                                          checked={false}
                                          className="domain-field-checkbox"
                                          disabled={false}
                                          id="domainpropertiesrow-required-0"
                                          inline={false}
                                          name="domainpropertiesrow-required"
                                          onChange={[Function]}
                                          title=""
                                        >
                                          <div
                                            className="domain-field-checkbox checkbox"
                                          >
                                            <label
                                              title=""
                                            >
                                              <input
                                                checked={false}
                                                disabled={false}
                                                id="domainpropertiesrow-required-0"
                                                name="domainpropertiesrow-required"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </label>
                                          </div>
                                        </Checkbox>
                                      </div>
                                    </div>
                                  </Col>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="domain-field-details-container"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-field-details-container col-xs-6"
                              >
                                <div
                                  className="domain-field-details"
                                  id="domainpropertiesrow-details-0"
                                />
                                <div
                                  className="domain-field-buttons"
                                >
                                  <div
                                    className="domain-field-icon"
                                    id="domainpropertiesrow-expand-0"
                                    onClick={[Function]}
                                  >
                                    <FontAwesomeIcon
                                      border={false}
                                      className=""
                                      color="#999999"
                                      fixedWidth={false}
                                      flip={null}
                                      icon={
                                        Object {
                                          "icon": Array [
                                            448,
                                            512,
                                            Array [],
                                            "f0fe",
                                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                          ],
                                          "iconName": "plus-square",
                                          "prefix": "fas",
                                        }
                                      }
                                      inverse={false}
                                      listItem={false}
                                      mask={null}
                                      pull={null}
                                      pulse={false}
                                      rotation={null}
                                      size="lg"
                                      spin={false}
                                      symbol={false}
                                      title=""
                                      transform={null}
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                        color="#999999"
                                        data-icon="plus-square"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        style={Object {}}
                                        viewBox="0 0 448 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                          fill="currentColor"
                                          style={Object {}}
                                        />
                                      </svg>
                                    </FontAwesomeIcon>
                                  </div>
                                </div>
                              </div>
                            </Col>
                          </div>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        onExiting={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "conditionalFormats": Immutable.List [],
                                  "defaultScale": undefined,
                                  "defaultValueType": undefined,
                                  "defaultValue": undefined,
                                  "defaultDisplayValue": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "lookupValidator": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "dateTimeField",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": 1,
                                  "propertyURI": "test",
                                  "propertyValidators": Immutable.List [],
                                  "rangeValidators": Immutable.List [],
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "regexValidators": Immutable.List [],
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "visible": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Date Time",
                                      "name": "dateTime",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                      "alternateRangeURI": "xsd:dateTime",
                                      "shortDisplay": undefined,
                                      "lookupSchema": undefined,
                                      "lookupQuery": undefined,
                                    },
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={0}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                              setDragDisabled={[Function]}
                            >
                              <div
                                className="domain-row-container"
                              >
                                <div
                                  className="domain-row-handle"
                                />
                                <div
                                  className="domain-row-container-expanded"
                                >
                                  <DateTimeFieldOptions
                                    excludeFromShifting={false}
                                    index={0}
                                    label="Date and Time Options"
                                    lockType="NotLocked"
                                    onChange={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Date and Time Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={3}
                                          >
                                            <div
                                              className="col-xs-3"
                                            >
                                              <div
                                                className="domain-field-label"
                                              >
                                                Format for Dates
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  id="tooltip"
                                                  title="Format String"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size={null}
                                                      spin={false}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </div>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={9}
                                          >
                                            <div
                                              className="col-xs-9"
                                            />
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={3}
                                          >
                                            <div
                                              className="col-xs-3"
                                            >
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                disabled={false}
                                                id="domainpropertiesrow-format-0"
                                                name="domainpropertiesrow-format"
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="form-control"
                                                  disabled={false}
                                                  id="domainpropertiesrow-format-0"
                                                  name="domainpropertiesrow-format"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={9}
                                          >
                                            <div
                                              className="col-xs-9"
                                            />
                                          </Col>
                                        </div>
                                      </Row>
                                    </div>
                                  </DateTimeFieldOptions>
                                  <NameAndLinkingOptions
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "dateTimeField",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": 1,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Date Time",
                                          "name": "dateTime",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                          "alternateRangeURI": "xsd:dateTime",
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Date Time",
                                            "name": "dateTime",
                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                            "alternateRangeURI": "xsd:dateTime",
                                            "shortDisplay": undefined,
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={0}
                                    onChange={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Name and Linking Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <div>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={5}
                                            >
                                              <div
                                                className="col-xs-5"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Description
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  className="form-control domain-field-textarea"
                                                  componentClass="textarea"
                                                  disabled={false}
                                                  id="domainpropertiesrow-description-0"
                                                  name="domainpropertiesrow-description"
                                                  onChange={[Function]}
                                                  rows={4}
                                                  value=""
                                                >
                                                  <textarea
                                                    className="form-control domain-field-textarea form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-description-0"
                                                    name="domainpropertiesrow-description"
                                                    onChange={[Function]}
                                                    rows={4}
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={3}
                                            >
                                              <div
                                                className="col-xs-3"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Label
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-label-0"
                                                  name="domainpropertiesrow-label"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-label-0"
                                                    name="domainpropertiesrow-label"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Import Aliases
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Import Aliases"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-importAliases-0"
                                                  name="domainpropertiesrow-importAliases"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-importAliases-0"
                                                    name="domainpropertiesrow-importAliases"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={4}
                                            >
                                              <div
                                                className="col-xs-4"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  URL
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="URL"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-URL-0"
                                                  name="domainpropertiesrow-URL"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-URL-0"
                                                    name="domainpropertiesrow-URL"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                          </div>
                                        </div>
                                      </Row>
                                    </div>
                                  </NameAndLinkingOptions>
                                  <ConditionalFormattingAndValidation
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "dateTimeField",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": 1,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Date Time",
                                          "name": "dateTime",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                          "alternateRangeURI": "xsd:dateTime",
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Date Time",
                                            "name": "dateTime",
                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                            "alternateRangeURI": "xsd:dateTime",
                                            "shortDisplay": undefined,
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={0}
                                    onChange={[Function]}
                                    setDragDisabled={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Conditional Formatting and Validation Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Conditional Format Criteria
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-conditionalFormat-0"
                                                    name="domainpropertiesrow-conditionalFormat"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-conditionalFormat-0"
                                                      name="domainpropertiesrow-conditionalFormat"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Format
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Regular Expression Validator
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Add Regex Validator"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-regexValidator-0"
                                                    name="domainpropertiesrow-regexValidator"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-regexValidator-0"
                                                      name="domainpropertiesrow-regexValidator"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Regex
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                              <div
                                                className=""
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Range Expression Validator
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Add Range Validator"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-rangeValidator-0"
                                                    name="domainpropertiesrow-rangeValidator"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-rangeValidator-0"
                                                      name="domainpropertiesrow-rangeValidator"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Range
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </div>
                                  </ConditionalFormattingAndValidation>
                                </div>
                              </div>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRow decimal field 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={2}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="2"
            >
              <DomainRow
                availableTypes={
                  Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Multi-Line Text",
                      "name": "multiLine",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Boolean",
                      "name": "boolean",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": "xsd:boolean",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Decimal",
                      "name": "double",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                      "alternateRangeURI": "xsd:double",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": "http://www.labkey.org/exp/xml#flag",
                      "display": "Flag",
                      "name": "flag",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "File",
                      "name": "fileLink",
                      "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "User",
                      "name": "users",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": "core",
                      "lookupQuery": "users",
                    },
                    Immutable.Record {
                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                      "display": "Subject/Participant",
                      "name": "ParticipantId",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                  ]
                }
                defaultDefaultValueType="FIXED_EDITABLE"
                defaultValueOptions={
                  Immutable.List [
                    "FIXED_EDITABLE",
                    "LAST_ENTERED",
                    "FIXED_NON_EDITABLE",
                  ]
                }
                dragging={false}
                expandTransition={300}
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "decimalField",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": 1,
                    "propertyURI": "test",
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": true,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Decimal",
                      "name": "double",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                      "alternateRangeURI": "xsd:double",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Decimal",
                        "name": "double",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                        "alternateRangeURI": "xsd:double",
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                helpNoun="domain"
                index={2}
                isDragDisabled={false}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-2"
                  index={2}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-2"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={2}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      className="domain-field-row domain-row-border-default"
                      data-react-beautiful-dnd-draggable="2"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={2}
                    >
                      <Row
                        bsClass="row"
                        className="domain-row-container"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-2"
                      >
                        <div
                          className="domain-row-container row"
                        >
                          <AdvancedSettings
                            defaultDefaultValueType="FIXED_EDITABLE"
                            defaultValueOptions={
                              Immutable.List [
                                "FIXED_EDITABLE",
                                "LAST_ENTERED",
                                "FIXED_NON_EDITABLE",
                              ]
                            }
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "decimalField",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": 1,
                                "propertyURI": "test",
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": true,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Decimal",
                                  "name": "double",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                  "alternateRangeURI": "xsd:double",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Decimal",
                                    "name": "double",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                    "alternateRangeURI": "xsd:double",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            helpNoun="domain"
                            index={2}
                            label="decimalField"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            aria-roledescription="Draggable item. Press space bar to lift"
                            className="domain-row-handle"
                            data-react-beautiful-dnd-drag-handle="2"
                            draggable={false}
                            onBlur={[Function]}
                            onDragStart={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              color="#999999"
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    320,
                                    512,
                                    Array [],
                                    "f58e",
                                    "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                  ],
                                  "iconName": "grip-vertical",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size="lg"
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                color="#999999"
                                data-icon="grip-vertical"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 320 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </div>
                          <div
                            className="domain-row-main"
                          >
                            <Col
                              bsClass="col"
                              className="domain-row-base-fields"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-row-base-fields col-xs-6"
                              >
                                <div
                                  id="domainpropertiesrow-row-2"
                                >
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}
                                  >
                                    <div
                                      className="col-xs-6"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="input"
                                        disabled={false}
                                        id="domainpropertiesrow-name-2"
                                        name="domainpropertiesrow-name"
                                        onChange={[Function]}
                                        type="text"
                                        value="decimalField"
                                      >
                                        <input
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-name-2"
                                          name="domainpropertiesrow-name"
                                          onChange={[Function]}
                                          type="text"
                                          value="decimalField"
                                        />
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}
                                  >
                                    <div
                                      className="col-xs-4"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="select"
                                        disabled={false}
                                        id="domainpropertiesrow-type-2"
                                        name="domainpropertiesrow-type"
                                        onChange={[Function]}
                                        value="double"
                                      >
                                        <select
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-type-2"
                                          name="domainpropertiesrow-type"
                                          onChange={[Function]}
                                          value="double"
                                        >
                                          <option
                                            key="0"
                                            value="double"
                                          >
                                            Decimal
                                          </option>
                                        </select>
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}
                                  >
                                    <div
                                      className="col-xs-2"
                                    >
                                      <div
                                        className="domain-field-checkbox-container"
                                      >
                                        <Checkbox
                                          bsClass="checkbox"
                                          checked={true}
                                          className="domain-field-checkbox"
                                          disabled={false}
                                          id="domainpropertiesrow-required-2"
                                          inline={false}
                                          name="domainpropertiesrow-required"
                                          onChange={[Function]}
                                          title=""
                                        >
                                          <div
                                            className="domain-field-checkbox checkbox"
                                          >
                                            <label
                                              title=""
                                            >
                                              <input
                                                checked={true}
                                                disabled={false}
                                                id="domainpropertiesrow-required-2"
                                                name="domainpropertiesrow-required"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </label>
                                          </div>
                                        </Checkbox>
                                      </div>
                                    </div>
                                  </Col>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="domain-field-details-container"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-field-details-container col-xs-6"
                              >
                                <div
                                  className="domain-field-details"
                                  id="domainpropertiesrow-details-2"
                                />
                                <div
                                  className="domain-field-buttons"
                                >
                                  <div
                                    className="domain-field-icon"
                                    id="domainpropertiesrow-expand-2"
                                    onClick={[Function]}
                                  >
                                    <FontAwesomeIcon
                                      border={false}
                                      className=""
                                      color="#999999"
                                      fixedWidth={false}
                                      flip={null}
                                      icon={
                                        Object {
                                          "icon": Array [
                                            448,
                                            512,
                                            Array [],
                                            "f0fe",
                                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                          ],
                                          "iconName": "plus-square",
                                          "prefix": "fas",
                                        }
                                      }
                                      inverse={false}
                                      listItem={false}
                                      mask={null}
                                      pull={null}
                                      pulse={false}
                                      rotation={null}
                                      size="lg"
                                      spin={false}
                                      symbol={false}
                                      title=""
                                      transform={null}
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                        color="#999999"
                                        data-icon="plus-square"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        style={Object {}}
                                        viewBox="0 0 448 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                          fill="currentColor"
                                          style={Object {}}
                                        />
                                      </svg>
                                    </FontAwesomeIcon>
                                  </div>
                                </div>
                              </div>
                            </Col>
                          </div>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        onExiting={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "conditionalFormats": Immutable.List [],
                                  "defaultScale": undefined,
                                  "defaultValueType": undefined,
                                  "defaultValue": undefined,
                                  "defaultDisplayValue": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "lookupValidator": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "decimalField",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": 1,
                                  "propertyURI": "test",
                                  "propertyValidators": Immutable.List [],
                                  "rangeValidators": Immutable.List [],
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                  "regexValidators": Immutable.List [],
                                  "recommendedVariable": false,
                                  "required": true,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "visible": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Decimal",
                                    "name": "double",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                    "alternateRangeURI": "xsd:double",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Decimal",
                                      "name": "double",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                      "alternateRangeURI": "xsd:double",
                                      "shortDisplay": undefined,
                                      "lookupSchema": undefined,
                                      "lookupQuery": undefined,
                                    },
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={2}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                              setDragDisabled={[Function]}
                            >
                              <div
                                className="domain-row-container"
                              >
                                <div
                                  className="domain-row-handle"
                                />
                                <div
                                  className="domain-row-container-expanded"
                                >
                                  <NumericFieldOptions
                                    index={2}
                                    label="Decimal Options"
                                    lockType="NotLocked"
                                    onChange={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Decimal Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={3}
                                          >
                                            <div
                                              className="col-xs-3"
                                            >
                                              <div
                                                className="domain-field-label"
                                              >
                                                Format for Numbers
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  id="tooltip"
                                                  title="Format Strings"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size={null}
                                                      spin={false}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </div>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={2}
                                          >
                                            <div
                                              className="col-xs-2"
                                            >
                                              <div
                                                className="domain-field-label"
                                              >
                                                Default Scale Type
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={3}
                                          >
                                            <div
                                              className="col-xs-3"
                                            >
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                disabled={false}
                                                id="domainpropertiesrow-format-2"
                                                name="domainpropertiesrow-format"
                                                onChange={[Function]}
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="form-control"
                                                  disabled={false}
                                                  id="domainpropertiesrow-format-2"
                                                  name="domainpropertiesrow-format"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={2}
                                          >
                                            <div
                                              className="col-xs-2"
                                            >
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="select"
                                                disabled={false}
                                                id="domainpropertiesrow-defaultScale-2"
                                                name="domainpropertiesrow-defaultScale"
                                                onChange={[Function]}
                                              >
                                                <select
                                                  className="form-control"
                                                  disabled={false}
                                                  id="domainpropertiesrow-defaultScale-2"
                                                  name="domainpropertiesrow-defaultScale"
                                                  onChange={[Function]}
                                                >
                                                  <option
                                                    key="domainpropertiesrow-defaultScaleoption-LINEAR-2"
                                                    value="LINEAR"
                                                  >
                                                    Linear
                                                  </option>
                                                  <option
                                                    key="domainpropertiesrow-defaultScaleoption-LOG-2"
                                                    value="LOG"
                                                  >
                                                    Log
                                                  </option>
                                                </select>
                                              </FormControl>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </div>
                                  </NumericFieldOptions>
                                  <NameAndLinkingOptions
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "decimalField",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": 1,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": true,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Decimal",
                                          "name": "double",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                          "alternateRangeURI": "xsd:double",
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Decimal",
                                            "name": "double",
                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                            "alternateRangeURI": "xsd:double",
                                            "shortDisplay": undefined,
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={2}
                                    onChange={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Name and Linking Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <div>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={5}
                                            >
                                              <div
                                                className="col-xs-5"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Description
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  className="form-control domain-field-textarea"
                                                  componentClass="textarea"
                                                  disabled={false}
                                                  id="domainpropertiesrow-description-2"
                                                  name="domainpropertiesrow-description"
                                                  onChange={[Function]}
                                                  rows={4}
                                                  value=""
                                                >
                                                  <textarea
                                                    className="form-control domain-field-textarea form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-description-2"
                                                    name="domainpropertiesrow-description"
                                                    onChange={[Function]}
                                                    rows={4}
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={3}
                                            >
                                              <div
                                                className="col-xs-3"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Label
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-label-2"
                                                  name="domainpropertiesrow-label"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-label-2"
                                                    name="domainpropertiesrow-label"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Import Aliases
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Import Aliases"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-importAliases-2"
                                                  name="domainpropertiesrow-importAliases"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-importAliases-2"
                                                    name="domainpropertiesrow-importAliases"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={4}
                                            >
                                              <div
                                                className="col-xs-4"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  URL
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="URL"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-URL-2"
                                                  name="domainpropertiesrow-URL"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-URL-2"
                                                    name="domainpropertiesrow-URL"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                          </div>
                                        </div>
                                      </Row>
                                    </div>
                                  </NameAndLinkingOptions>
                                  <ConditionalFormattingAndValidation
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "decimalField",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": 1,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": true,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Decimal",
                                          "name": "double",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                          "alternateRangeURI": "xsd:double",
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Decimal",
                                            "name": "double",
                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                            "alternateRangeURI": "xsd:double",
                                            "shortDisplay": undefined,
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={2}
                                    onChange={[Function]}
                                    setDragDisabled={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Conditional Formatting and Validation Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Conditional Format Criteria
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-conditionalFormat-2"
                                                    name="domainpropertiesrow-conditionalFormat"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-conditionalFormat-2"
                                                      name="domainpropertiesrow-conditionalFormat"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Format
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Regular Expression Validator
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Add Regex Validator"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-regexValidator-2"
                                                    name="domainpropertiesrow-regexValidator"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-regexValidator-2"
                                                      name="domainpropertiesrow-regexValidator"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Regex
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                              <div
                                                className=""
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Range Expression Validator
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Add Range Validator"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-rangeValidator-2"
                                                    name="domainpropertiesrow-rangeValidator"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-rangeValidator-2"
                                                      name="domainpropertiesrow-rangeValidator"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Range
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </div>
                                  </ConditionalFormattingAndValidation>
                                </div>
                              </div>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRow participant id field 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={4}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="4"
            >
              <DomainRow
                availableTypes={
                  Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Multi-Line Text",
                      "name": "multiLine",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Boolean",
                      "name": "boolean",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": "xsd:boolean",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Decimal",
                      "name": "double",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                      "alternateRangeURI": "xsd:double",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": "http://www.labkey.org/exp/xml#flag",
                      "display": "Flag",
                      "name": "flag",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "File",
                      "name": "fileLink",
                      "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "User",
                      "name": "users",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": "core",
                      "lookupQuery": "users",
                    },
                    Immutable.Record {
                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                      "display": "Subject/Participant",
                      "name": "ParticipantId",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                  ]
                }
                defaultDefaultValueType="FIXED_EDITABLE"
                defaultValueOptions={
                  Immutable.List [
                    "FIXED_EDITABLE",
                    "LAST_ENTERED",
                    "FIXED_NON_EDITABLE",
                  ]
                }
                dragging={false}
                expandTransition={300}
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "participantField",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": 1,
                    "propertyURI": "test",
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                      "display": "Subject/Participant",
                      "name": "ParticipantId",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                        "display": "Subject/Participant",
                        "name": "ParticipantId",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                helpNoun="domain"
                index={0}
                isDragDisabled={false}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-0"
                  index={0}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-0"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={0}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      className="domain-field-row domain-row-border-default"
                      data-react-beautiful-dnd-draggable="4"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={0}
                    >
                      <Row
                        bsClass="row"
                        className="domain-row-container"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-0"
                      >
                        <div
                          className="domain-row-container row"
                        >
                          <AdvancedSettings
                            defaultDefaultValueType="FIXED_EDITABLE"
                            defaultValueOptions={
                              Immutable.List [
                                "FIXED_EDITABLE",
                                "LAST_ENTERED",
                                "FIXED_NON_EDITABLE",
                              ]
                            }
                            field={
                              Immutable.Record {
                                "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "participantField",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": 1,
                                "propertyURI": "test",
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                  "display": "Subject/Participant",
                                  "name": "ParticipantId",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                    "display": "Subject/Participant",
                                    "name": "ParticipantId",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            helpNoun="domain"
                            index={0}
                            label="participantField"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            aria-roledescription="Draggable item. Press space bar to lift"
                            className="domain-row-handle"
                            data-react-beautiful-dnd-drag-handle="4"
                            draggable={false}
                            onBlur={[Function]}
                            onDragStart={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              color="#999999"
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    320,
                                    512,
                                    Array [],
                                    "f58e",
                                    "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                  ],
                                  "iconName": "grip-vertical",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size="lg"
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                color="#999999"
                                data-icon="grip-vertical"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 320 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </div>
                          <div
                            className="domain-row-main"
                          >
                            <Col
                              bsClass="col"
                              className="domain-row-base-fields"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-row-base-fields col-xs-6"
                              >
                                <div
                                  id="domainpropertiesrow-row-0"
                                >
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}
                                  >
                                    <div
                                      className="col-xs-6"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="input"
                                        disabled={false}
                                        id="domainpropertiesrow-name-0"
                                        name="domainpropertiesrow-name"
                                        onChange={[Function]}
                                        type="text"
                                        value="participantField"
                                      >
                                        <input
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-name-0"
                                          name="domainpropertiesrow-name"
                                          onChange={[Function]}
                                          type="text"
                                          value="participantField"
                                        />
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}
                                  >
                                    <div
                                      className="col-xs-4"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="select"
                                        disabled={false}
                                        id="domainpropertiesrow-type-0"
                                        name="domainpropertiesrow-type"
                                        onChange={[Function]}
                                        value="ParticipantId"
                                      >
                                        <select
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-type-0"
                                          name="domainpropertiesrow-type"
                                          onChange={[Function]}
                                          value="ParticipantId"
                                        >
                                          <option
                                            key="0"
                                            value="string"
                                          >
                                            Text
                                          </option>
                                          <option
                                            key="1"
                                            value="multiLine"
                                          >
                                            Multi-Line Text
                                          </option>
                                          <option
                                            key="2"
                                            value="flag"
                                          >
                                            Flag
                                          </option>
                                          <option
                                            key="3"
                                            value="ParticipantId"
                                          >
                                            Subject/Participant
                                          </option>
                                          <option
                                            key="4"
                                            value="lookup"
                                          >
                                            Lookup
                                          </option>
                                        </select>
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}
                                  >
                                    <div
                                      className="col-xs-2"
                                    >
                                      <div
                                        className="domain-field-checkbox-container"
                                      >
                                        <Checkbox
                                          bsClass="checkbox"
                                          checked={false}
                                          className="domain-field-checkbox"
                                          disabled={false}
                                          id="domainpropertiesrow-required-0"
                                          inline={false}
                                          name="domainpropertiesrow-required"
                                          onChange={[Function]}
                                          title=""
                                        >
                                          <div
                                            className="domain-field-checkbox checkbox"
                                          >
                                            <label
                                              title=""
                                            >
                                              <input
                                                checked={false}
                                                disabled={false}
                                                id="domainpropertiesrow-required-0"
                                                name="domainpropertiesrow-required"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </label>
                                          </div>
                                        </Checkbox>
                                      </div>
                                    </div>
                                  </Col>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="domain-field-details-container"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-field-details-container col-xs-6"
                              >
                                <div
                                  className="domain-field-details"
                                  id="domainpropertiesrow-details-0"
                                />
                                <div
                                  className="domain-field-buttons"
                                >
                                  <div
                                    className="domain-field-icon"
                                    id="domainpropertiesrow-expand-0"
                                    onClick={[Function]}
                                  >
                                    <FontAwesomeIcon
                                      border={false}
                                      className=""
                                      color="#999999"
                                      fixedWidth={false}
                                      flip={null}
                                      icon={
                                        Object {
                                          "icon": Array [
                                            448,
                                            512,
                                            Array [],
                                            "f0fe",
                                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                          ],
                                          "iconName": "plus-square",
                                          "prefix": "fas",
                                        }
                                      }
                                      inverse={false}
                                      listItem={false}
                                      mask={null}
                                      pull={null}
                                      pulse={false}
                                      rotation={null}
                                      size="lg"
                                      spin={false}
                                      symbol={false}
                                      title=""
                                      transform={null}
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                        color="#999999"
                                        data-icon="plus-square"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        style={Object {}}
                                        viewBox="0 0 448 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                          fill="currentColor"
                                          style={Object {}}
                                        />
                                      </svg>
                                    </FontAwesomeIcon>
                                  </div>
                                </div>
                              </div>
                            </Col>
                          </div>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        onExiting={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                  "conditionalFormats": Immutable.List [],
                                  "defaultScale": undefined,
                                  "defaultValueType": undefined,
                                  "defaultValue": undefined,
                                  "defaultDisplayValue": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "lookupValidator": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "participantField",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": 1,
                                  "propertyURI": "test",
                                  "propertyValidators": Immutable.List [],
                                  "rangeValidators": Immutable.List [],
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "regexValidators": Immutable.List [],
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "visible": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                    "display": "Subject/Participant",
                                    "name": "ParticipantId",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                      "display": "Subject/Participant",
                                      "name": "ParticipantId",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "alternateRangeURI": undefined,
                                      "shortDisplay": undefined,
                                      "lookupSchema": undefined,
                                      "lookupQuery": undefined,
                                    },
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={0}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                              setDragDisabled={[Function]}
                            >
                              <div
                                className="domain-row-container"
                              >
                                <div
                                  className="domain-row-handle"
                                />
                                <div
                                  className="domain-row-container-expanded"
                                >
                                  <NameAndLinkingOptions
                                    field={
                                      Immutable.Record {
                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "participantField",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": 1,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                          "display": "Subject/Participant",
                                          "name": "ParticipantId",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                            "display": "Subject/Participant",
                                            "name": "ParticipantId",
                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                            "alternateRangeURI": undefined,
                                            "shortDisplay": undefined,
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={0}
                                    onChange={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Name and Linking Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <div>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={5}
                                            >
                                              <div
                                                className="col-xs-5"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Description
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  className="form-control domain-field-textarea"
                                                  componentClass="textarea"
                                                  disabled={false}
                                                  id="domainpropertiesrow-description-0"
                                                  name="domainpropertiesrow-description"
                                                  onChange={[Function]}
                                                  rows={4}
                                                  value=""
                                                >
                                                  <textarea
                                                    className="form-control domain-field-textarea form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-description-0"
                                                    name="domainpropertiesrow-description"
                                                    onChange={[Function]}
                                                    rows={4}
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={3}
                                            >
                                              <div
                                                className="col-xs-3"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Label
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-label-0"
                                                  name="domainpropertiesrow-label"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-label-0"
                                                    name="domainpropertiesrow-label"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Import Aliases
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Import Aliases"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-importAliases-0"
                                                  name="domainpropertiesrow-importAliases"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-importAliases-0"
                                                    name="domainpropertiesrow-importAliases"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={4}
                                            >
                                              <div
                                                className="col-xs-4"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  URL
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="URL"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-URL-0"
                                                  name="domainpropertiesrow-URL"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-URL-0"
                                                    name="domainpropertiesrow-URL"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                          </div>
                                        </div>
                                      </Row>
                                    </div>
                                  </NameAndLinkingOptions>
                                  <ConditionalFormattingAndValidation
                                    field={
                                      Immutable.Record {
                                        "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "participantField",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": 1,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                          "display": "Subject/Participant",
                                          "name": "ParticipantId",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                                            "display": "Subject/Participant",
                                            "name": "ParticipantId",
                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                            "alternateRangeURI": undefined,
                                            "shortDisplay": undefined,
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={0}
                                    onChange={[Function]}
                                    setDragDisabled={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Conditional Formatting and Validation Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Conditional Format Criteria
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-conditionalFormat-0"
                                                    name="domainpropertiesrow-conditionalFormat"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-conditionalFormat-0"
                                                      name="domainpropertiesrow-conditionalFormat"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Format
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Regular Expression Validator
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Add Regex Validator"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-regexValidator-0"
                                                    name="domainpropertiesrow-regexValidator"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-regexValidator-0"
                                                      name="domainpropertiesrow-regexValidator"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Regex
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </div>
                                  </ConditionalFormattingAndValidation>
                                </div>
                              </div>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRow server side error on reserved field 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={7}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="7"
            >
              <DomainRow
                availableTypes={
                  Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Multi-Line Text",
                      "name": "multiLine",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Boolean",
                      "name": "boolean",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": "xsd:boolean",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Decimal",
                      "name": "double",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                      "alternateRangeURI": "xsd:double",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": "http://www.labkey.org/exp/xml#flag",
                      "display": "Flag",
                      "name": "flag",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "File",
                      "name": "fileLink",
                      "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "User",
                      "name": "users",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": "core",
                      "lookupQuery": "users",
                    },
                    Immutable.Record {
                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                      "display": "Subject/Participant",
                      "name": "ParticipantId",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                  ]
                }
                defaultDefaultValueType="FIXED_EDITABLE"
                defaultValueOptions={
                  Immutable.List [
                    "FIXED_EDITABLE",
                    "LAST_ENTERED",
                    "FIXED_NON_EDITABLE",
                  ]
                }
                dragging={false}
                expandTransition={300}
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "modified",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": undefined,
                    "propertyURI": "test",
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Attachment",
                        "name": "attachment",
                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                        "alternateRangeURI": undefined,
                        "shortDisplay": undefined,
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                fieldError={
                  Immutable.Record {
                    "message": "'modified' is a reserved field name in 'CancerCuringStudy'",
                    "fieldName": "modified",
                    "propertyId": undefined,
                    "severity": "Error",
                    "rowIndexes": Immutable.List [],
                    "newRowIndexes": undefined,
                  }
                }
                helpNoun="domain"
                index={1}
                isDragDisabled={false}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-1"
                  index={1}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-1"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={1}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      className="domain-field-row domain-row-border-error"
                      data-react-beautiful-dnd-draggable="7"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={1}
                    >
                      <Row
                        bsClass="row"
                        className="domain-row-container"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-1"
                      >
                        <div
                          className="domain-row-container row"
                        >
                          <AdvancedSettings
                            defaultDefaultValueType="FIXED_EDITABLE"
                            defaultValueOptions={
                              Immutable.List [
                                "FIXED_EDITABLE",
                                "LAST_ENTERED",
                                "FIXED_NON_EDITABLE",
                              ]
                            }
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "modified",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": "test",
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Attachment",
                                  "name": "attachment",
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Attachment",
                                    "name": "attachment",
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            helpNoun="domain"
                            index={1}
                            label="modified"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            aria-roledescription="Draggable item. Press space bar to lift"
                            className="domain-row-handle"
                            data-react-beautiful-dnd-drag-handle="7"
                            draggable={false}
                            onBlur={[Function]}
                            onDragStart={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              color="#999999"
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    320,
                                    512,
                                    Array [],
                                    "f58e",
                                    "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                  ],
                                  "iconName": "grip-vertical",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size="lg"
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                color="#999999"
                                data-icon="grip-vertical"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 320 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </div>
                          <div
                            className="domain-row-main"
                          >
                            <Col
                              bsClass="col"
                              className="domain-row-base-fields"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-row-base-fields col-xs-6"
                              >
                                <div
                                  id="domainpropertiesrow-row-1"
                                >
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}
                                  >
                                    <div
                                      className="col-xs-6"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="input"
                                        disabled={false}
                                        id="domainpropertiesrow-name-1"
                                        name="domainpropertiesrow-name"
                                        onChange={[Function]}
                                        type="text"
                                        value="modified"
                                      >
                                        <input
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-name-1"
                                          name="domainpropertiesrow-name"
                                          onChange={[Function]}
                                          type="text"
                                          value="modified"
                                        />
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}
                                  >
                                    <div
                                      className="col-xs-4"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="select"
                                        disabled={false}
                                        id="domainpropertiesrow-type-1"
                                        name="domainpropertiesrow-type"
                                        onChange={[Function]}
                                        value="attachment"
                                      >
                                        <select
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-type-1"
                                          name="domainpropertiesrow-type"
                                          onChange={[Function]}
                                          value="attachment"
                                        >
                                          <option
                                            key="0"
                                            value="string"
                                          >
                                            Text
                                          </option>
                                          <option
                                            key="1"
                                            value="multiLine"
                                          >
                                            Multi-Line Text
                                          </option>
                                          <option
                                            key="2"
                                            value="boolean"
                                          >
                                            Boolean
                                          </option>
                                          <option
                                            key="3"
                                            value="int"
                                          >
                                            Integer
                                          </option>
                                          <option
                                            key="4"
                                            value="double"
                                          >
                                            Decimal
                                          </option>
                                          <option
                                            key="5"
                                            value="dateTime"
                                          >
                                            Date Time
                                          </option>
                                          <option
                                            key="6"
                                            value="flag"
                                          >
                                            Flag
                                          </option>
                                          <option
                                            key="7"
                                            value="fileLink"
                                          >
                                            File
                                          </option>
                                          <option
                                            key="8"
                                            value="attachment"
                                          >
                                            Attachment
                                          </option>
                                          <option
                                            key="9"
                                            value="users"
                                          >
                                            User
                                          </option>
                                          <option
                                            key="10"
                                            value="ParticipantId"
                                          >
                                            Subject/Participant
                                          </option>
                                          <option
                                            key="11"
                                            value="lookup"
                                          >
                                            Lookup
                                          </option>
                                        </select>
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}
                                  >
                                    <div
                                      className="col-xs-2"
                                    >
                                      <div
                                        className="domain-field-checkbox-container"
                                      >
                                        <Checkbox
                                          bsClass="checkbox"
                                          checked={false}
                                          className="domain-field-checkbox"
                                          disabled={false}
                                          id="domainpropertiesrow-required-1"
                                          inline={false}
                                          name="domainpropertiesrow-required"
                                          onChange={[Function]}
                                          title=""
                                        >
                                          <div
                                            className="domain-field-checkbox checkbox"
                                          >
                                            <label
                                              title=""
                                            >
                                              <input
                                                checked={false}
                                                disabled={false}
                                                id="domainpropertiesrow-required-1"
                                                name="domainpropertiesrow-required"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </label>
                                          </div>
                                        </Checkbox>
                                      </div>
                                    </div>
                                  </Col>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="domain-field-details-container"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-field-details-container col-xs-6"
                              >
                                <div
                                  className="domain-field-details"
                                  id="domainpropertiesrow-details-1"
                                >
                                  New field
                                  . 
                                  <b
                                    key="modified_1"
                                  >
                                    Error: 'modified' is a reserved field name in 'CancerCuringStudy'
                                  </b>
                                </div>
                                <div
                                  className="domain-field-buttons"
                                >
                                  <div
                                    className="domain-field-icon"
                                    id="domainpropertiesrow-expand-1"
                                    onClick={[Function]}
                                  >
                                    <FontAwesomeIcon
                                      border={false}
                                      className=""
                                      color="#999999"
                                      fixedWidth={false}
                                      flip={null}
                                      icon={
                                        Object {
                                          "icon": Array [
                                            448,
                                            512,
                                            Array [],
                                            "f0fe",
                                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                          ],
                                          "iconName": "plus-square",
                                          "prefix": "fas",
                                        }
                                      }
                                      inverse={false}
                                      listItem={false}
                                      mask={null}
                                      pull={null}
                                      pulse={false}
                                      rotation={null}
                                      size="lg"
                                      spin={false}
                                      symbol={false}
                                      title=""
                                      transform={null}
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                        color="#999999"
                                        data-icon="plus-square"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        style={Object {}}
                                        viewBox="0 0 448 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                          fill="currentColor"
                                          style={Object {}}
                                        />
                                      </svg>
                                    </FontAwesomeIcon>
                                  </div>
                                </div>
                              </div>
                            </Col>
                          </div>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        onExiting={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "conditionalFormats": Immutable.List [],
                                  "defaultScale": undefined,
                                  "defaultValueType": undefined,
                                  "defaultValue": undefined,
                                  "defaultDisplayValue": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "lookupValidator": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "modified",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": undefined,
                                  "propertyURI": "test",
                                  "propertyValidators": Immutable.List [],
                                  "rangeValidators": Immutable.List [],
                                  "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                  "regexValidators": Immutable.List [],
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "visible": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Attachment",
                                    "name": "attachment",
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Attachment",
                                      "name": "attachment",
                                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                      "alternateRangeURI": undefined,
                                      "shortDisplay": undefined,
                                      "lookupSchema": undefined,
                                      "lookupQuery": undefined,
                                    },
                                    "rangeURI": undefined,
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={1}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                              setDragDisabled={[Function]}
                            >
                              <div
                                className="domain-row-container"
                              >
                                <div
                                  className="domain-row-handle"
                                />
                                <div
                                  className="domain-row-container-expanded"
                                >
                                  <NameAndLinkingOptions
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "modified",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": undefined,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Attachment",
                                          "name": "attachment",
                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Attachment",
                                            "name": "attachment",
                                            "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                            "alternateRangeURI": undefined,
                                            "shortDisplay": undefined,
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": undefined,
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={1}
                                    onChange={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Name and Linking Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <div>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={5}
                                            >
                                              <div
                                                className="col-xs-5"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Description
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  className="form-control domain-field-textarea"
                                                  componentClass="textarea"
                                                  disabled={false}
                                                  id="domainpropertiesrow-description-1"
                                                  name="domainpropertiesrow-description"
                                                  onChange={[Function]}
                                                  rows={4}
                                                  value=""
                                                >
                                                  <textarea
                                                    className="form-control domain-field-textarea form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-description-1"
                                                    name="domainpropertiesrow-description"
                                                    onChange={[Function]}
                                                    rows={4}
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={3}
                                            >
                                              <div
                                                className="col-xs-3"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Label
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-label-1"
                                                  name="domainpropertiesrow-label"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-label-1"
                                                    name="domainpropertiesrow-label"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Import Aliases
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Import Aliases"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-importAliases-1"
                                                  name="domainpropertiesrow-importAliases"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-importAliases-1"
                                                    name="domainpropertiesrow-importAliases"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={4}
                                            >
                                              <div
                                                className="col-xs-4"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  URL
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="URL"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-URL-1"
                                                  name="domainpropertiesrow-URL"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-URL-1"
                                                    name="domainpropertiesrow-URL"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                          </div>
                                        </div>
                                      </Row>
                                    </div>
                                  </NameAndLinkingOptions>
                                  <ConditionalFormattingAndValidation
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "modified",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": undefined,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Attachment",
                                          "name": "attachment",
                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Attachment",
                                            "name": "attachment",
                                            "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                                            "alternateRangeURI": undefined,
                                            "shortDisplay": undefined,
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": undefined,
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={1}
                                    onChange={[Function]}
                                    setDragDisabled={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Conditional Formatting and Validation Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Conditional Format Criteria
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-conditionalFormat-1"
                                                    name="domainpropertiesrow-conditionalFormat"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-conditionalFormat-1"
                                                      name="domainpropertiesrow-conditionalFormat"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Format
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Regular Expression Validator
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Add Regex Validator"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-regexValidator-1"
                                                    name="domainpropertiesrow-regexValidator"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-regexValidator-1"
                                                      name="domainpropertiesrow-regexValidator"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Regex
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </div>
                                  </ConditionalFormattingAndValidation>
                                </div>
                              </div>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRow string field test 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={1}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="1"
            >
              <DomainRow
                availableTypes={
                  Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Multi-Line Text",
                      "name": "multiLine",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Boolean",
                      "name": "boolean",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": "xsd:boolean",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Decimal",
                      "name": "double",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                      "alternateRangeURI": "xsd:double",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": "http://www.labkey.org/exp/xml#flag",
                      "display": "Flag",
                      "name": "flag",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "File",
                      "name": "fileLink",
                      "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "User",
                      "name": "users",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": "core",
                      "lookupQuery": "users",
                    },
                    Immutable.Record {
                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                      "display": "Subject/Participant",
                      "name": "ParticipantId",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                  ]
                }
                defaultDefaultValueType="FIXED_EDITABLE"
                defaultValueOptions={
                  Immutable.List [
                    "FIXED_EDITABLE",
                    "LAST_ENTERED",
                    "FIXED_NON_EDITABLE",
                  ]
                }
                dragging={false}
                expandTransition={300}
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": "stringField",
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": 1,
                    "propertyURI": "test",
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                helpNoun="domain"
                index={1}
                isDragDisabled={false}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-1"
                  index={1}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-1"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={1}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      className="domain-field-row domain-row-border-default"
                      data-react-beautiful-dnd-draggable="1"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={1}
                    >
                      <Row
                        bsClass="row"
                        className="domain-row-container"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-1"
                      >
                        <div
                          className="domain-row-container row"
                        >
                          <AdvancedSettings
                            defaultDefaultValueType="FIXED_EDITABLE"
                            defaultValueOptions={
                              Immutable.List [
                                "FIXED_EDITABLE",
                                "LAST_ENTERED",
                                "FIXED_NON_EDITABLE",
                              ]
                            }
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "stringField",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": 1,
                                "propertyURI": "test",
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            helpNoun="domain"
                            index={1}
                            label="stringField"
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            aria-roledescription="Draggable item. Press space bar to lift"
                            className="domain-row-handle"
                            data-react-beautiful-dnd-drag-handle="1"
                            draggable={false}
                            onBlur={[Function]}
                            onDragStart={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              color="#999999"
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    320,
                                    512,
                                    Array [],
                                    "f58e",
                                    "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                  ],
                                  "iconName": "grip-vertical",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size="lg"
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                color="#999999"
                                data-icon="grip-vertical"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 320 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </div>
                          <div
                            className="domain-row-main"
                          >
                            <Col
                              bsClass="col"
                              className="domain-row-base-fields"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-row-base-fields col-xs-6"
                              >
                                <div
                                  id="domainpropertiesrow-row-1"
                                >
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}
                                  >
                                    <div
                                      className="col-xs-6"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="input"
                                        disabled={false}
                                        id="domainpropertiesrow-name-1"
                                        name="domainpropertiesrow-name"
                                        onChange={[Function]}
                                        type="text"
                                        value="stringField"
                                      >
                                        <input
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-name-1"
                                          name="domainpropertiesrow-name"
                                          onChange={[Function]}
                                          type="text"
                                          value="stringField"
                                        />
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}
                                  >
                                    <div
                                      className="col-xs-4"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="select"
                                        disabled={false}
                                        id="domainpropertiesrow-type-1"
                                        name="domainpropertiesrow-type"
                                        onChange={[Function]}
                                        value="string"
                                      >
                                        <select
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-type-1"
                                          name="domainpropertiesrow-type"
                                          onChange={[Function]}
                                          value="string"
                                        >
                                          <option
                                            key="0"
                                            value="string"
                                          >
                                            Text
                                          </option>
                                          <option
                                            key="1"
                                            value="multiLine"
                                          >
                                            Multi-Line Text
                                          </option>
                                          <option
                                            key="2"
                                            value="flag"
                                          >
                                            Flag
                                          </option>
                                          <option
                                            key="3"
                                            value="ParticipantId"
                                          >
                                            Subject/Participant
                                          </option>
                                          <option
                                            key="4"
                                            value="lookup"
                                          >
                                            Lookup
                                          </option>
                                        </select>
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}
                                  >
                                    <div
                                      className="col-xs-2"
                                    >
                                      <div
                                        className="domain-field-checkbox-container"
                                      >
                                        <Checkbox
                                          bsClass="checkbox"
                                          checked={false}
                                          className="domain-field-checkbox"
                                          disabled={false}
                                          id="domainpropertiesrow-required-1"
                                          inline={false}
                                          name="domainpropertiesrow-required"
                                          onChange={[Function]}
                                          title=""
                                        >
                                          <div
                                            className="domain-field-checkbox checkbox"
                                          >
                                            <label
                                              title=""
                                            >
                                              <input
                                                checked={false}
                                                disabled={false}
                                                id="domainpropertiesrow-required-1"
                                                name="domainpropertiesrow-required"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </label>
                                          </div>
                                        </Checkbox>
                                      </div>
                                    </div>
                                  </Col>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="domain-field-details-container"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-field-details-container col-xs-6"
                              >
                                <div
                                  className="domain-field-details"
                                  id="domainpropertiesrow-details-1"
                                />
                                <div
                                  className="domain-field-buttons"
                                >
                                  <div
                                    className="domain-field-icon"
                                    id="domainpropertiesrow-expand-1"
                                    onClick={[Function]}
                                  >
                                    <FontAwesomeIcon
                                      border={false}
                                      className=""
                                      color="#999999"
                                      fixedWidth={false}
                                      flip={null}
                                      icon={
                                        Object {
                                          "icon": Array [
                                            448,
                                            512,
                                            Array [],
                                            "f0fe",
                                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                          ],
                                          "iconName": "plus-square",
                                          "prefix": "fas",
                                        }
                                      }
                                      inverse={false}
                                      listItem={false}
                                      mask={null}
                                      pull={null}
                                      pulse={false}
                                      rotation={null}
                                      size="lg"
                                      spin={false}
                                      symbol={false}
                                      title=""
                                      transform={null}
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                        color="#999999"
                                        data-icon="plus-square"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        style={Object {}}
                                        viewBox="0 0 448 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                          fill="currentColor"
                                          style={Object {}}
                                        />
                                      </svg>
                                    </FontAwesomeIcon>
                                  </div>
                                </div>
                              </div>
                            </Col>
                          </div>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        onExiting={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "conditionalFormats": Immutable.List [],
                                  "defaultScale": undefined,
                                  "defaultValueType": undefined,
                                  "defaultValue": undefined,
                                  "defaultDisplayValue": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "lookupValidator": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": "stringField",
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": 1,
                                  "propertyURI": "test",
                                  "propertyValidators": Immutable.List [],
                                  "rangeValidators": Immutable.List [],
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "regexValidators": Immutable.List [],
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "visible": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Text",
                                      "name": "string",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "alternateRangeURI": "xsd:string",
                                      "shortDisplay": "String",
                                      "lookupSchema": undefined,
                                      "lookupQuery": undefined,
                                    },
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={1}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                              setDragDisabled={[Function]}
                            >
                              <div
                                className="domain-row-container"
                              >
                                <div
                                  className="domain-row-handle"
                                />
                                <div
                                  className="domain-row-container-expanded"
                                >
                                  <TextFieldOptions
                                    index={1}
                                    label="Text Options"
                                    lockType="NotLocked"
                                    onChange={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Text Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded "
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded  row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-label"
                                              >
                                                Maximum Text Length
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  id="tooltip"
                                                  title="Max Text Length"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size={null}
                                                      spin={false}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            className="domain-text-options-col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="domain-text-options-col col-xs-12"
                                            >
                                              <input
                                                checked={true}
                                                className="domain-text-options-radio1 domain-field-float-left"
                                                disabled={false}
                                                id="domainpropertiesrow-maxLength-1"
                                                name="domainpropertiesrow-maxLength"
                                                onChange={[Function]}
                                                type="radio"
                                                value="maxLength"
                                              />
                                              <div
                                                className="domain-text-label"
                                              >
                                                Unlimited
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <input
                                                checked={false}
                                                className="domain-text-options-radio2 domain-field-float-left"
                                                id="domainpropertiesrow-customLength-1"
                                                name="domainpropertiesrow-customLength"
                                                onChange={[Function]}
                                                type="radio"
                                                value="customLength"
                                              />
                                              <span
                                                className="domain-text-options-length domain-field-float-left domain-text-label"
                                              >
                                                No longer than X characters
                                              </span>
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                disabled={true}
                                                id="domainpropertiesrow-scale-1"
                                                name="domainpropertiesrow-scale"
                                                onChange={[Function]}
                                                style={
                                                  Object {
                                                    "width": "60px",
                                                  }
                                                }
                                                type="text"
                                                value={4000}
                                              >
                                                <input
                                                  className="form-control"
                                                  disabled={true}
                                                  id="domainpropertiesrow-scale-1"
                                                  name="domainpropertiesrow-scale"
                                                  onChange={[Function]}
                                                  style={
                                                    Object {
                                                      "width": "60px",
                                                    }
                                                  }
                                                  type="text"
                                                  value={4000}
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </div>
                                  </TextFieldOptions>
                                  <NameAndLinkingOptions
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "stringField",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": 1,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Text",
                                          "name": "string",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                          "alternateRangeURI": "xsd:string",
                                          "shortDisplay": "String",
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Text",
                                            "name": "string",
                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                            "alternateRangeURI": "xsd:string",
                                            "shortDisplay": "String",
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={1}
                                    onChange={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Name and Linking Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <div>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={5}
                                            >
                                              <div
                                                className="col-xs-5"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Description
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  className="form-control domain-field-textarea"
                                                  componentClass="textarea"
                                                  disabled={false}
                                                  id="domainpropertiesrow-description-1"
                                                  name="domainpropertiesrow-description"
                                                  onChange={[Function]}
                                                  rows={4}
                                                  value=""
                                                >
                                                  <textarea
                                                    className="form-control domain-field-textarea form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-description-1"
                                                    name="domainpropertiesrow-description"
                                                    onChange={[Function]}
                                                    rows={4}
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={3}
                                            >
                                              <div
                                                className="col-xs-3"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Label
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-label-1"
                                                  name="domainpropertiesrow-label"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-label-1"
                                                    name="domainpropertiesrow-label"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Import Aliases
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Import Aliases"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-importAliases-1"
                                                  name="domainpropertiesrow-importAliases"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-importAliases-1"
                                                    name="domainpropertiesrow-importAliases"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={4}
                                            >
                                              <div
                                                className="col-xs-4"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  URL
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="URL"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-URL-1"
                                                  name="domainpropertiesrow-URL"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-URL-1"
                                                    name="domainpropertiesrow-URL"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                          </div>
                                        </div>
                                      </Row>
                                    </div>
                                  </NameAndLinkingOptions>
                                  <ConditionalFormattingAndValidation
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": "stringField",
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": 1,
                                        "propertyURI": "test",
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Text",
                                          "name": "string",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                          "alternateRangeURI": "xsd:string",
                                          "shortDisplay": "String",
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Text",
                                            "name": "string",
                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                            "alternateRangeURI": "xsd:string",
                                            "shortDisplay": "String",
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={1}
                                    onChange={[Function]}
                                    setDragDisabled={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Conditional Formatting and Validation Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Conditional Format Criteria
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-conditionalFormat-1"
                                                    name="domainpropertiesrow-conditionalFormat"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-conditionalFormat-1"
                                                      name="domainpropertiesrow-conditionalFormat"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Format
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Regular Expression Validator
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Add Regex Validator"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-regexValidator-1"
                                                    name="domainpropertiesrow-regexValidator"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-regexValidator-1"
                                                      name="domainpropertiesrow-regexValidator"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Regex
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </div>
                                  </ConditionalFormattingAndValidation>
                                </div>
                              </div>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;

exports[`DomainRow with empty domain form 1`] = `
<DragDropContext
  onDragEnd={[MockFunction]}
>
  <ErrorBoundary>
    <App
      onDragEnd={[MockFunction]}
      setOnError={[Function]}
      uniqueId={0}
    >
      <Provider
        context={
          Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": Object {
              "$$typeof": Symbol(react.provider),
              "_context": [Circular],
            },
            "_calculateChangedBits": null,
            "_currentRenderer": Object {},
            "_currentRenderer2": null,
            "_currentValue": null,
            "_currentValue2": null,
            "_threadCount": 0,
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
      >
        <ConnectFunction
          direction="vertical"
          droppableId="domain-form-droppable"
          ignoreContainerClipping={false}
          isCombineEnabled={false}
          isDropDisabled={false}
          type="DEFAULT"
        >
          <Droppable
            direction="vertical"
            droppableId="domain-form-droppable"
            ignoreContainerClipping={false}
            isCombineEnabled={false}
            isDropDisabled={false}
            placeholder={null}
            shouldAnimatePlaceholder={true}
            snapshot={
              Object {
                "draggingFromThisWith": null,
                "draggingOverWith": null,
                "isDraggingOver": false,
              }
            }
            type="DEFAULT"
            updateViewportMaxScroll={[Function]}
          >
            <div
              data-react-beautiful-dnd-droppable="0"
            >
              <DomainRow
                availableTypes={
                  Immutable.List [
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Multi-Line Text",
                      "name": "multiLine",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#multiLine",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Boolean",
                      "name": "boolean",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                      "alternateRangeURI": "xsd:boolean",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Decimal",
                      "name": "double",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#double",
                      "alternateRangeURI": "xsd:double",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": "http://www.labkey.org/exp/xml#flag",
                      "display": "Flag",
                      "name": "flag",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "File",
                      "name": "fileLink",
                      "rangeURI": "http://cpas.fhcrc.org/exp/xml#fileLink",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Attachment",
                      "name": "attachment",
                      "rangeURI": "http://www.labkey.org/exp/xml#attachment",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "User",
                      "name": "users",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": "core",
                      "lookupQuery": "users",
                    },
                    Immutable.Record {
                      "conceptURI": "http://cpas.labkey.com/Study#ParticipantId",
                      "display": "Subject/Participant",
                      "name": "ParticipantId",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                  ]
                }
                defaultDefaultValueType="FIXED_EDITABLE"
                defaultValueOptions={
                  Immutable.List [
                    "FIXED_EDITABLE",
                    "LAST_ENTERED",
                    "FIXED_NON_EDITABLE",
                  ]
                }
                dragging={false}
                expandTransition={300}
                expanded={false}
                field={
                  Immutable.Record {
                    "conceptURI": undefined,
                    "conditionalFormats": Immutable.List [],
                    "defaultScale": undefined,
                    "defaultValueType": undefined,
                    "defaultValue": undefined,
                    "defaultDisplayValue": undefined,
                    "description": undefined,
                    "dimension": undefined,
                    "excludeFromShifting": false,
                    "format": undefined,
                    "hidden": false,
                    "importAliases": undefined,
                    "label": undefined,
                    "lookupContainer": undefined,
                    "lookupQuery": undefined,
                    "lookupSchema": undefined,
                    "lookupValidator": undefined,
                    "measure": undefined,
                    "mvEnabled": false,
                    "name": undefined,
                    "PHI": undefined,
                    "primaryKey": undefined,
                    "propertyId": undefined,
                    "propertyURI": undefined,
                    "propertyValidators": Immutable.List [],
                    "rangeValidators": Immutable.List [],
                    "rangeURI": undefined,
                    "regexValidators": Immutable.List [],
                    "recommendedVariable": false,
                    "required": false,
                    "scale": undefined,
                    "URL": undefined,
                    "shownInDetailsView": true,
                    "shownInInsertView": true,
                    "shownInUpdateView": true,
                    "visible": true,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "lookupQueryValue": undefined,
                    "lookupType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Lookup",
                      "name": "lookup",
                      "rangeURI": undefined,
                      "alternateRangeURI": undefined,
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "original": Object {
                      "dataType": Immutable.Record {
                        "conceptURI": undefined,
                        "display": "Text",
                        "name": "string",
                        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                        "alternateRangeURI": "xsd:string",
                        "shortDisplay": "String",
                        "lookupSchema": undefined,
                        "lookupQuery": undefined,
                      },
                      "rangeURI": undefined,
                    },
                    "updatedField": false,
                    "isPrimaryKey": false,
                    "lockType": "NotLocked",
                  }
                }
                helpNoun="domain"
                index={1}
                isDragDisabled={false}
                key="domain-row-key-1"
                maxPhiLevel="Restricted"
                onChange={[MockFunction]}
                onDelete={[MockFunction]}
                onExpand={[MockFunction]}
              >
                <ConnectFunction
                  disableInteractiveElementBlocking={false}
                  draggableId="domainpropertiesrow-domaindrag-1"
                  index={1}
                  isDragDisabled={false}
                  shouldRespectForcePress={false}
                >
                  <Draggable
                    disableInteractiveElementBlocking={false}
                    draggableId="domainpropertiesrow-domaindrag-1"
                    drop={[Function]}
                    dropAnimationFinished={[Function]}
                    index={1}
                    isDragDisabled={false}
                    lift={[Function]}
                    mapped={
                      Object {
                        "combineTargetFor": null,
                        "offset": Object {
                          "x": 0,
                          "y": 0,
                        },
                        "shouldAnimateDisplacement": true,
                        "snapshot": Object {
                          "combineTargetFor": null,
                          "combineWith": null,
                          "draggingOver": null,
                          "dropAnimation": null,
                          "isDragging": false,
                          "isDropAnimating": false,
                          "mode": null,
                        },
                        "type": "SECONDARY",
                      }
                    }
                    move={[Function]}
                    moveByWindowScroll={[Function]}
                    moveDown={[Function]}
                    moveLeft={[Function]}
                    moveRight={[Function]}
                    moveUp={[Function]}
                    shouldRespectForcePress={false}
                  >
                    <div
                      className="domain-field-row domain-row-border-default"
                      data-react-beautiful-dnd-draggable="0"
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTransitionEnd={null}
                      style={
                        Object {
                          "transform": null,
                          "transition": null,
                        }
                      }
                      tabIndex={1}
                    >
                      <Row
                        bsClass="row"
                        className="domain-row-container"
                        componentClass="div"
                        key="domainpropertiesrow-domainrow-1"
                      >
                        <div
                          className="domain-row-container row"
                        >
                          <AdvancedSettings
                            defaultDefaultValueType="FIXED_EDITABLE"
                            defaultValueOptions={
                              Immutable.List [
                                "FIXED_EDITABLE",
                                "LAST_ENTERED",
                                "FIXED_NON_EDITABLE",
                              ]
                            }
                            field={
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": undefined,
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": undefined,
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": undefined,
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              }
                            }
                            helpNoun="domain"
                            index={1}
                            maxPhiLevel="Restricted"
                            onApply={[Function]}
                            onHide={[Function]}
                            show={false}
                          >
                            <Modal
                              animation={true}
                              autoFocus={true}
                              backdrop={true}
                              bsClass="modal"
                              dialogComponentClass={[Function]}
                              enforceFocus={true}
                              keyboard={true}
                              manager={
                                ModalManager {
                                  "add": [Function],
                                  "containers": Array [],
                                  "data": Array [],
                                  "handleContainerOverflow": true,
                                  "hideSiblingNodes": true,
                                  "isTopModal": [Function],
                                  "modals": Array [],
                                  "remove": [Function],
                                }
                              }
                              onEnter={[Function]}
                              onHide={[Function]}
                              renderBackdrop={[Function]}
                              restoreFocus={true}
                              show={false}
                            >
                              <Modal
                                autoFocus={true}
                                backdrop={true}
                                backdropClassName="modal-backdrop"
                                backdropTransition={[Function]}
                                containerClassName="modal-open"
                                enforceFocus={true}
                                keyboard={true}
                                manager={
                                  ModalManager {
                                    "add": [Function],
                                    "containers": Array [],
                                    "data": Array [],
                                    "handleContainerOverflow": true,
                                    "hideSiblingNodes": true,
                                    "isTopModal": [Function],
                                    "modals": Array [],
                                    "remove": [Function],
                                  }
                                }
                                onEnter={[Function]}
                                onEntering={[Function]}
                                onExited={[Function]}
                                onHide={[Function]}
                                renderBackdrop={[Function]}
                                restoreFocus={true}
                                show={false}
                                transition={[Function]}
                              />
                            </Modal>
                          </AdvancedSettings>
                          <div
                            aria-roledescription="Draggable item. Press space bar to lift"
                            className="domain-row-handle"
                            data-react-beautiful-dnd-drag-handle="0"
                            draggable={false}
                            onBlur={[Function]}
                            onDragStart={[Function]}
                            onFocus={[Function]}
                            onKeyDown={[Function]}
                            onMouseDown={[Function]}
                            onTouchStart={[Function]}
                            tabIndex={0}
                          >
                            <FontAwesomeIcon
                              border={false}
                              className=""
                              color="#999999"
                              fixedWidth={false}
                              flip={null}
                              icon={
                                Object {
                                  "icon": Array [
                                    320,
                                    512,
                                    Array [],
                                    "f58e",
                                    "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
                                  ],
                                  "iconName": "grip-vertical",
                                  "prefix": "fas",
                                }
                              }
                              inverse={false}
                              listItem={false}
                              mask={null}
                              pull={null}
                              pulse={false}
                              rotation={null}
                              size="lg"
                              spin={false}
                              symbol={false}
                              title=""
                              transform={null}
                            >
                              <svg
                                aria-hidden="true"
                                className="svg-inline--fa fa-grip-vertical fa-w-10 fa-lg "
                                color="#999999"
                                data-icon="grip-vertical"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                style={Object {}}
                                viewBox="0 0 320 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z"
                                  fill="currentColor"
                                  style={Object {}}
                                />
                              </svg>
                            </FontAwesomeIcon>
                          </div>
                          <div
                            className="domain-row-main"
                          >
                            <Col
                              bsClass="col"
                              className="domain-row-base-fields"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-row-base-fields col-xs-6"
                              >
                                <div
                                  id="domainpropertiesrow-row-1"
                                >
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={6}
                                  >
                                    <div
                                      className="col-xs-6"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="input"
                                        disabled={false}
                                        id="domainpropertiesrow-name-1"
                                        name="domainpropertiesrow-name"
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      >
                                        <input
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-name-1"
                                          name="domainpropertiesrow-name"
                                          onChange={[Function]}
                                          type="text"
                                          value=""
                                        />
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={4}
                                  >
                                    <div
                                      className="col-xs-4"
                                    >
                                      <FormControl
                                        bsClass="form-control"
                                        componentClass="select"
                                        disabled={false}
                                        id="domainpropertiesrow-type-1"
                                        name="domainpropertiesrow-type"
                                        onChange={[Function]}
                                        value="string"
                                      >
                                        <select
                                          className="form-control"
                                          disabled={false}
                                          id="domainpropertiesrow-type-1"
                                          name="domainpropertiesrow-type"
                                          onChange={[Function]}
                                          value="string"
                                        >
                                          <option
                                            key="0"
                                            value="string"
                                          >
                                            Text
                                          </option>
                                          <option
                                            key="1"
                                            value="multiLine"
                                          >
                                            Multi-Line Text
                                          </option>
                                          <option
                                            key="2"
                                            value="boolean"
                                          >
                                            Boolean
                                          </option>
                                          <option
                                            key="3"
                                            value="int"
                                          >
                                            Integer
                                          </option>
                                          <option
                                            key="4"
                                            value="double"
                                          >
                                            Decimal
                                          </option>
                                          <option
                                            key="5"
                                            value="dateTime"
                                          >
                                            Date Time
                                          </option>
                                          <option
                                            key="6"
                                            value="flag"
                                          >
                                            Flag
                                          </option>
                                          <option
                                            key="7"
                                            value="fileLink"
                                          >
                                            File
                                          </option>
                                          <option
                                            key="8"
                                            value="attachment"
                                          >
                                            Attachment
                                          </option>
                                          <option
                                            key="9"
                                            value="users"
                                          >
                                            User
                                          </option>
                                          <option
                                            key="10"
                                            value="ParticipantId"
                                          >
                                            Subject/Participant
                                          </option>
                                          <option
                                            key="11"
                                            value="lookup"
                                          >
                                            Lookup
                                          </option>
                                        </select>
                                      </FormControl>
                                    </div>
                                  </Col>
                                  <Col
                                    bsClass="col"
                                    componentClass="div"
                                    xs={2}
                                  >
                                    <div
                                      className="col-xs-2"
                                    >
                                      <div
                                        className="domain-field-checkbox-container"
                                      >
                                        <Checkbox
                                          bsClass="checkbox"
                                          checked={false}
                                          className="domain-field-checkbox"
                                          disabled={false}
                                          id="domainpropertiesrow-required-1"
                                          inline={false}
                                          name="domainpropertiesrow-required"
                                          onChange={[Function]}
                                          title=""
                                        >
                                          <div
                                            className="domain-field-checkbox checkbox"
                                          >
                                            <label
                                              title=""
                                            >
                                              <input
                                                checked={false}
                                                disabled={false}
                                                id="domainpropertiesrow-required-1"
                                                name="domainpropertiesrow-required"
                                                onChange={[Function]}
                                                type="checkbox"
                                              />
                                            </label>
                                          </div>
                                        </Checkbox>
                                      </div>
                                    </div>
                                  </Col>
                                </div>
                              </div>
                            </Col>
                            <Col
                              bsClass="col"
                              className="domain-field-details-container"
                              componentClass="div"
                              xs={6}
                            >
                              <div
                                className="domain-field-details-container col-xs-6"
                              >
                                <div
                                  className="domain-field-details"
                                  id="domainpropertiesrow-details-1"
                                >
                                  New field
                                </div>
                                <div
                                  className="domain-field-buttons"
                                >
                                  <div
                                    className="domain-field-icon"
                                    id="domainpropertiesrow-expand-1"
                                    onClick={[Function]}
                                  >
                                    <FontAwesomeIcon
                                      border={false}
                                      className=""
                                      color="#999999"
                                      fixedWidth={false}
                                      flip={null}
                                      icon={
                                        Object {
                                          "icon": Array [
                                            448,
                                            512,
                                            Array [],
                                            "f0fe",
                                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                                          ],
                                          "iconName": "plus-square",
                                          "prefix": "fas",
                                        }
                                      }
                                      inverse={false}
                                      listItem={false}
                                      mask={null}
                                      pull={null}
                                      pulse={false}
                                      rotation={null}
                                      size="lg"
                                      spin={false}
                                      symbol={false}
                                      title=""
                                      transform={null}
                                    >
                                      <svg
                                        aria-hidden="true"
                                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg "
                                        color="#999999"
                                        data-icon="plus-square"
                                        data-prefix="fas"
                                        focusable="false"
                                        role="img"
                                        style={Object {}}
                                        viewBox="0 0 448 512"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                                          fill="currentColor"
                                          style={Object {}}
                                        />
                                      </svg>
                                    </FontAwesomeIcon>
                                  </div>
                                </div>
                              </div>
                            </Col>
                          </div>
                        </div>
                      </Row>
                      <Collapse
                        appear={false}
                        dimension="height"
                        getDimensionValue={[Function]}
                        in={false}
                        mountOnEnter={false}
                        onExited={[Function]}
                        onExiting={[Function]}
                        timeout={300}
                        unmountOnExit={false}
                      >
                        <Transition
                          appear={false}
                          aria-expanded={null}
                          enter={true}
                          exit={true}
                          in={false}
                          mountOnEnter={false}
                          onEnter={[Function]}
                          onEntered={[Function]}
                          onEntering={[Function]}
                          onExit={[Function]}
                          onExited={[Function]}
                          onExiting={[Function]}
                          timeout={300}
                          unmountOnExit={false}
                        >
                          <div
                            aria-expanded={null}
                            className="collapse"
                          >
                            <DomainRowExpandedOptions
                              field={
                                Immutable.Record {
                                  "conceptURI": undefined,
                                  "conditionalFormats": Immutable.List [],
                                  "defaultScale": undefined,
                                  "defaultValueType": undefined,
                                  "defaultValue": undefined,
                                  "defaultDisplayValue": undefined,
                                  "description": undefined,
                                  "dimension": undefined,
                                  "excludeFromShifting": false,
                                  "format": undefined,
                                  "hidden": false,
                                  "importAliases": undefined,
                                  "label": undefined,
                                  "lookupContainer": undefined,
                                  "lookupQuery": undefined,
                                  "lookupSchema": undefined,
                                  "lookupValidator": undefined,
                                  "measure": undefined,
                                  "mvEnabled": false,
                                  "name": undefined,
                                  "PHI": undefined,
                                  "primaryKey": undefined,
                                  "propertyId": undefined,
                                  "propertyURI": undefined,
                                  "propertyValidators": Immutable.List [],
                                  "rangeValidators": Immutable.List [],
                                  "rangeURI": undefined,
                                  "regexValidators": Immutable.List [],
                                  "recommendedVariable": false,
                                  "required": false,
                                  "scale": undefined,
                                  "URL": undefined,
                                  "shownInDetailsView": true,
                                  "shownInInsertView": true,
                                  "shownInUpdateView": true,
                                  "visible": true,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "lookupQueryValue": undefined,
                                  "lookupType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Lookup",
                                    "name": "lookup",
                                    "rangeURI": undefined,
                                    "alternateRangeURI": undefined,
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "original": Object {
                                    "dataType": Immutable.Record {
                                      "conceptURI": undefined,
                                      "display": "Text",
                                      "name": "string",
                                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                      "alternateRangeURI": "xsd:string",
                                      "shortDisplay": "String",
                                      "lookupSchema": undefined,
                                      "lookupQuery": undefined,
                                    },
                                    "rangeURI": undefined,
                                  },
                                  "updatedField": false,
                                  "isPrimaryKey": false,
                                  "lockType": "NotLocked",
                                }
                              }
                              index={1}
                              onChange={[Function]}
                              onMultiChange={[Function]}
                              setDragDisabled={[Function]}
                            >
                              <div
                                className="domain-row-container"
                              >
                                <div
                                  className="domain-row-handle"
                                />
                                <div
                                  className="domain-row-container-expanded"
                                >
                                  <TextFieldOptions
                                    index={1}
                                    label="Text Options"
                                    lockType="NotLocked"
                                    onChange={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading"
                                              >
                                                Text Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded "
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded  row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-label"
                                              >
                                                Maximum Text Length
                                                <LabelHelpTip
                                                  body={[Function]}
                                                  id="tooltip"
                                                  title="Max Text Length"
                                                >
                                                  <span
                                                    className="label-help-target"
                                                    onMouseOut={[Function]}
                                                    onMouseOver={[Function]}
                                                  >
                                                    <FontAwesomeIcon
                                                      border={false}
                                                      className="label-help-icon"
                                                      fixedWidth={false}
                                                      flip={null}
                                                      icon={
                                                        Object {
                                                          "icon": Array [
                                                            512,
                                                            512,
                                                            Array [],
                                                            "f059",
                                                            "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                          ],
                                                          "iconName": "question-circle",
                                                          "prefix": "fas",
                                                        }
                                                      }
                                                      inverse={false}
                                                      listItem={false}
                                                      mask={null}
                                                      pull={null}
                                                      pulse={false}
                                                      rotation={null}
                                                      size={null}
                                                      spin={false}
                                                      symbol={false}
                                                      title=""
                                                      transform={null}
                                                    >
                                                      <svg
                                                        aria-hidden="true"
                                                        className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                        data-icon="question-circle"
                                                        data-prefix="fas"
                                                        focusable="false"
                                                        role="img"
                                                        style={Object {}}
                                                        viewBox="0 0 512 512"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                      >
                                                        <path
                                                          d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                          fill="currentColor"
                                                          style={Object {}}
                                                        />
                                                      </svg>
                                                    </FontAwesomeIcon>
                                                    <Overlay
                                                      animation={[Function]}
                                                      placement="right"
                                                      rootClose={false}
                                                      show={false}
                                                      target={
                                                        <span
                                                          class="label-help-target"
                                                        >
                                                          <svg
                                                            aria-hidden="true"
                                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                            data-icon="question-circle"
                                                            data-prefix="fas"
                                                            focusable="false"
                                                            role="img"
                                                            viewBox="0 0 512 512"
                                                            xmlns="http://www.w3.org/2000/svg"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                              fill="currentColor"
                                                            />
                                                          </svg>
                                                        </span>
                                                      }
                                                    >
                                                      <Overlay
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                        transition={[Function]}
                                                      />
                                                    </Overlay>
                                                  </span>
                                                </LabelHelpTip>
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            className="domain-text-options-col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="domain-text-options-col col-xs-12"
                                            >
                                              <input
                                                checked={true}
                                                className="domain-text-options-radio1 domain-field-float-left"
                                                disabled={false}
                                                id="domainpropertiesrow-maxLength-1"
                                                name="domainpropertiesrow-maxLength"
                                                onChange={[Function]}
                                                type="radio"
                                                value="maxLength"
                                              />
                                              <div
                                                className="domain-text-label"
                                              >
                                                Unlimited
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <input
                                                checked={false}
                                                className="domain-text-options-radio2 domain-field-float-left"
                                                id="domainpropertiesrow-customLength-1"
                                                name="domainpropertiesrow-customLength"
                                                onChange={[Function]}
                                                type="radio"
                                                value="customLength"
                                              />
                                              <span
                                                className="domain-text-options-length domain-field-float-left domain-text-label"
                                              >
                                                No longer than X characters
                                              </span>
                                              <FormControl
                                                bsClass="form-control"
                                                componentClass="input"
                                                disabled={true}
                                                id="domainpropertiesrow-scale-1"
                                                name="domainpropertiesrow-scale"
                                                onChange={[Function]}
                                                style={
                                                  Object {
                                                    "width": "60px",
                                                  }
                                                }
                                                type="text"
                                                value={4000}
                                              >
                                                <input
                                                  className="form-control"
                                                  disabled={true}
                                                  id="domainpropertiesrow-scale-1"
                                                  name="domainpropertiesrow-scale"
                                                  onChange={[Function]}
                                                  style={
                                                    Object {
                                                      "width": "60px",
                                                    }
                                                  }
                                                  type="text"
                                                  value={4000}
                                                />
                                              </FormControl>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </div>
                                  </TextFieldOptions>
                                  <NameAndLinkingOptions
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": undefined,
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": undefined,
                                        "propertyURI": undefined,
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": undefined,
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Text",
                                          "name": "string",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                          "alternateRangeURI": "xsd:string",
                                          "shortDisplay": "String",
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": undefined,
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Text",
                                            "name": "string",
                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                            "alternateRangeURI": "xsd:string",
                                            "shortDisplay": "String",
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": undefined,
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={1}
                                    onChange={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Name and Linking Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <div>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={5}
                                            >
                                              <div
                                                className="col-xs-5"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Description
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  className="form-control domain-field-textarea"
                                                  componentClass="textarea"
                                                  disabled={false}
                                                  id="domainpropertiesrow-description-1"
                                                  name="domainpropertiesrow-description"
                                                  onChange={[Function]}
                                                  rows={4}
                                                  value=""
                                                >
                                                  <textarea
                                                    className="form-control domain-field-textarea form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-description-1"
                                                    name="domainpropertiesrow-description"
                                                    onChange={[Function]}
                                                    rows={4}
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={3}
                                            >
                                              <div
                                                className="col-xs-3"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Label
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-label-1"
                                                  name="domainpropertiesrow-label"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-label-1"
                                                    name="domainpropertiesrow-label"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  Import Aliases
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Import Aliases"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-importAliases-1"
                                                  name="domainpropertiesrow-importAliases"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-importAliases-1"
                                                    name="domainpropertiesrow-importAliases"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                            <Col
                                              bsClass="col"
                                              componentClass="div"
                                              xs={4}
                                            >
                                              <div
                                                className="col-xs-4"
                                              >
                                                <div
                                                  className="domain-field-label"
                                                >
                                                  URL
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="URL"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <FormControl
                                                  bsClass="form-control"
                                                  componentClass="input"
                                                  disabled={false}
                                                  id="domainpropertiesrow-URL-1"
                                                  name="domainpropertiesrow-URL"
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                >
                                                  <input
                                                    className="form-control"
                                                    disabled={false}
                                                    id="domainpropertiesrow-URL-1"
                                                    name="domainpropertiesrow-URL"
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                  />
                                                </FormControl>
                                              </div>
                                            </Col>
                                          </div>
                                        </div>
                                      </Row>
                                    </div>
                                  </NameAndLinkingOptions>
                                  <ConditionalFormattingAndValidation
                                    field={
                                      Immutable.Record {
                                        "conceptURI": undefined,
                                        "conditionalFormats": Immutable.List [],
                                        "defaultScale": undefined,
                                        "defaultValueType": undefined,
                                        "defaultValue": undefined,
                                        "defaultDisplayValue": undefined,
                                        "description": undefined,
                                        "dimension": undefined,
                                        "excludeFromShifting": false,
                                        "format": undefined,
                                        "hidden": false,
                                        "importAliases": undefined,
                                        "label": undefined,
                                        "lookupContainer": undefined,
                                        "lookupQuery": undefined,
                                        "lookupSchema": undefined,
                                        "lookupValidator": undefined,
                                        "measure": undefined,
                                        "mvEnabled": false,
                                        "name": undefined,
                                        "PHI": undefined,
                                        "primaryKey": undefined,
                                        "propertyId": undefined,
                                        "propertyURI": undefined,
                                        "propertyValidators": Immutable.List [],
                                        "rangeValidators": Immutable.List [],
                                        "rangeURI": undefined,
                                        "regexValidators": Immutable.List [],
                                        "recommendedVariable": false,
                                        "required": false,
                                        "scale": undefined,
                                        "URL": undefined,
                                        "shownInDetailsView": true,
                                        "shownInInsertView": true,
                                        "shownInUpdateView": true,
                                        "visible": true,
                                        "dataType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Text",
                                          "name": "string",
                                          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                          "alternateRangeURI": "xsd:string",
                                          "shortDisplay": "String",
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "lookupQueryValue": undefined,
                                        "lookupType": Immutable.Record {
                                          "conceptURI": undefined,
                                          "display": "Lookup",
                                          "name": "lookup",
                                          "rangeURI": undefined,
                                          "alternateRangeURI": undefined,
                                          "shortDisplay": undefined,
                                          "lookupSchema": undefined,
                                          "lookupQuery": undefined,
                                        },
                                        "original": Object {
                                          "dataType": Immutable.Record {
                                            "conceptURI": undefined,
                                            "display": "Text",
                                            "name": "string",
                                            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                            "alternateRangeURI": "xsd:string",
                                            "shortDisplay": "String",
                                            "lookupSchema": undefined,
                                            "lookupQuery": undefined,
                                          },
                                          "rangeURI": undefined,
                                        },
                                        "updatedField": false,
                                        "isPrimaryKey": false,
                                        "lockType": "NotLocked",
                                      }
                                    }
                                    index={1}
                                    onChange={[Function]}
                                    setDragDisabled={[Function]}
                                  >
                                    <div>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-field-section-heading domain-field-section-hdr"
                                              >
                                                Conditional Formatting and Validation Options
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                      <Row
                                        bsClass="row"
                                        className="domain-row-expanded"
                                        componentClass="div"
                                      >
                                        <div
                                          className="domain-row-expanded row"
                                        >
                                          <Col
                                            bsClass="col"
                                            componentClass="div"
                                            xs={12}
                                          >
                                            <div
                                              className="col-xs-12"
                                            >
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Conditional Format Criteria
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-conditionalFormat-1"
                                                    name="domainpropertiesrow-conditionalFormat"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-conditionalFormat-1"
                                                      name="domainpropertiesrow-conditionalFormat"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Format
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                              <div
                                                className="domain-validation-group"
                                              >
                                                <div
                                                  className="domain-field-label domain-no-wrap"
                                                >
                                                  Create Regular Expression Validator
                                                  <LabelHelpTip
                                                    body={[Function]}
                                                    id="tooltip"
                                                    title="Add Regex Validator"
                                                  >
                                                    <span
                                                      className="label-help-target"
                                                      onMouseOut={[Function]}
                                                      onMouseOver={[Function]}
                                                    >
                                                      <FontAwesomeIcon
                                                        border={false}
                                                        className="label-help-icon"
                                                        fixedWidth={false}
                                                        flip={null}
                                                        icon={
                                                          Object {
                                                            "icon": Array [
                                                              512,
                                                              512,
                                                              Array [],
                                                              "f059",
                                                              "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                                            ],
                                                            "iconName": "question-circle",
                                                            "prefix": "fas",
                                                          }
                                                        }
                                                        inverse={false}
                                                        listItem={false}
                                                        mask={null}
                                                        pull={null}
                                                        pulse={false}
                                                        rotation={null}
                                                        size={null}
                                                        spin={false}
                                                        symbol={false}
                                                        title=""
                                                        transform={null}
                                                      >
                                                        <svg
                                                          aria-hidden="true"
                                                          className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                          data-icon="question-circle"
                                                          data-prefix="fas"
                                                          focusable="false"
                                                          role="img"
                                                          style={Object {}}
                                                          viewBox="0 0 512 512"
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        >
                                                          <path
                                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                            fill="currentColor"
                                                            style={Object {}}
                                                          />
                                                        </svg>
                                                      </FontAwesomeIcon>
                                                      <Overlay
                                                        animation={[Function]}
                                                        placement="right"
                                                        rootClose={false}
                                                        show={false}
                                                        target={
                                                          <span
                                                            class="label-help-target"
                                                          >
                                                            <svg
                                                              aria-hidden="true"
                                                              class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                              data-icon="question-circle"
                                                              data-prefix="fas"
                                                              focusable="false"
                                                              role="img"
                                                              viewBox="0 0 512 512"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                            >
                                                              <path
                                                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                fill="currentColor"
                                                              />
                                                            </svg>
                                                          </span>
                                                        }
                                                      >
                                                        <Overlay
                                                          placement="right"
                                                          rootClose={false}
                                                          show={false}
                                                          target={
                                                            <span
                                                              class="label-help-target"
                                                            >
                                                              <svg
                                                                aria-hidden="true"
                                                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                                                data-icon="question-circle"
                                                                data-prefix="fas"
                                                                focusable="false"
                                                                role="img"
                                                                viewBox="0 0 512 512"
                                                                xmlns="http://www.w3.org/2000/svg"
                                                              >
                                                                <path
                                                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                                                  fill="currentColor"
                                                                />
                                                              </svg>
                                                            </span>
                                                          }
                                                          transition={[Function]}
                                                        />
                                                      </Overlay>
                                                    </span>
                                                  </LabelHelpTip>
                                                </div>
                                                <div>
                                                  <Button
                                                    active={false}
                                                    block={false}
                                                    bsClass="btn"
                                                    bsStyle="default"
                                                    className="domain-validation-button"
                                                    disabled={false}
                                                    id="domainpropertiesrow-regexValidator-1"
                                                    name="domainpropertiesrow-regexValidator"
                                                    onClick={[Function]}
                                                  >
                                                    <button
                                                      className="domain-validation-button btn btn-default"
                                                      disabled={false}
                                                      id="domainpropertiesrow-regexValidator-1"
                                                      name="domainpropertiesrow-regexValidator"
                                                      onClick={[Function]}
                                                      type="button"
                                                    >
                                                      Add Regex
                                                    </button>
                                                  </Button>
                                                  <span
                                                    className="domain-text-label"
                                                  >
                                                    None Set
                                                  </span>
                                                </div>
                                              </div>
                                            </div>
                                          </Col>
                                        </div>
                                      </Row>
                                    </div>
                                  </ConditionalFormattingAndValidation>
                                </div>
                              </div>
                            </DomainRowExpandedOptions>
                          </div>
                        </Transition>
                      </Collapse>
                    </div>
                  </Draggable>
                </ConnectFunction>
              </DomainRow>
              <AnimateInOut
                on={null}
                shouldAnimate={true}
              />
            </div>
          </Droppable>
        </ConnectFunction>
      </Provider>
    </App>
  </ErrorBoundary>
</DragDropContext>
`;
