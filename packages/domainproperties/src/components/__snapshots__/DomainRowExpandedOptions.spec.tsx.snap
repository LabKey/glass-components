// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DomainExpandedOptions Boolean data type 1`] = `
<DomainRowExpandedOptions
  field={
    Immutable.Record {
      "conceptURI": undefined,
      "conditionalFormats": Immutable.List [],
      "defaultScale": undefined,
      "defaultValueType": undefined,
      "defaultValue": undefined,
      "defaultDisplayValue": undefined,
      "description": undefined,
      "dimension": undefined,
      "excludeFromShifting": false,
      "format": undefined,
      "hidden": false,
      "importAliases": undefined,
      "label": undefined,
      "lookupContainer": undefined,
      "lookupQuery": undefined,
      "lookupSchema": undefined,
      "lookupValidator": undefined,
      "measure": undefined,
      "mvEnabled": false,
      "name": "key",
      "PHI": undefined,
      "primaryKey": undefined,
      "propertyId": 1,
      "propertyURI": "test",
      "propertyValidators": Immutable.List [],
      "rangeValidators": Immutable.List [],
      "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
      "regexValidators": Immutable.List [],
      "recommendedVariable": false,
      "required": false,
      "scale": undefined,
      "URL": undefined,
      "shownInDetailsView": true,
      "shownInInsertView": true,
      "shownInUpdateView": true,
      "visible": true,
      "dataType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Boolean",
        "name": "boolean",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
        "alternateRangeURI": "xsd:boolean",
        "shortDisplay": undefined,
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "lookupQueryValue": undefined,
      "lookupType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Lookup",
        "name": "lookup",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
        "alternateRangeURI": undefined,
        "shortDisplay": undefined,
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "original": Object {
        "dataType": Immutable.Record {
          "conceptURI": undefined,
          "display": "Boolean",
          "name": "boolean",
          "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
          "alternateRangeURI": "xsd:boolean",
          "shortDisplay": undefined,
          "lookupSchema": undefined,
          "lookupQuery": undefined,
        },
        "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
      },
      "updatedField": false,
      "isPrimaryKey": false,
      "lockType": "NotLocked",
    }
  }
  index={1}
  onChange={[MockFunction]}
  onMultiChange={[MockFunction]}
  setDragDisabled={[MockFunction]}
>
  <div
    className="domain-row-container"
  >
    <div
      className="domain-row-handle"
    />
    <div
      className="domain-row-container-expanded"
    >
      <BooleanFieldOptions
        index={1}
        label="Boolean Field Options"
        lockType="NotLocked"
        onChange={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading"
                  >
                    Boolean Field Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-label"
                  >
                    Format for Boolean Values
                    <LabelHelpTip
                      body={[Function]}
                      id="tooltip"
                      title="Format Strings"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="right"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={2}
              >
                <div
                  className="col-xs-2"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    disabled={false}
                    id="domainpropertiesrow-format-1"
                    name="domainpropertiesrow-scale"
                    onChange={[Function]}
                    type="text"
                    value=""
                  >
                    <input
                      className="form-control"
                      disabled={false}
                      id="domainpropertiesrow-format-1"
                      name="domainpropertiesrow-scale"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                  </FormControl>
                </div>
              </Col>
            </div>
          </Row>
        </div>
      </BooleanFieldOptions>
      <NameAndLinkingOptions
        field={
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "key",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": 1,
            "propertyURI": "test",
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Boolean",
              "name": "boolean",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
              "alternateRangeURI": "xsd:boolean",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Boolean",
                "name": "boolean",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                "alternateRangeURI": "xsd:boolean",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          }
        }
        index={1}
        onChange={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading domain-field-section-hdr"
                  >
                    Name and Linking Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <div>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={5}
                >
                  <div
                    className="col-xs-5"
                  >
                    <div
                      className="domain-field-label"
                    >
                      Description
                    </div>
                    <FormControl
                      bsClass="form-control"
                      className="form-control domain-field-textarea"
                      componentClass="textarea"
                      disabled={false}
                      id="domainpropertiesrow-description-1"
                      name="domainpropertiesrow-description"
                      onChange={[Function]}
                      placeholder="Add a description"
                      rows={4}
                      value=""
                    >
                      <textarea
                        className="form-control domain-field-textarea form-control"
                        disabled={false}
                        id="domainpropertiesrow-description-1"
                        name="domainpropertiesrow-description"
                        onChange={[Function]}
                        placeholder="Add a description"
                        rows={4}
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={3}
                >
                  <div
                    className="col-xs-3"
                  >
                    <div
                      className="domain-field-label"
                    >
                      Label
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-label-1"
                      name="domainpropertiesrow-label"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-label-1"
                        name="domainpropertiesrow-label"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                    <div
                      className="domain-field-label"
                    >
                      Import Aliases
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="Import Aliases"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-importAliases-1"
                      name="domainpropertiesrow-importAliases"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-importAliases-1"
                        name="domainpropertiesrow-importAliases"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={4}
                >
                  <div
                    className="col-xs-4"
                  >
                    <div
                      className="domain-field-label"
                    >
                      URL
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="URL"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-URL-1"
                      name="domainpropertiesrow-URL"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-URL-1"
                        name="domainpropertiesrow-URL"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
              </div>
            </div>
          </Row>
        </div>
      </NameAndLinkingOptions>
      <ConditionalFormattingAndValidation
        field={
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "key",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": 1,
            "propertyURI": "test",
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Boolean",
              "name": "boolean",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
              "alternateRangeURI": "xsd:boolean",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Boolean",
                "name": "boolean",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
                "alternateRangeURI": "xsd:boolean",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": "http://www.w3.org/2001/XMLSchema#boolean",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          }
        }
        index={1}
        onChange={[MockFunction]}
        setDragDisabled={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading domain-field-section-hdr"
                  >
                    Conditional Formatting and Validation Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-validation-group"
                  >
                    <div
                      className="domain-field-label domain-no-wrap"
                    >
                      Create Conditional Format Criteria
                    </div>
                    <div>
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="domain-validation-button"
                        disabled={false}
                        id="domainpropertiesrow-conditionalFormat-1"
                        name="domainpropertiesrow-conditionalFormat"
                        onClick={[Function]}
                      >
                        <button
                          className="domain-validation-button btn btn-default"
                          disabled={false}
                          id="domainpropertiesrow-conditionalFormat-1"
                          name="domainpropertiesrow-conditionalFormat"
                          onClick={[Function]}
                          type="button"
                        >
                          Add Format
                        </button>
                      </Button>
                      <span
                        className="domain-text-label"
                      >
                        None Set
                      </span>
                    </div>
                  </div>
                  <div
                    className="domain-validation-group"
                  >
                    <div
                      className="domain-field-label domain-no-wrap"
                    >
                      Create Regular Expression Validator
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="Add Regex Validator"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <div>
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="domain-validation-button"
                        disabled={false}
                        id="domainpropertiesrow-regexValidator-1"
                        name="domainpropertiesrow-regexValidator"
                        onClick={[Function]}
                      >
                        <button
                          className="domain-validation-button btn btn-default"
                          disabled={false}
                          id="domainpropertiesrow-regexValidator-1"
                          name="domainpropertiesrow-regexValidator"
                          onClick={[Function]}
                          type="button"
                        >
                          Add Regex
                        </button>
                      </Button>
                      <span
                        className="domain-text-label"
                      >
                        None Set
                      </span>
                    </div>
                  </div>
                </div>
              </Col>
            </div>
          </Row>
        </div>
      </ConditionalFormattingAndValidation>
    </div>
  </div>
</DomainRowExpandedOptions>
`;

exports[`DomainExpandedOptions Date/time data type 1`] = `
<DomainRowExpandedOptions
  field={
    Immutable.Record {
      "conceptURI": undefined,
      "conditionalFormats": Immutable.List [],
      "defaultScale": undefined,
      "defaultValueType": undefined,
      "defaultValue": undefined,
      "defaultDisplayValue": undefined,
      "description": undefined,
      "dimension": undefined,
      "excludeFromShifting": false,
      "format": undefined,
      "hidden": false,
      "importAliases": undefined,
      "label": undefined,
      "lookupContainer": undefined,
      "lookupQuery": undefined,
      "lookupSchema": undefined,
      "lookupValidator": undefined,
      "measure": undefined,
      "mvEnabled": false,
      "name": "key",
      "PHI": undefined,
      "primaryKey": undefined,
      "propertyId": 1,
      "propertyURI": "test",
      "propertyValidators": Immutable.List [],
      "rangeValidators": Immutable.List [],
      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
      "regexValidators": Immutable.List [],
      "recommendedVariable": false,
      "required": false,
      "scale": undefined,
      "URL": undefined,
      "shownInDetailsView": true,
      "shownInInsertView": true,
      "shownInUpdateView": true,
      "visible": true,
      "dataType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Date Time",
        "name": "dateTime",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
        "alternateRangeURI": "xsd:dateTime",
        "shortDisplay": undefined,
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "lookupQueryValue": undefined,
      "lookupType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Lookup",
        "name": "lookup",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
        "alternateRangeURI": undefined,
        "shortDisplay": undefined,
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "original": Object {
        "dataType": Immutable.Record {
          "conceptURI": undefined,
          "display": "Date Time",
          "name": "dateTime",
          "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
          "alternateRangeURI": "xsd:dateTime",
          "shortDisplay": undefined,
          "lookupSchema": undefined,
          "lookupQuery": undefined,
        },
        "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
      },
      "updatedField": false,
      "isPrimaryKey": false,
      "lockType": "NotLocked",
    }
  }
  index={1}
  onChange={[MockFunction]}
  onMultiChange={[MockFunction]}
  setDragDisabled={[MockFunction]}
>
  <div
    className="domain-row-container"
  >
    <div
      className="domain-row-handle"
    />
    <div
      className="domain-row-container-expanded"
    >
      <DateTimeFieldOptions
        excludeFromShifting={false}
        index={1}
        label="Date and Time Options"
        lockType="NotLocked"
        onChange={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading"
                  >
                    Date and Time Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={3}
              >
                <div
                  className="col-xs-3"
                >
                  <div
                    className="domain-field-label"
                  >
                    Format for Dates
                    <LabelHelpTip
                      body={[Function]}
                      id="tooltip"
                      title="Format String"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="right"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </div>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                xs={9}
              >
                <div
                  className="col-xs-9"
                >
                  <div
                    className="domain-field-label"
                  >
                    Participant Date Shifting
                    <LabelHelpTip
                      body={[Function]}
                      id="tooltip"
                      title="Participant Date Shifting"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="right"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={3}
              >
                <div
                  className="col-xs-3"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    disabled={false}
                    id="domainpropertiesrow-format-1"
                    name="domainpropertiesrow-format"
                    onChange={[Function]}
                    type="text"
                    value=""
                  >
                    <input
                      className="form-control"
                      disabled={false}
                      id="domainpropertiesrow-format-1"
                      name="domainpropertiesrow-format"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                  </FormControl>
                </div>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                xs={9}
              >
                <div
                  className="col-xs-9"
                >
                  <Checkbox
                    bsClass="checkbox"
                    checked={false}
                    className="domain-field-checkbox-margin"
                    disabled={false}
                    id="domainpropertiesrow-excludeFromShifting-1"
                    inline={false}
                    name="domainpropertiesrow-excludeFromShifting"
                    onChange={[Function]}
                    title=""
                    value="ExcludeFromShiftingOptions"
                  >
                    <div
                      className="domain-field-checkbox-margin checkbox"
                    >
                      <label
                        title=""
                      >
                        <input
                          checked={false}
                          disabled={false}
                          id="domainpropertiesrow-excludeFromShifting-1"
                          name="domainpropertiesrow-excludeFromShifting"
                          onChange={[Function]}
                          type="checkbox"
                          value="ExcludeFromShiftingOptions"
                        />
                        Do Not Shift Dates on Export or Publication
                      </label>
                    </div>
                  </Checkbox>
                </div>
              </Col>
            </div>
          </Row>
        </div>
      </DateTimeFieldOptions>
      <NameAndLinkingOptions
        field={
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "key",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": 1,
            "propertyURI": "test",
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Date Time",
              "name": "dateTime",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": "xsd:dateTime",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          }
        }
        index={1}
        onChange={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading domain-field-section-hdr"
                  >
                    Name and Linking Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <div>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={5}
                >
                  <div
                    className="col-xs-5"
                  >
                    <div
                      className="domain-field-label"
                    >
                      Description
                    </div>
                    <FormControl
                      bsClass="form-control"
                      className="form-control domain-field-textarea"
                      componentClass="textarea"
                      disabled={false}
                      id="domainpropertiesrow-description-1"
                      name="domainpropertiesrow-description"
                      onChange={[Function]}
                      placeholder="Add a description"
                      rows={4}
                      value=""
                    >
                      <textarea
                        className="form-control domain-field-textarea form-control"
                        disabled={false}
                        id="domainpropertiesrow-description-1"
                        name="domainpropertiesrow-description"
                        onChange={[Function]}
                        placeholder="Add a description"
                        rows={4}
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={3}
                >
                  <div
                    className="col-xs-3"
                  >
                    <div
                      className="domain-field-label"
                    >
                      Label
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-label-1"
                      name="domainpropertiesrow-label"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-label-1"
                        name="domainpropertiesrow-label"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                    <div
                      className="domain-field-label"
                    >
                      Import Aliases
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="Import Aliases"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-importAliases-1"
                      name="domainpropertiesrow-importAliases"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-importAliases-1"
                        name="domainpropertiesrow-importAliases"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={4}
                >
                  <div
                    className="col-xs-4"
                  >
                    <div
                      className="domain-field-label"
                    >
                      URL
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="URL"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-URL-1"
                      name="domainpropertiesrow-URL"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-URL-1"
                        name="domainpropertiesrow-URL"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
              </div>
            </div>
          </Row>
        </div>
      </NameAndLinkingOptions>
      <ConditionalFormattingAndValidation
        field={
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "key",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": 1,
            "propertyURI": "test",
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Date Time",
              "name": "dateTime",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": "xsd:dateTime",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          }
        }
        index={1}
        onChange={[MockFunction]}
        setDragDisabled={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading domain-field-section-hdr"
                  >
                    Conditional Formatting and Validation Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-validation-group"
                  >
                    <div
                      className="domain-field-label domain-no-wrap"
                    >
                      Create Conditional Format Criteria
                    </div>
                    <div>
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="domain-validation-button"
                        disabled={false}
                        id="domainpropertiesrow-conditionalFormat-1"
                        name="domainpropertiesrow-conditionalFormat"
                        onClick={[Function]}
                      >
                        <button
                          className="domain-validation-button btn btn-default"
                          disabled={false}
                          id="domainpropertiesrow-conditionalFormat-1"
                          name="domainpropertiesrow-conditionalFormat"
                          onClick={[Function]}
                          type="button"
                        >
                          Add Format
                        </button>
                      </Button>
                      <span
                        className="domain-text-label"
                      >
                        None Set
                      </span>
                    </div>
                  </div>
                  <div
                    className="domain-validation-group"
                  >
                    <div
                      className="domain-field-label domain-no-wrap"
                    >
                      Create Regular Expression Validator
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="Add Regex Validator"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <div>
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="domain-validation-button"
                        disabled={false}
                        id="domainpropertiesrow-regexValidator-1"
                        name="domainpropertiesrow-regexValidator"
                        onClick={[Function]}
                      >
                        <button
                          className="domain-validation-button btn btn-default"
                          disabled={false}
                          id="domainpropertiesrow-regexValidator-1"
                          name="domainpropertiesrow-regexValidator"
                          onClick={[Function]}
                          type="button"
                        >
                          Add Regex
                        </button>
                      </Button>
                      <span
                        className="domain-text-label"
                      >
                        None Set
                      </span>
                    </div>
                  </div>
                  <div
                    className=""
                  >
                    <div
                      className="domain-field-label domain-no-wrap"
                    >
                      Create Range Expression Validator
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="Add Range Validator"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <div>
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="domain-validation-button"
                        disabled={false}
                        id="domainpropertiesrow-rangeValidator-1"
                        name="domainpropertiesrow-rangeValidator"
                        onClick={[Function]}
                      >
                        <button
                          className="domain-validation-button btn btn-default"
                          disabled={false}
                          id="domainpropertiesrow-rangeValidator-1"
                          name="domainpropertiesrow-rangeValidator"
                          onClick={[Function]}
                          type="button"
                        >
                          Add Range
                        </button>
                      </Button>
                      <span
                        className="domain-text-label"
                      >
                        None Set
                      </span>
                    </div>
                  </div>
                </div>
              </Col>
            </div>
          </Row>
        </div>
      </ConditionalFormattingAndValidation>
    </div>
  </div>
</DomainRowExpandedOptions>
`;

exports[`DomainExpandedOptions Numeric data type 1`] = `
<DomainRowExpandedOptions
  field={
    Immutable.Record {
      "conceptURI": undefined,
      "conditionalFormats": Immutable.List [],
      "defaultScale": undefined,
      "defaultValueType": undefined,
      "defaultValue": undefined,
      "defaultDisplayValue": undefined,
      "description": undefined,
      "dimension": undefined,
      "excludeFromShifting": false,
      "format": undefined,
      "hidden": false,
      "importAliases": undefined,
      "label": undefined,
      "lookupContainer": undefined,
      "lookupQuery": undefined,
      "lookupSchema": undefined,
      "lookupValidator": undefined,
      "measure": undefined,
      "mvEnabled": false,
      "name": "key",
      "PHI": undefined,
      "primaryKey": undefined,
      "propertyId": 1,
      "propertyURI": "test",
      "propertyValidators": Immutable.List [],
      "rangeValidators": Immutable.List [],
      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
      "regexValidators": Immutable.List [],
      "recommendedVariable": false,
      "required": false,
      "scale": undefined,
      "URL": undefined,
      "shownInDetailsView": true,
      "shownInInsertView": true,
      "shownInUpdateView": true,
      "visible": true,
      "dataType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Integer",
        "name": "int",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
        "alternateRangeURI": "xsd:int",
        "shortDisplay": undefined,
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "lookupQueryValue": undefined,
      "lookupType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Lookup",
        "name": "lookup",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
        "alternateRangeURI": undefined,
        "shortDisplay": undefined,
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "original": Object {
        "dataType": Immutable.Record {
          "conceptURI": undefined,
          "display": "Integer",
          "name": "int",
          "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
          "alternateRangeURI": "xsd:int",
          "shortDisplay": undefined,
          "lookupSchema": undefined,
          "lookupQuery": undefined,
        },
        "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
      },
      "updatedField": false,
      "isPrimaryKey": false,
      "lockType": "NotLocked",
    }
  }
  index={1}
  onChange={[MockFunction]}
  onMultiChange={[MockFunction]}
  setDragDisabled={[MockFunction]}
>
  <div
    className="domain-row-container"
  >
    <div
      className="domain-row-handle"
    />
    <div
      className="domain-row-container-expanded"
    >
      <NumericFieldOptions
        index={1}
        label="Integer Options"
        lockType="NotLocked"
        onChange={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading"
                  >
                    Integer Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={2}
              >
                <div
                  className="col-xs-2"
                >
                  <div
                    className="domain-field-label"
                  >
                    Format Numeric Values
                    <LabelHelpTip
                      body={[Function]}
                      id="tooltip"
                      title="Format Strings"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="right"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </div>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                xs={2}
              >
                <div
                  className="col-xs-2"
                >
                  <div
                    className="domain-field-label"
                  >
                    Default Scale Type
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={2}
              >
                <div
                  className="col-xs-2"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    disabled={false}
                    id="domainpropertiesrow-format-1"
                    name="domainpropertiesrow-format"
                    onChange={[Function]}
                    type="text"
                    value=""
                  >
                    <input
                      className="form-control"
                      disabled={false}
                      id="domainpropertiesrow-format-1"
                      name="domainpropertiesrow-format"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                  </FormControl>
                </div>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                xs={2}
              >
                <div
                  className="col-xs-2"
                >
                  <FormControl
                    bsClass="form-control"
                    componentClass="select"
                    disabled={false}
                    id="domainpropertiesrow-defaultScale-1"
                    name="domainpropertiesrow-defaultScale"
                    onChange={[Function]}
                  >
                    <select
                      className="form-control"
                      disabled={false}
                      id="domainpropertiesrow-defaultScale-1"
                      name="domainpropertiesrow-defaultScale"
                      onChange={[Function]}
                    >
                      <option
                        key="domainpropertiesrow-defaultScaleoption-LINEAR-1"
                        value="LINEAR"
                      >
                        LINEAR
                      </option>
                      <option
                        key="domainpropertiesrow-defaultScaleoption-LOG-1"
                        value="LOG"
                      >
                        LOG
                      </option>
                    </select>
                  </FormControl>
                </div>
              </Col>
            </div>
          </Row>
        </div>
      </NumericFieldOptions>
      <NameAndLinkingOptions
        field={
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "key",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": 1,
            "propertyURI": "test",
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Integer",
              "name": "int",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": "xsd:int",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          }
        }
        index={1}
        onChange={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading domain-field-section-hdr"
                  >
                    Name and Linking Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <div>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={5}
                >
                  <div
                    className="col-xs-5"
                  >
                    <div
                      className="domain-field-label"
                    >
                      Description
                    </div>
                    <FormControl
                      bsClass="form-control"
                      className="form-control domain-field-textarea"
                      componentClass="textarea"
                      disabled={false}
                      id="domainpropertiesrow-description-1"
                      name="domainpropertiesrow-description"
                      onChange={[Function]}
                      placeholder="Add a description"
                      rows={4}
                      value=""
                    >
                      <textarea
                        className="form-control domain-field-textarea form-control"
                        disabled={false}
                        id="domainpropertiesrow-description-1"
                        name="domainpropertiesrow-description"
                        onChange={[Function]}
                        placeholder="Add a description"
                        rows={4}
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={3}
                >
                  <div
                    className="col-xs-3"
                  >
                    <div
                      className="domain-field-label"
                    >
                      Label
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-label-1"
                      name="domainpropertiesrow-label"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-label-1"
                        name="domainpropertiesrow-label"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                    <div
                      className="domain-field-label"
                    >
                      Import Aliases
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="Import Aliases"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-importAliases-1"
                      name="domainpropertiesrow-importAliases"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-importAliases-1"
                        name="domainpropertiesrow-importAliases"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={4}
                >
                  <div
                    className="col-xs-4"
                  >
                    <div
                      className="domain-field-label"
                    >
                      URL
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="URL"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-URL-1"
                      name="domainpropertiesrow-URL"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-URL-1"
                        name="domainpropertiesrow-URL"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
              </div>
            </div>
          </Row>
        </div>
      </NameAndLinkingOptions>
      <ConditionalFormattingAndValidation
        field={
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "key",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": 1,
            "propertyURI": "test",
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Integer",
              "name": "int",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": "xsd:int",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          }
        }
        index={1}
        onChange={[MockFunction]}
        setDragDisabled={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading domain-field-section-hdr"
                  >
                    Conditional Formatting and Validation Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-validation-group"
                  >
                    <div
                      className="domain-field-label domain-no-wrap"
                    >
                      Create Conditional Format Criteria
                    </div>
                    <div>
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="domain-validation-button"
                        disabled={false}
                        id="domainpropertiesrow-conditionalFormat-1"
                        name="domainpropertiesrow-conditionalFormat"
                        onClick={[Function]}
                      >
                        <button
                          className="domain-validation-button btn btn-default"
                          disabled={false}
                          id="domainpropertiesrow-conditionalFormat-1"
                          name="domainpropertiesrow-conditionalFormat"
                          onClick={[Function]}
                          type="button"
                        >
                          Add Format
                        </button>
                      </Button>
                      <span
                        className="domain-text-label"
                      >
                        None Set
                      </span>
                    </div>
                  </div>
                  <div
                    className="domain-validation-group"
                  >
                    <div
                      className="domain-field-label domain-no-wrap"
                    >
                      Create Regular Expression Validator
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="Add Regex Validator"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <div>
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="domain-validation-button"
                        disabled={false}
                        id="domainpropertiesrow-regexValidator-1"
                        name="domainpropertiesrow-regexValidator"
                        onClick={[Function]}
                      >
                        <button
                          className="domain-validation-button btn btn-default"
                          disabled={false}
                          id="domainpropertiesrow-regexValidator-1"
                          name="domainpropertiesrow-regexValidator"
                          onClick={[Function]}
                          type="button"
                        >
                          Add Regex
                        </button>
                      </Button>
                      <span
                        className="domain-text-label"
                      >
                        None Set
                      </span>
                    </div>
                  </div>
                  <div
                    className=""
                  >
                    <div
                      className="domain-field-label domain-no-wrap"
                    >
                      Create Range Expression Validator
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="Add Range Validator"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <div>
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="domain-validation-button"
                        disabled={false}
                        id="domainpropertiesrow-rangeValidator-1"
                        name="domainpropertiesrow-rangeValidator"
                        onClick={[Function]}
                      >
                        <button
                          className="domain-validation-button btn btn-default"
                          disabled={false}
                          id="domainpropertiesrow-rangeValidator-1"
                          name="domainpropertiesrow-rangeValidator"
                          onClick={[Function]}
                          type="button"
                        >
                          Add Range
                        </button>
                      </Button>
                      <span
                        className="domain-text-label"
                      >
                        None Set
                      </span>
                    </div>
                  </div>
                </div>
              </Col>
            </div>
          </Row>
        </div>
      </ConditionalFormattingAndValidation>
    </div>
  </div>
</DomainRowExpandedOptions>
`;

exports[`DomainExpandedOptions Text data type 1`] = `
<DomainRowExpandedOptions
  field={
    Immutable.Record {
      "conceptURI": undefined,
      "conditionalFormats": Immutable.List [],
      "defaultScale": undefined,
      "defaultValueType": undefined,
      "defaultValue": undefined,
      "defaultDisplayValue": undefined,
      "description": undefined,
      "dimension": undefined,
      "excludeFromShifting": false,
      "format": undefined,
      "hidden": false,
      "importAliases": undefined,
      "label": undefined,
      "lookupContainer": undefined,
      "lookupQuery": undefined,
      "lookupSchema": undefined,
      "lookupValidator": undefined,
      "measure": undefined,
      "mvEnabled": false,
      "name": "key",
      "PHI": undefined,
      "primaryKey": undefined,
      "propertyId": 1,
      "propertyURI": "test",
      "propertyValidators": Immutable.List [],
      "rangeValidators": Immutable.List [],
      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
      "regexValidators": Immutable.List [],
      "recommendedVariable": false,
      "required": false,
      "scale": undefined,
      "URL": undefined,
      "shownInDetailsView": true,
      "shownInInsertView": true,
      "shownInUpdateView": true,
      "visible": true,
      "dataType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Text (String)",
        "name": "string",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
        "alternateRangeURI": "xsd:string",
        "shortDisplay": "String",
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "lookupQueryValue": undefined,
      "lookupType": Immutable.Record {
        "conceptURI": undefined,
        "display": "Lookup",
        "name": "lookup",
        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
        "alternateRangeURI": undefined,
        "shortDisplay": undefined,
        "lookupSchema": undefined,
        "lookupQuery": undefined,
      },
      "original": Object {
        "dataType": Immutable.Record {
          "conceptURI": undefined,
          "display": "Text (String)",
          "name": "string",
          "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
          "alternateRangeURI": "xsd:string",
          "shortDisplay": "String",
          "lookupSchema": undefined,
          "lookupQuery": undefined,
        },
        "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
      },
      "updatedField": false,
      "isPrimaryKey": false,
      "lockType": "NotLocked",
    }
  }
  index={1}
  onChange={[MockFunction]}
  onMultiChange={[MockFunction]}
  setDragDisabled={[MockFunction]}
>
  <div
    className="domain-row-container"
  >
    <div
      className="domain-row-handle"
    />
    <div
      className="domain-row-container-expanded"
    >
      <TextFieldOptions
        index={1}
        label="Text Options"
        lockType="NotLocked"
        onChange={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading"
                  >
                    Text Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded "
            componentClass="div"
          >
            <div
              className="domain-row-expanded  row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-label"
                  >
                    Max Text Character Count
                    <LabelHelpTip
                      body={[Function]}
                      id="tooltip"
                      title="Max Text Length"
                    >
                      <span
                        className="label-help-target"
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                      >
                        <FontAwesomeIcon
                          border={false}
                          className="label-help-icon"
                          fixedWidth={false}
                          flip={null}
                          icon={
                            Object {
                              "icon": Array [
                                512,
                                512,
                                Array [],
                                "f059",
                                "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                              ],
                              "iconName": "question-circle",
                              "prefix": "fas",
                            }
                          }
                          inverse={false}
                          listItem={false}
                          mask={null}
                          pull={null}
                          pulse={false}
                          rotation={null}
                          size={null}
                          spin={false}
                          symbol={false}
                          title=""
                          transform={null}
                        >
                          <svg
                            aria-hidden="true"
                            className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                            data-icon="question-circle"
                            data-prefix="fas"
                            focusable="false"
                            role="img"
                            style={Object {}}
                            viewBox="0 0 512 512"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                              fill="currentColor"
                              style={Object {}}
                            />
                          </svg>
                        </FontAwesomeIcon>
                        <Overlay
                          animation={[Function]}
                          placement="right"
                          rootClose={false}
                          show={false}
                          target={
                            <span
                              class="label-help-target"
                            >
                              <svg
                                aria-hidden="true"
                                class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                data-icon="question-circle"
                                data-prefix="fas"
                                focusable="false"
                                role="img"
                                viewBox="0 0 512 512"
                                xmlns="http://www.w3.org/2000/svg"
                              >
                                <path
                                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                  fill="currentColor"
                                />
                              </svg>
                            </span>
                          }
                        >
                          <Overlay
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                            transition={[Function]}
                          />
                        </Overlay>
                      </span>
                    </LabelHelpTip>
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                className="domain-text-options-col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="domain-text-options-col col-xs-12"
                >
                  <input
                    checked={true}
                    className="domain-text-options-radio1 domain-field-float-left"
                    disabled={false}
                    id="domainpropertiesrow-maxLength-1"
                    name="domainpropertiesrow-maxLength"
                    onChange={[Function]}
                    type="radio"
                    value="maxLength"
                  />
                  <div
                    className="domain-text-label"
                  >
                    Allow max character count
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <input
                    checked={false}
                    className="domain-text-options-radio2 domain-field-float-left"
                    id="domainpropertiesrow-customLength-1"
                    name="domainpropertiesrow-customLength"
                    onChange={[Function]}
                    type="radio"
                    value="customLength"
                  />
                  <span
                    className="domain-text-options-length domain-field-float-left domain-text-label"
                  >
                    Set character count to
                  </span>
                  <FormControl
                    bsClass="form-control"
                    componentClass="input"
                    disabled={true}
                    id="domainpropertiesrow-scale-1"
                    name="domainpropertiesrow-scale"
                    onChange={[Function]}
                    style={
                      Object {
                        "width": "60px",
                      }
                    }
                    type="text"
                    value={4000}
                  >
                    <input
                      className="form-control"
                      disabled={true}
                      id="domainpropertiesrow-scale-1"
                      name="domainpropertiesrow-scale"
                      onChange={[Function]}
                      style={
                        Object {
                          "width": "60px",
                        }
                      }
                      type="text"
                      value={4000}
                    />
                  </FormControl>
                </div>
              </Col>
            </div>
          </Row>
        </div>
      </TextFieldOptions>
      <NameAndLinkingOptions
        field={
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "key",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": 1,
            "propertyURI": "test",
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text (String)",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text (String)",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          }
        }
        index={1}
        onChange={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading domain-field-section-hdr"
                  >
                    Name and Linking Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <div>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={5}
                >
                  <div
                    className="col-xs-5"
                  >
                    <div
                      className="domain-field-label"
                    >
                      Description
                    </div>
                    <FormControl
                      bsClass="form-control"
                      className="form-control domain-field-textarea"
                      componentClass="textarea"
                      disabled={false}
                      id="domainpropertiesrow-description-1"
                      name="domainpropertiesrow-description"
                      onChange={[Function]}
                      placeholder="Add a description"
                      rows={4}
                      value=""
                    >
                      <textarea
                        className="form-control domain-field-textarea form-control"
                        disabled={false}
                        id="domainpropertiesrow-description-1"
                        name="domainpropertiesrow-description"
                        onChange={[Function]}
                        placeholder="Add a description"
                        rows={4}
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={3}
                >
                  <div
                    className="col-xs-3"
                  >
                    <div
                      className="domain-field-label"
                    >
                      Label
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-label-1"
                      name="domainpropertiesrow-label"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-label-1"
                        name="domainpropertiesrow-label"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                    <div
                      className="domain-field-label"
                    >
                      Import Aliases
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="Import Aliases"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-importAliases-1"
                      name="domainpropertiesrow-importAliases"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-importAliases-1"
                        name="domainpropertiesrow-importAliases"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  xs={4}
                >
                  <div
                    className="col-xs-4"
                  >
                    <div
                      className="domain-field-label"
                    >
                      URL
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="URL"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <FormControl
                      bsClass="form-control"
                      componentClass="input"
                      disabled={false}
                      id="domainpropertiesrow-URL-1"
                      name="domainpropertiesrow-URL"
                      onChange={[Function]}
                      type="text"
                      value=""
                    >
                      <input
                        className="form-control"
                        disabled={false}
                        id="domainpropertiesrow-URL-1"
                        name="domainpropertiesrow-URL"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </FormControl>
                  </div>
                </Col>
              </div>
            </div>
          </Row>
        </div>
      </NameAndLinkingOptions>
      <ConditionalFormattingAndValidation
        field={
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "key",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": 1,
            "propertyURI": "test",
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text (String)",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text (String)",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          }
        }
        index={1}
        onChange={[MockFunction]}
        setDragDisabled={[MockFunction]}
      >
        <div>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-field-section-heading domain-field-section-hdr"
                  >
                    Conditional Formatting and Validation Options
                  </div>
                </div>
              </Col>
            </div>
          </Row>
          <Row
            bsClass="row"
            className="domain-row-expanded"
            componentClass="div"
          >
            <div
              className="domain-row-expanded row"
            >
              <Col
                bsClass="col"
                componentClass="div"
                xs={12}
              >
                <div
                  className="col-xs-12"
                >
                  <div
                    className="domain-validation-group"
                  >
                    <div
                      className="domain-field-label domain-no-wrap"
                    >
                      Create Conditional Format Criteria
                    </div>
                    <div>
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="domain-validation-button"
                        disabled={false}
                        id="domainpropertiesrow-conditionalFormat-1"
                        name="domainpropertiesrow-conditionalFormat"
                        onClick={[Function]}
                      >
                        <button
                          className="domain-validation-button btn btn-default"
                          disabled={false}
                          id="domainpropertiesrow-conditionalFormat-1"
                          name="domainpropertiesrow-conditionalFormat"
                          onClick={[Function]}
                          type="button"
                        >
                          Add Format
                        </button>
                      </Button>
                      <span
                        className="domain-text-label"
                      >
                        None Set
                      </span>
                    </div>
                  </div>
                  <div
                    className="domain-validation-group"
                  >
                    <div
                      className="domain-field-label domain-no-wrap"
                    >
                      Create Regular Expression Validator
                      <LabelHelpTip
                        body={[Function]}
                        id="tooltip"
                        title="Add Regex Validator"
                      >
                        <span
                          className="label-help-target"
                          onMouseOut={[Function]}
                          onMouseOver={[Function]}
                        >
                          <FontAwesomeIcon
                            border={false}
                            className="label-help-icon"
                            fixedWidth={false}
                            flip={null}
                            icon={
                              Object {
                                "icon": Array [
                                  512,
                                  512,
                                  Array [],
                                  "f059",
                                  "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                ],
                                "iconName": "question-circle",
                                "prefix": "fas",
                              }
                            }
                            inverse={false}
                            listItem={false}
                            mask={null}
                            pull={null}
                            pulse={false}
                            rotation={null}
                            size={null}
                            spin={false}
                            symbol={false}
                            title=""
                            transform={null}
                          >
                            <svg
                              aria-hidden="true"
                              className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                              data-icon="question-circle"
                              data-prefix="fas"
                              focusable="false"
                              role="img"
                              style={Object {}}
                              viewBox="0 0 512 512"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                fill="currentColor"
                                style={Object {}}
                              />
                            </svg>
                          </FontAwesomeIcon>
                          <Overlay
                            animation={[Function]}
                            placement="right"
                            rootClose={false}
                            show={false}
                            target={
                              <span
                                class="label-help-target"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                  data-icon="question-circle"
                                  data-prefix="fas"
                                  focusable="false"
                                  role="img"
                                  viewBox="0 0 512 512"
                                  xmlns="http://www.w3.org/2000/svg"
                                >
                                  <path
                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                    fill="currentColor"
                                  />
                                </svg>
                              </span>
                            }
                          >
                            <Overlay
                              placement="right"
                              rootClose={false}
                              show={false}
                              target={
                                <span
                                  class="label-help-target"
                                >
                                  <svg
                                    aria-hidden="true"
                                    class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                    data-icon="question-circle"
                                    data-prefix="fas"
                                    focusable="false"
                                    role="img"
                                    viewBox="0 0 512 512"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                      fill="currentColor"
                                    />
                                  </svg>
                                </span>
                              }
                              transition={[Function]}
                            />
                          </Overlay>
                        </span>
                      </LabelHelpTip>
                    </div>
                    <div>
                      <Button
                        active={false}
                        block={false}
                        bsClass="btn"
                        bsStyle="default"
                        className="domain-validation-button"
                        disabled={false}
                        id="domainpropertiesrow-regexValidator-1"
                        name="domainpropertiesrow-regexValidator"
                        onClick={[Function]}
                      >
                        <button
                          className="domain-validation-button btn btn-default"
                          disabled={false}
                          id="domainpropertiesrow-regexValidator-1"
                          name="domainpropertiesrow-regexValidator"
                          onClick={[Function]}
                          type="button"
                        >
                          Add Regex
                        </button>
                      </Button>
                      <span
                        className="domain-text-label"
                      >
                        None Set
                      </span>
                    </div>
                  </div>
                </div>
              </Col>
            </div>
          </Row>
        </div>
      </ConditionalFormattingAndValidation>
    </div>
  </div>
</DomainRowExpandedOptions>
`;
