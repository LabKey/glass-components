// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssayDesignerPanels basePropertiesOnly for new assay 1`] = `
<AssayDesignerPanels
  basePropertiesOnly={true}
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <AssayPropertiesPanel
    asPanel={true}
    basePropertiesOnly={true}
    collapsible={false}
    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
    initCollapsed={false}
    markComplete={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    panelCls="panel-active"
  >
    <Uncontrolled(Panel)
      className="domain-form-panel panel-active"
    >
      <Panel
        bsClass="panel"
        bsStyle="default"
        className="domain-form-panel panel-active"
        onToggle={[Function]}
      >
        <div
          className="domain-form-panel panel-active panel panel-default"
        >
          <PanelHeading
            bsClass="panel"
            className=""
            componentClass="div"
            onClick={[Function]}
          >
            <div
              className="panel-heading"
              onClick={[Function]}
            >
              <span>
                Assay Properties
              </span>
            </div>
          </PanelHeading>
          <PanelBody
            bsClass="panel"
            collapsible={false}
          >
            <div
              className="panel-body"
            >
              <Form
                bsClass="form"
                componentClass="form"
                horizontal={false}
                inline={false}
              >
                <form
                  className=""
                >
                  <SectionHeading
                    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                    title="Basic Properties"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={9}
                        >
                          <div
                            className="col-xs-9"
                          >
                            <div
                              className="domain-field-section-heading"
                            >
                              Basic Properties
                            </div>
                          </div>
                        </Col>
                        <HelpURL
                          helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              <a
                                className="domain-field-float-right"
                                href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                target="_blank"
                              >
                                Learn more about designing assays
                              </a>
                            </div>
                          </Col>
                        </HelpURL>
                      </div>
                    </Row>
                  </SectionHeading>
                  <NameInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": false,
                        "allowEditableResults": false,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": false,
                        "description": undefined,
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Run Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Data Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": false,
                        "editableRuns": false,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": undefined,
                        "protocolId": undefined,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": "General",
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Name"
                      required={true}
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Name
                               *
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Name"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <FormControl
                                bsClass="form-control"
                                componentClass="input"
                                disabled={false}
                                id="assay-design-name"
                                onChange={[Function]}
                                placeholder="Enter a name for this assay"
                                type="text"
                                value=""
                              >
                                <input
                                  className="form-control"
                                  disabled={false}
                                  id="assay-design-name"
                                  onChange={[Function]}
                                  placeholder="Enter a name for this assay"
                                  type="text"
                                  value=""
                                />
                              </FormControl>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </NameInput>
                  <DescriptionInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": false,
                        "allowEditableResults": false,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": false,
                        "description": undefined,
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Run Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Data Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": false,
                        "editableRuns": false,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": undefined,
                        "protocolId": undefined,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": "General",
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Description"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Description
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Description"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <textarea
                                className="form-control domain-field-textarea"
                                id="assay-design-description"
                                onChange={[Function]}
                                placeholder="Add a description"
                                value=""
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </DescriptionInput>
                  <SectionHeading
                    paddingTop={true}
                    title="Editing Settings"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <div
                              className="domain-field-section-heading domain-field-padding-top"
                            >
                              Editing Settings
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </SectionHeading>
                  <EditableRunsInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": false,
                        "allowEditableResults": false,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": false,
                        "description": undefined,
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Run Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Data Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": false,
                        "editableRuns": false,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": undefined,
                        "protocolId": undefined,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": "General",
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Editable Runs"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Editable Runs
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Editable Runs"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <input
                                checked={false}
                                id="assay-design-editableRuns"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </EditableRunsInput>
                </form>
              </Form>
            </div>
          </PanelBody>
        </div>
      </Panel>
    </Uncontrolled(Panel)>
  </AssayPropertiesPanel>
  <DomainForm
    collapsible={false}
    domain={
      Immutable.Record {
        "name": "Batch Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    helpURL={null}
    initCollapsed={true}
    key="0"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={false}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={false}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className=""
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Batch Fields
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    collapsible={false}
    domain={
      Immutable.Record {
        "name": "Run Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    helpURL={null}
    initCollapsed={true}
    key="1"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={false}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={false}
        domain={
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className=""
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Run Fields
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    collapsible={false}
    domain={
      Immutable.Record {
        "name": "Data Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    helpURL={null}
    initCollapsed={true}
    key="2"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={true}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={false}
        domain={
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={true}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className=""
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Results Fields
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <WizardNavButtons
    canCancel={true}
    canFinish={false}
    canNextStep={false}
    canPreviousStep={false}
    cancel={[Function]}
    cancelText="Cancel"
    containerClassName=""
    finish={false}
    finishStyle="success"
    finishText="Finish"
    includeNext={true}
    isFinishedText="Finished"
    isFinishing={false}
    isFinishingText="Finishing..."
    nextStep={[Function]}
    nextStyle="success"
    previousStep={[Function]}
  >
    <div
      className="form-group no-margin-bottom"
    >
      <div
        className=""
      >
        <div
          className="pull-left"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
          >
            <button
              className="btn btn-default"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              Cancel
            </button>
          </Button>
        </div>
        <div
          className="btn-group pull-right"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={true}
            onClick={[Function]}
          >
            <button
              className="btn btn-default"
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              Back
            </button>
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="success"
            disabled={true}
            onClick={[Function]}
            type="submit"
          >
            <button
              className="btn btn-success"
              disabled={true}
              onClick={[Function]}
              type="submit"
            >
              Next
            </button>
          </Button>
        </div>
      </div>
    </div>
  </WizardNavButtons>
</AssayDesignerPanels>
`;

exports[`AssayDesignerPanels basePropertiesOnly with initModel 1`] = `
<AssayDesignerPanels
  basePropertiesOnly={true}
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": true,
      "allowEditableResults": true,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": true,
      "description": "My assay protocol for you all to use.",
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": true,
      "editableRuns": true,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": "Test Assay Protocol",
      "protocolId": 1,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": undefined,
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <AssayPropertiesPanel
    asPanel={true}
    basePropertiesOnly={true}
    collapsible={true}
    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
    initCollapsed={false}
    markComplete={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": true,
        "allowEditableResults": true,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": true,
        "description": "My assay protocol for you all to use.",
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": true,
        "editableRuns": true,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": "Test Assay Protocol",
        "protocolId": 1,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": undefined,
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    panelCls=""
  >
    <Uncontrolled(Panel)
      className="domain-form-panel"
    >
      <Panel
        bsClass="panel"
        bsStyle="default"
        className="domain-form-panel"
        onToggle={[Function]}
      >
        <div
          className="domain-form-panel panel panel-default"
        >
          <PanelHeading
            bsClass="panel"
            className="domain-heading-collapsible"
            componentClass="div"
            onClick={[Function]}
          >
            <div
              className="domain-heading-collapsible panel-heading"
              onClick={[Function]}
            >
              <span>
                Assay Properties
              </span>
              <span
                className="pull-right"
              >
                <FontAwesomeIcon
                  border={false}
                  className="domain-form-expand-btn"
                  fixedWidth={false}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        448,
                        512,
                        Array [],
                        "f146",
                        "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z",
                      ],
                      "iconName": "minus-square",
                      "prefix": "fas",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size="lg"
                  spin={false}
                  symbol={false}
                  title=""
                  transform={null}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-expand-btn"
                    data-icon="minus-square"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 448 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </FontAwesomeIcon>
              </span>
            </div>
          </PanelHeading>
          <PanelBody
            bsClass="panel"
            collapsible={false}
          >
            <div
              className="panel-body"
            >
              <Form
                bsClass="form"
                componentClass="form"
                horizontal={false}
                inline={false}
              >
                <form
                  className=""
                >
                  <SectionHeading
                    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                    title="Basic Properties"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={9}
                        >
                          <div
                            className="col-xs-9"
                          >
                            <div
                              className="domain-field-section-heading"
                            >
                              Basic Properties
                            </div>
                          </div>
                        </Col>
                        <HelpURL
                          helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              <a
                                className="domain-field-float-right"
                                href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                target="_blank"
                              >
                                Learn more about designing assays
                              </a>
                            </div>
                          </Col>
                        </HelpURL>
                      </div>
                    </Row>
                  </SectionHeading>
                  <NameInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Name"
                      required={true}
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Name
                               *
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Name"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <FormControl
                                bsClass="form-control"
                                componentClass="input"
                                disabled={true}
                                id="assay-design-name"
                                onChange={[Function]}
                                placeholder="Enter a name for this assay"
                                type="text"
                                value="Test Assay Protocol"
                              >
                                <input
                                  className="form-control"
                                  disabled={true}
                                  id="assay-design-name"
                                  onChange={[Function]}
                                  placeholder="Enter a name for this assay"
                                  type="text"
                                  value="Test Assay Protocol"
                                />
                              </FormControl>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </NameInput>
                  <DescriptionInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Description"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Description
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Description"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <textarea
                                className="form-control domain-field-textarea"
                                id="assay-design-description"
                                onChange={[Function]}
                                placeholder="Add a description"
                                value="My assay protocol for you all to use."
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </DescriptionInput>
                  <SectionHeading
                    paddingTop={true}
                    title="Editing Settings"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <div
                              className="domain-field-section-heading domain-field-padding-top"
                            >
                              Editing Settings
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </SectionHeading>
                  <EditableRunsInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Editable Runs"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Editable Runs
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Editable Runs"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <input
                                checked={true}
                                id="assay-design-editableRuns"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </EditableRunsInput>
                  <EditableResultsInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Editable Results"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Editable Results
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Editable Results"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <input
                                checked={true}
                                id="assay-design-editableResults"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </EditableResultsInput>
                </form>
              </Form>
            </div>
          </PanelBody>
        </div>
      </Panel>
    </Uncontrolled(Panel)>
  </AssayPropertiesPanel>
  <DomainForm
    collapsible={true}
    domain={
      Immutable.Record {
        "name": "Batch Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    headerPrefix="Test Assay Protocol"
    helpURL={null}
    initCollapsed={true}
    key="0"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={false}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={true}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        headerPrefix="Test Assay Protocol"
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className="domain-heading-collapsible"
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="domain-heading-collapsible panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Batch Fields
                  </span>
                  <span
                    className="pull-right"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className="domain-form-expand-btn"
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            448,
                            512,
                            Array [],
                            "f0fe",
                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                          ],
                          "iconName": "plus-square",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size="lg"
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                        data-icon="plus-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    collapsible={true}
    domain={
      Immutable.Record {
        "name": "Sample Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field1",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:string",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field2",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:int",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Integer",
              "name": "int",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": "xsd:int",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:int",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field3",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:dateTime",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Date Time",
              "name": "dateTime",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": "xsd:dateTime",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:dateTime",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          },
        ],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    headerPrefix="Test Assay Protocol"
    helpURL={null}
    initCollapsed={true}
    key="1"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={false}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={true}
        domain={
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        headerPrefix="Test Assay Protocol"
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className="domain-heading-collapsible"
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="domain-heading-collapsible panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Sample Fields (3)
                  </span>
                  <span
                    className="pull-right"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className="domain-form-expand-btn"
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            448,
                            512,
                            Array [],
                            "f0fe",
                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                          ],
                          "iconName": "plus-square",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size="lg"
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                        data-icon="plus-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <WizardNavButtons
    canCancel={true}
    canFinish={true}
    canNextStep={true}
    canPreviousStep={false}
    cancel={[Function]}
    cancelText="Cancel"
    containerClassName=""
    finish={true}
    finishStyle="success"
    finishText="Finish"
    includeNext={false}
    isFinishedText="Finished"
    isFinishing={false}
    isFinishingText="Finishing..."
    nextStep={[Function]}
    nextStyle="success"
  >
    <div
      className="form-group no-margin-bottom"
    >
      <div
        className=""
      >
        <div
          className="pull-left"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
          >
            <button
              className="btn btn-default"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              Cancel
            </button>
          </Button>
        </div>
        <div
          className="btn-group pull-right"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="success"
            disabled={false}
            onClick={[Function]}
            type="submit"
          >
            <button
              className="btn btn-success"
              disabled={false}
              onClick={[Function]}
              type="submit"
            >
              Finish
            </button>
          </Button>
        </div>
      </div>
    </div>
  </WizardNavButtons>
</AssayDesignerPanels>
`;

exports[`AssayDesignerPanels default properties 1`] = `
<AssayDesignerPanels
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <AssayPropertiesPanel
    asPanel={true}
    basePropertiesOnly={false}
    collapsible={false}
    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
    initCollapsed={false}
    markComplete={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    panelCls="panel-active"
  >
    <Uncontrolled(Panel)
      className="domain-form-panel panel-active"
    >
      <Panel
        bsClass="panel"
        bsStyle="default"
        className="domain-form-panel panel-active"
        onToggle={[Function]}
      >
        <div
          className="domain-form-panel panel-active panel panel-default"
        >
          <PanelHeading
            bsClass="panel"
            className=""
            componentClass="div"
            onClick={[Function]}
          >
            <div
              className="panel-heading"
              onClick={[Function]}
            >
              <span>
                Assay Properties
              </span>
            </div>
          </PanelHeading>
          <PanelBody
            bsClass="panel"
            collapsible={false}
          >
            <div
              className="panel-body"
            >
              <Form
                bsClass="form"
                componentClass="form"
                horizontal={false}
                inline={false}
              >
                <form
                  className=""
                >
                  <SectionHeading
                    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                    title="Basic Properties"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={9}
                        >
                          <div
                            className="col-xs-9"
                          >
                            <div
                              className="domain-field-section-heading"
                            >
                              Basic Properties
                            </div>
                          </div>
                        </Col>
                        <HelpURL
                          helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              <a
                                className="domain-field-float-right"
                                href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                target="_blank"
                              >
                                Learn more about designing assays
                              </a>
                            </div>
                          </Col>
                        </HelpURL>
                      </div>
                    </Row>
                  </SectionHeading>
                  <NameInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": false,
                        "allowEditableResults": false,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": false,
                        "description": undefined,
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Run Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Data Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": false,
                        "editableRuns": false,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": undefined,
                        "protocolId": undefined,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": "General",
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Name"
                      required={true}
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Name
                               *
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Name"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <FormControl
                                bsClass="form-control"
                                componentClass="input"
                                disabled={false}
                                id="assay-design-name"
                                onChange={[Function]}
                                placeholder="Enter a name for this assay"
                                type="text"
                                value=""
                              >
                                <input
                                  className="form-control"
                                  disabled={false}
                                  id="assay-design-name"
                                  onChange={[Function]}
                                  placeholder="Enter a name for this assay"
                                  type="text"
                                  value=""
                                />
                              </FormControl>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </NameInput>
                  <DescriptionInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": false,
                        "allowEditableResults": false,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": false,
                        "description": undefined,
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Run Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Data Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": false,
                        "editableRuns": false,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": undefined,
                        "protocolId": undefined,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": "General",
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Description"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Description
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Description"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <textarea
                                className="form-control domain-field-textarea"
                                id="assay-design-description"
                                onChange={[Function]}
                                placeholder="Add a description"
                                value=""
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </DescriptionInput>
                  <SectionHeading
                    paddingTop={true}
                    title="Import Settings"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <div
                              className="domain-field-section-heading domain-field-padding-top"
                            >
                              Import Settings
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </SectionHeading>
                  <AutoCopyDataInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": false,
                        "allowEditableResults": false,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": false,
                        "description": undefined,
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Run Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Data Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": false,
                        "editableRuns": false,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": undefined,
                        "protocolId": undefined,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": "General",
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      colSize={6}
                      helpTipBody={[Function]}
                      label="Auto-Copy Data to Study"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Auto-Copy Data to Study
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Auto-Copy Data to Study"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={6}
                          >
                            <div
                              className="col-xs-6"
                            >
                              <LoadingSpinner
                                msg="Loading..."
                                wrapperClassName=""
                              >
                                <span
                                  className=""
                                >
                                  <i
                                    aria-hidden="true"
                                    className="fa fa-spinner fa-spin"
                                  />
                                   
                                  Loading...
                                </span>
                              </LoadingSpinner>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </AutoCopyDataInput>
                  <SectionHeading
                    paddingTop={true}
                    title="Editing Settings"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <div
                              className="domain-field-section-heading domain-field-padding-top"
                            >
                              Editing Settings
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </SectionHeading>
                  <EditableRunsInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": false,
                        "allowEditableResults": false,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": false,
                        "description": undefined,
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Run Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Data Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": false,
                        "editableRuns": false,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": undefined,
                        "protocolId": undefined,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": "General",
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Editable Runs"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Editable Runs
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Editable Runs"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <input
                                checked={false}
                                id="assay-design-editableRuns"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </EditableRunsInput>
                </form>
              </Form>
            </div>
          </PanelBody>
        </div>
      </Panel>
    </Uncontrolled(Panel)>
  </AssayPropertiesPanel>
  <DomainForm
    collapsible={false}
    domain={
      Immutable.Record {
        "name": "Batch Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    helpURL={null}
    initCollapsed={true}
    key="0"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={false}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={false}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className=""
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Batch Fields
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    collapsible={false}
    domain={
      Immutable.Record {
        "name": "Run Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    helpURL={null}
    initCollapsed={true}
    key="1"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={false}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={false}
        domain={
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className=""
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Run Fields
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    collapsible={false}
    domain={
      Immutable.Record {
        "name": "Data Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    helpURL={null}
    initCollapsed={true}
    key="2"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={true}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={false}
        domain={
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={true}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className=""
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Results Fields
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <WizardNavButtons
    canCancel={true}
    canFinish={false}
    canNextStep={false}
    canPreviousStep={false}
    cancel={[Function]}
    cancelText="Cancel"
    containerClassName=""
    finish={false}
    finishStyle="success"
    finishText="Finish"
    includeNext={true}
    isFinishedText="Finished"
    isFinishing={false}
    isFinishingText="Finishing..."
    nextStep={[Function]}
    nextStyle="success"
    previousStep={[Function]}
  >
    <div
      className="form-group no-margin-bottom"
    >
      <div
        className=""
      >
        <div
          className="pull-left"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
          >
            <button
              className="btn btn-default"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              Cancel
            </button>
          </Button>
        </div>
        <div
          className="btn-group pull-right"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={true}
            onClick={[Function]}
          >
            <button
              className="btn btn-default"
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              Back
            </button>
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="success"
            disabled={true}
            onClick={[Function]}
            type="submit"
          >
            <button
              className="btn btn-success"
              disabled={true}
              onClick={[Function]}
              type="submit"
            >
              Next
            </button>
          </Button>
        </div>
      </div>
    </div>
  </WizardNavButtons>
</AssayDesignerPanels>
`;

exports[`AssayDesignerPanels hideEmptyBatchDomain for new assay 1`] = `
<AssayDesignerPanels
  hideEmptyBatchDomain={true}
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": false,
      "allowEditableResults": false,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": false,
      "description": undefined,
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": false,
      "editableRuns": false,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": undefined,
      "protocolId": undefined,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": "General",
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <AssayPropertiesPanel
    asPanel={true}
    basePropertiesOnly={false}
    collapsible={false}
    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
    initCollapsed={false}
    markComplete={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": false,
        "allowEditableResults": false,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": false,
        "description": undefined,
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": false,
        "editableRuns": false,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": undefined,
        "protocolId": undefined,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": "General",
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    panelCls="panel-active"
  >
    <Uncontrolled(Panel)
      className="domain-form-panel panel-active"
    >
      <Panel
        bsClass="panel"
        bsStyle="default"
        className="domain-form-panel panel-active"
        onToggle={[Function]}
      >
        <div
          className="domain-form-panel panel-active panel panel-default"
        >
          <PanelHeading
            bsClass="panel"
            className=""
            componentClass="div"
            onClick={[Function]}
          >
            <div
              className="panel-heading"
              onClick={[Function]}
            >
              <span>
                Assay Properties
              </span>
            </div>
          </PanelHeading>
          <PanelBody
            bsClass="panel"
            collapsible={false}
          >
            <div
              className="panel-body"
            >
              <Form
                bsClass="form"
                componentClass="form"
                horizontal={false}
                inline={false}
              >
                <form
                  className=""
                >
                  <SectionHeading
                    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                    title="Basic Properties"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={9}
                        >
                          <div
                            className="col-xs-9"
                          >
                            <div
                              className="domain-field-section-heading"
                            >
                              Basic Properties
                            </div>
                          </div>
                        </Col>
                        <HelpURL
                          helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              <a
                                className="domain-field-float-right"
                                href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                target="_blank"
                              >
                                Learn more about designing assays
                              </a>
                            </div>
                          </Col>
                        </HelpURL>
                      </div>
                    </Row>
                  </SectionHeading>
                  <NameInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": false,
                        "allowEditableResults": false,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": false,
                        "description": undefined,
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Run Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Data Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": false,
                        "editableRuns": false,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": undefined,
                        "protocolId": undefined,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": "General",
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Name"
                      required={true}
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Name
                               *
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Name"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <FormControl
                                bsClass="form-control"
                                componentClass="input"
                                disabled={false}
                                id="assay-design-name"
                                onChange={[Function]}
                                placeholder="Enter a name for this assay"
                                type="text"
                                value=""
                              >
                                <input
                                  className="form-control"
                                  disabled={false}
                                  id="assay-design-name"
                                  onChange={[Function]}
                                  placeholder="Enter a name for this assay"
                                  type="text"
                                  value=""
                                />
                              </FormControl>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </NameInput>
                  <DescriptionInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": false,
                        "allowEditableResults": false,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": false,
                        "description": undefined,
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Run Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Data Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": false,
                        "editableRuns": false,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": undefined,
                        "protocolId": undefined,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": "General",
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Description"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Description
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Description"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <textarea
                                className="form-control domain-field-textarea"
                                id="assay-design-description"
                                onChange={[Function]}
                                placeholder="Add a description"
                                value=""
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </DescriptionInput>
                  <SectionHeading
                    paddingTop={true}
                    title="Import Settings"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <div
                              className="domain-field-section-heading domain-field-padding-top"
                            >
                              Import Settings
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </SectionHeading>
                  <AutoCopyDataInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": false,
                        "allowEditableResults": false,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": false,
                        "description": undefined,
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Run Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Data Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": false,
                        "editableRuns": false,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": undefined,
                        "protocolId": undefined,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": "General",
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      colSize={6}
                      helpTipBody={[Function]}
                      label="Auto-Copy Data to Study"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Auto-Copy Data to Study
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Auto-Copy Data to Study"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={6}
                          >
                            <div
                              className="col-xs-6"
                            >
                              <LoadingSpinner
                                msg="Loading..."
                                wrapperClassName=""
                              >
                                <span
                                  className=""
                                >
                                  <i
                                    aria-hidden="true"
                                    className="fa fa-spinner fa-spin"
                                  />
                                   
                                  Loading...
                                </span>
                              </LoadingSpinner>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </AutoCopyDataInput>
                  <SectionHeading
                    paddingTop={true}
                    title="Editing Settings"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <div
                              className="domain-field-section-heading domain-field-padding-top"
                            >
                              Editing Settings
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </SectionHeading>
                  <EditableRunsInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": false,
                        "allowEditableResults": false,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": false,
                        "description": undefined,
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Run Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Data Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": false,
                        "editableRuns": false,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": undefined,
                        "protocolId": undefined,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": "General",
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Editable Runs"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Editable Runs
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Editable Runs"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <input
                                checked={false}
                                id="assay-design-editableRuns"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </EditableRunsInput>
                </form>
              </Form>
            </div>
          </PanelBody>
        </div>
      </Panel>
    </Uncontrolled(Panel)>
  </AssayPropertiesPanel>
  <DomainForm
    collapsible={false}
    domain={
      Immutable.Record {
        "name": "Run Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    helpURL={null}
    initCollapsed={true}
    key="1"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={false}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={false}
        domain={
          Immutable.Record {
            "name": "Run Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className=""
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Run Fields
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    collapsible={false}
    domain={
      Immutable.Record {
        "name": "Data Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    helpURL={null}
    initCollapsed={true}
    key="2"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Run Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Data Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={true}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={false}
        domain={
          Immutable.Record {
            "name": "Data Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Run Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Data Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={true}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className=""
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Results Fields
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <WizardNavButtons
    canCancel={true}
    canFinish={false}
    canNextStep={false}
    canPreviousStep={false}
    cancel={[Function]}
    cancelText="Cancel"
    containerClassName=""
    finish={false}
    finishStyle="success"
    finishText="Finish"
    includeNext={true}
    isFinishedText="Finished"
    isFinishing={false}
    isFinishingText="Finishing..."
    nextStep={[Function]}
    nextStyle="success"
    previousStep={[Function]}
  >
    <div
      className="form-group no-margin-bottom"
    >
      <div
        className=""
      >
        <div
          className="pull-left"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
          >
            <button
              className="btn btn-default"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              Cancel
            </button>
          </Button>
        </div>
        <div
          className="btn-group pull-right"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={true}
            onClick={[Function]}
          >
            <button
              className="btn btn-default"
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              Back
            </button>
          </Button>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="success"
            disabled={true}
            onClick={[Function]}
            type="submit"
          >
            <button
              className="btn btn-success"
              disabled={true}
              onClick={[Function]}
              type="submit"
            >
              Next
            </button>
          </Button>
        </div>
      </div>
    </div>
  </WizardNavButtons>
</AssayDesignerPanels>
`;

exports[`AssayDesignerPanels hideEmptyBatchDomain with initModel 1`] = `
<AssayDesignerPanels
  hideEmptyBatchDomain={true}
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": true,
      "allowEditableResults": true,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": true,
      "description": "My assay protocol for you all to use.",
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": true,
      "editableRuns": true,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": "Test Assay Protocol",
      "protocolId": 1,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": undefined,
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <AssayPropertiesPanel
    asPanel={true}
    basePropertiesOnly={false}
    collapsible={true}
    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
    initCollapsed={false}
    markComplete={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": true,
        "allowEditableResults": true,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": true,
        "description": "My assay protocol for you all to use.",
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": true,
        "editableRuns": true,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": "Test Assay Protocol",
        "protocolId": 1,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": undefined,
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    panelCls=""
  >
    <Uncontrolled(Panel)
      className="domain-form-panel"
    >
      <Panel
        bsClass="panel"
        bsStyle="default"
        className="domain-form-panel"
        onToggle={[Function]}
      >
        <div
          className="domain-form-panel panel panel-default"
        >
          <PanelHeading
            bsClass="panel"
            className="domain-heading-collapsible"
            componentClass="div"
            onClick={[Function]}
          >
            <div
              className="domain-heading-collapsible panel-heading"
              onClick={[Function]}
            >
              <span>
                Assay Properties
              </span>
              <span
                className="pull-right"
              >
                <FontAwesomeIcon
                  border={false}
                  className="domain-form-expand-btn"
                  fixedWidth={false}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        448,
                        512,
                        Array [],
                        "f146",
                        "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z",
                      ],
                      "iconName": "minus-square",
                      "prefix": "fas",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size="lg"
                  spin={false}
                  symbol={false}
                  title=""
                  transform={null}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-expand-btn"
                    data-icon="minus-square"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 448 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </FontAwesomeIcon>
              </span>
            </div>
          </PanelHeading>
          <PanelBody
            bsClass="panel"
            collapsible={false}
          >
            <div
              className="panel-body"
            >
              <Form
                bsClass="form"
                componentClass="form"
                horizontal={false}
                inline={false}
              >
                <form
                  className=""
                >
                  <SectionHeading
                    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                    title="Basic Properties"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={9}
                        >
                          <div
                            className="col-xs-9"
                          >
                            <div
                              className="domain-field-section-heading"
                            >
                              Basic Properties
                            </div>
                          </div>
                        </Col>
                        <HelpURL
                          helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              <a
                                className="domain-field-float-right"
                                href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                target="_blank"
                              >
                                Learn more about designing assays
                              </a>
                            </div>
                          </Col>
                        </HelpURL>
                      </div>
                    </Row>
                  </SectionHeading>
                  <NameInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Name"
                      required={true}
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Name
                               *
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Name"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <FormControl
                                bsClass="form-control"
                                componentClass="input"
                                disabled={true}
                                id="assay-design-name"
                                onChange={[Function]}
                                placeholder="Enter a name for this assay"
                                type="text"
                                value="Test Assay Protocol"
                              >
                                <input
                                  className="form-control"
                                  disabled={true}
                                  id="assay-design-name"
                                  onChange={[Function]}
                                  placeholder="Enter a name for this assay"
                                  type="text"
                                  value="Test Assay Protocol"
                                />
                              </FormControl>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </NameInput>
                  <DescriptionInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Description"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Description
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Description"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <textarea
                                className="form-control domain-field-textarea"
                                id="assay-design-description"
                                onChange={[Function]}
                                placeholder="Add a description"
                                value="My assay protocol for you all to use."
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </DescriptionInput>
                  <SectionHeading
                    paddingTop={true}
                    title="Import Settings"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <div
                              className="domain-field-section-heading domain-field-padding-top"
                            >
                              Import Settings
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </SectionHeading>
                  <AutoCopyDataInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      colSize={6}
                      helpTipBody={[Function]}
                      label="Auto-Copy Data to Study"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Auto-Copy Data to Study
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Auto-Copy Data to Study"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={6}
                          >
                            <div
                              className="col-xs-6"
                            >
                              <LoadingSpinner
                                msg="Loading..."
                                wrapperClassName=""
                              >
                                <span
                                  className=""
                                >
                                  <i
                                    aria-hidden="true"
                                    className="fa fa-spinner fa-spin"
                                  />
                                   
                                  Loading...
                                </span>
                              </LoadingSpinner>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </AutoCopyDataInput>
                  <BackgroundUploadInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Import in Background"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Import in Background
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Import in Background"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <input
                                checked={true}
                                id="assay-design-backgroundUpload"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </BackgroundUploadInput>
                  <SectionHeading
                    paddingTop={true}
                    title="Editing Settings"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <div
                              className="domain-field-section-heading domain-field-padding-top"
                            >
                              Editing Settings
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </SectionHeading>
                  <EditableRunsInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Editable Runs"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Editable Runs
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Editable Runs"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <input
                                checked={true}
                                id="assay-design-editableRuns"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </EditableRunsInput>
                  <EditableResultsInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Editable Results"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Editable Results
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Editable Results"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <input
                                checked={true}
                                id="assay-design-editableResults"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </EditableResultsInput>
                </form>
              </Form>
            </div>
          </PanelBody>
        </div>
      </Panel>
    </Uncontrolled(Panel)>
  </AssayPropertiesPanel>
  <DomainForm
    collapsible={true}
    domain={
      Immutable.Record {
        "name": "Sample Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field1",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:string",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field2",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:int",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Integer",
              "name": "int",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": "xsd:int",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:int",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field3",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:dateTime",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Date Time",
              "name": "dateTime",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": "xsd:dateTime",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:dateTime",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          },
        ],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    headerPrefix="Test Assay Protocol"
    helpURL={null}
    initCollapsed={true}
    key="1"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={false}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={true}
        domain={
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        headerPrefix="Test Assay Protocol"
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className="domain-heading-collapsible"
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="domain-heading-collapsible panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Sample Fields (3)
                  </span>
                  <span
                    className="pull-right"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className="domain-form-expand-btn"
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            448,
                            512,
                            Array [],
                            "f0fe",
                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                          ],
                          "iconName": "plus-square",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size="lg"
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                        data-icon="plus-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <WizardNavButtons
    canCancel={true}
    canFinish={true}
    canNextStep={true}
    canPreviousStep={false}
    cancel={[Function]}
    cancelText="Cancel"
    containerClassName=""
    finish={true}
    finishStyle="success"
    finishText="Finish"
    includeNext={false}
    isFinishedText="Finished"
    isFinishing={false}
    isFinishingText="Finishing..."
    nextStep={[Function]}
    nextStyle="success"
  >
    <div
      className="form-group no-margin-bottom"
    >
      <div
        className=""
      >
        <div
          className="pull-left"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
          >
            <button
              className="btn btn-default"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              Cancel
            </button>
          </Button>
        </div>
        <div
          className="btn-group pull-right"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="success"
            disabled={false}
            onClick={[Function]}
            type="submit"
          >
            <button
              className="btn btn-success"
              disabled={false}
              onClick={[Function]}
              type="submit"
            >
              Finish
            </button>
          </Button>
        </div>
      </div>
    </div>
  </WizardNavButtons>
</AssayDesignerPanels>
`;

exports[`AssayDesignerPanels initModel 1`] = `
<AssayDesignerPanels
  initModel={
    Immutable.Record {
      "allowBackgroundUpload": true,
      "allowEditableResults": true,
      "allowQCStates": false,
      "allowSpacesInPath": false,
      "allowTransformationScript": false,
      "autoCopyTargetContainer": undefined,
      "autoCopyTargetContainerId": undefined,
      "availableDetectionMethods": undefined,
      "availableMetadataInputFormats": undefined,
      "availablePlateTemplates": undefined,
      "backgroundUpload": true,
      "description": "My assay protocol for you all to use.",
      "domains": Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ],
      "editableResults": true,
      "editableRuns": true,
      "metadataInputFormatHelp": undefined,
      "moduleTransformScripts": undefined,
      "name": "Test Assay Protocol",
      "protocolId": 1,
      "protocolParameters": undefined,
      "protocolTransformScripts": undefined,
      "providerName": undefined,
      "saveScriptFiles": false,
      "selectedDetectionMethod": undefined,
      "selectedMetadataInputFormat": undefined,
      "selectedPlateTemplate": undefined,
      "qcEnabled": undefined,
    }
  }
  onCancel={[Function]}
  onComplete={[Function]}
>
  <AssayPropertiesPanel
    asPanel={true}
    basePropertiesOnly={false}
    collapsible={true}
    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
    initCollapsed={false}
    markComplete={false}
    model={
      Immutable.Record {
        "allowBackgroundUpload": true,
        "allowEditableResults": true,
        "allowQCStates": false,
        "allowSpacesInPath": false,
        "allowTransformationScript": false,
        "autoCopyTargetContainer": undefined,
        "autoCopyTargetContainerId": undefined,
        "availableDetectionMethods": undefined,
        "availableMetadataInputFormats": undefined,
        "availablePlateTemplates": undefined,
        "backgroundUpload": true,
        "description": "My assay protocol for you all to use.",
        "domains": Immutable.List [
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          },
        ],
        "editableResults": true,
        "editableRuns": true,
        "metadataInputFormatHelp": undefined,
        "moduleTransformScripts": undefined,
        "name": "Test Assay Protocol",
        "protocolId": 1,
        "protocolParameters": undefined,
        "protocolTransformScripts": undefined,
        "providerName": undefined,
        "saveScriptFiles": false,
        "selectedDetectionMethod": undefined,
        "selectedMetadataInputFormat": undefined,
        "selectedPlateTemplate": undefined,
        "qcEnabled": undefined,
      }
    }
    onChange={[Function]}
    panelCls=""
  >
    <Uncontrolled(Panel)
      className="domain-form-panel"
    >
      <Panel
        bsClass="panel"
        bsStyle="default"
        className="domain-form-panel"
        onToggle={[Function]}
      >
        <div
          className="domain-form-panel panel panel-default"
        >
          <PanelHeading
            bsClass="panel"
            className="domain-heading-collapsible"
            componentClass="div"
            onClick={[Function]}
          >
            <div
              className="domain-heading-collapsible panel-heading"
              onClick={[Function]}
            >
              <span>
                Assay Properties
              </span>
              <span
                className="pull-right"
              >
                <FontAwesomeIcon
                  border={false}
                  className="domain-form-expand-btn"
                  fixedWidth={false}
                  flip={null}
                  icon={
                    Object {
                      "icon": Array [
                        448,
                        512,
                        Array [],
                        "f146",
                        "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z",
                      ],
                      "iconName": "minus-square",
                      "prefix": "fas",
                    }
                  }
                  inverse={false}
                  listItem={false}
                  mask={null}
                  pull={null}
                  pulse={false}
                  rotation={null}
                  size="lg"
                  spin={false}
                  symbol={false}
                  title=""
                  transform={null}
                >
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-minus-square fa-w-14 fa-lg domain-form-expand-btn"
                    data-icon="minus-square"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 448 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zM92 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H92z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </FontAwesomeIcon>
              </span>
            </div>
          </PanelHeading>
          <PanelBody
            bsClass="panel"
            collapsible={false}
          >
            <div
              className="panel-body"
            >
              <Form
                bsClass="form"
                componentClass="form"
                horizontal={false}
                inline={false}
              >
                <form
                  className=""
                >
                  <SectionHeading
                    helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                    title="Basic Properties"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={9}
                        >
                          <div
                            className="col-xs-9"
                          >
                            <div
                              className="domain-field-section-heading"
                            >
                              Basic Properties
                            </div>
                          </div>
                        </Col>
                        <HelpURL
                          helpURL="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              <a
                                className="domain-field-float-right"
                                href="https://www.labkey.org/Documentation/wiki-page.view?name=defineAssaySchema"
                                target="_blank"
                              >
                                Learn more about designing assays
                              </a>
                            </div>
                          </Col>
                        </HelpURL>
                      </div>
                    </Row>
                  </SectionHeading>
                  <NameInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Name"
                      required={true}
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Name
                               *
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Name"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <FormControl
                                bsClass="form-control"
                                componentClass="input"
                                disabled={true}
                                id="assay-design-name"
                                onChange={[Function]}
                                placeholder="Enter a name for this assay"
                                type="text"
                                value="Test Assay Protocol"
                              >
                                <input
                                  className="form-control"
                                  disabled={true}
                                  id="assay-design-name"
                                  onChange={[Function]}
                                  placeholder="Enter a name for this assay"
                                  type="text"
                                  value="Test Assay Protocol"
                                />
                              </FormControl>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </NameInput>
                  <DescriptionInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Description"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Description
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Description"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <textarea
                                className="form-control domain-field-textarea"
                                id="assay-design-description"
                                onChange={[Function]}
                                placeholder="Add a description"
                                value="My assay protocol for you all to use."
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </DescriptionInput>
                  <SectionHeading
                    paddingTop={true}
                    title="Import Settings"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <div
                              className="domain-field-section-heading domain-field-padding-top"
                            >
                              Import Settings
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </SectionHeading>
                  <AutoCopyDataInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      colSize={6}
                      helpTipBody={[Function]}
                      label="Auto-Copy Data to Study"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Auto-Copy Data to Study
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Auto-Copy Data to Study"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={6}
                          >
                            <div
                              className="col-xs-6"
                            >
                              <LoadingSpinner
                                msg="Loading..."
                                wrapperClassName=""
                              >
                                <span
                                  className=""
                                >
                                  <i
                                    aria-hidden="true"
                                    className="fa fa-spinner fa-spin"
                                  />
                                   
                                  Loading...
                                </span>
                              </LoadingSpinner>
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </AutoCopyDataInput>
                  <BackgroundUploadInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Import in Background"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Import in Background
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Import in Background"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <input
                                checked={true}
                                id="assay-design-backgroundUpload"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </BackgroundUploadInput>
                  <SectionHeading
                    paddingTop={true}
                    title="Editing Settings"
                  >
                    <Row
                      bsClass="row"
                      componentClass="div"
                    >
                      <div
                        className="row"
                      >
                        <Col
                          bsClass="col"
                          componentClass="div"
                          xs={12}
                        >
                          <div
                            className="col-xs-12"
                          >
                            <div
                              className="domain-field-section-heading domain-field-padding-top"
                            >
                              Editing Settings
                            </div>
                          </div>
                        </Col>
                      </div>
                    </Row>
                  </SectionHeading>
                  <EditableRunsInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Editable Runs"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Editable Runs
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Editable Runs"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <input
                                checked={true}
                                id="assay-design-editableRuns"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </EditableRunsInput>
                  <EditableResultsInput
                    model={
                      Immutable.Record {
                        "allowBackgroundUpload": true,
                        "allowEditableResults": true,
                        "allowQCStates": false,
                        "allowSpacesInPath": false,
                        "allowTransformationScript": false,
                        "autoCopyTargetContainer": undefined,
                        "autoCopyTargetContainerId": undefined,
                        "availableDetectionMethods": undefined,
                        "availableMetadataInputFormats": undefined,
                        "availablePlateTemplates": undefined,
                        "backgroundUpload": true,
                        "description": "My assay protocol for you all to use.",
                        "domains": Immutable.List [
                          Immutable.Record {
                            "name": "Batch Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                          Immutable.Record {
                            "name": "Sample Fields",
                            "container": undefined,
                            "description": undefined,
                            "domainURI": undefined,
                            "domainId": null,
                            "allowFileLinkProperties": true,
                            "allowAttachmentProperties": true,
                            "allowFlagProperties": true,
                            "showDefaultValueSettings": false,
                            "defaultDefaultValueType": undefined,
                            "defaultValueOptions": Immutable.List [],
                            "fields": Immutable.List [
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field1",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:string",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Text",
                                  "name": "string",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                  "alternateRangeURI": "xsd:string",
                                  "shortDisplay": "String",
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:string",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Text",
                                    "name": "string",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                                    "alternateRangeURI": "xsd:string",
                                    "shortDisplay": "String",
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field2",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:int",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Integer",
                                  "name": "int",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                  "alternateRangeURI": "xsd:int",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:int",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Integer",
                                    "name": "int",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                                    "alternateRangeURI": "xsd:int",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                              Immutable.Record {
                                "conceptURI": undefined,
                                "conditionalFormats": Immutable.List [],
                                "defaultScale": undefined,
                                "defaultValueType": undefined,
                                "defaultValue": undefined,
                                "defaultDisplayValue": undefined,
                                "description": undefined,
                                "dimension": undefined,
                                "excludeFromShifting": false,
                                "format": undefined,
                                "hidden": false,
                                "importAliases": undefined,
                                "label": undefined,
                                "lookupContainer": undefined,
                                "lookupQuery": undefined,
                                "lookupSchema": undefined,
                                "lookupValidator": undefined,
                                "measure": undefined,
                                "mvEnabled": false,
                                "name": "field3",
                                "PHI": undefined,
                                "primaryKey": undefined,
                                "propertyId": undefined,
                                "propertyURI": undefined,
                                "propertyValidators": Immutable.List [],
                                "rangeValidators": Immutable.List [],
                                "rangeURI": "xsd:dateTime",
                                "regexValidators": Immutable.List [],
                                "recommendedVariable": false,
                                "required": false,
                                "scale": undefined,
                                "URL": undefined,
                                "shownInDetailsView": true,
                                "shownInInsertView": true,
                                "shownInUpdateView": true,
                                "visible": true,
                                "dataType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Date Time",
                                  "name": "dateTime",
                                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                  "alternateRangeURI": "xsd:dateTime",
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "lookupQueryValue": undefined,
                                "lookupType": Immutable.Record {
                                  "conceptURI": undefined,
                                  "display": "Lookup",
                                  "name": "lookup",
                                  "rangeURI": "xsd:dateTime",
                                  "alternateRangeURI": undefined,
                                  "shortDisplay": undefined,
                                  "lookupSchema": undefined,
                                  "lookupQuery": undefined,
                                },
                                "original": Object {
                                  "conceptURI": undefined,
                                  "dataType": Immutable.Record {
                                    "conceptURI": undefined,
                                    "display": "Date Time",
                                    "name": "dateTime",
                                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                                    "alternateRangeURI": "xsd:dateTime",
                                    "shortDisplay": undefined,
                                    "lookupSchema": undefined,
                                    "lookupQuery": undefined,
                                  },
                                  "rangeURI": undefined,
                                },
                                "updatedField": false,
                                "isPrimaryKey": false,
                                "lockType": "NotLocked",
                              },
                            ],
                            "indices": Immutable.List [],
                            "domainException": undefined,
                            "mandatoryFieldNames": Immutable.List [],
                            "reservedFieldNames": Immutable.List [],
                            "newDesignFields": undefined,
                            "instructions": undefined,
                          },
                        ],
                        "editableResults": true,
                        "editableRuns": true,
                        "metadataInputFormatHelp": undefined,
                        "moduleTransformScripts": undefined,
                        "name": "Test Assay Protocol",
                        "protocolId": 1,
                        "protocolParameters": undefined,
                        "protocolTransformScripts": undefined,
                        "providerName": undefined,
                        "saveScriptFiles": false,
                        "selectedDetectionMethod": undefined,
                        "selectedMetadataInputFormat": undefined,
                        "selectedPlateTemplate": undefined,
                        "qcEnabled": undefined,
                      }
                    }
                    onChange={[Function]}
                  >
                    <AssayPropertiesInput
                      helpTipBody={[Function]}
                      label="Editable Results"
                    >
                      <Row
                        bsClass="row"
                        className="margin-top"
                        componentClass="div"
                      >
                        <div
                          className="margin-top row"
                        >
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={3}
                          >
                            <div
                              className="col-xs-3"
                            >
                              Editable Results
                              <LabelHelpTip
                                body={[Function]}
                                id="tooltip"
                                title="Editable Results"
                              >
                                <span
                                  className="label-help-target"
                                  onMouseOut={[Function]}
                                  onMouseOver={[Function]}
                                >
                                  <FontAwesomeIcon
                                    border={false}
                                    className="label-help-icon"
                                    fixedWidth={false}
                                    flip={null}
                                    icon={
                                      Object {
                                        "icon": Array [
                                          512,
                                          512,
                                          Array [],
                                          "f059",
                                          "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
                                        ],
                                        "iconName": "question-circle",
                                        "prefix": "fas",
                                      }
                                    }
                                    inverse={false}
                                    listItem={false}
                                    mask={null}
                                    pull={null}
                                    pulse={false}
                                    rotation={null}
                                    size={null}
                                    spin={false}
                                    symbol={false}
                                    title=""
                                    transform={null}
                                  >
                                    <svg
                                      aria-hidden="true"
                                      className="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                      data-icon="question-circle"
                                      data-prefix="fas"
                                      focusable="false"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 512 512"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path
                                        d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                        fill="currentColor"
                                        style={Object {}}
                                      />
                                    </svg>
                                  </FontAwesomeIcon>
                                  <Overlay
                                    animation={[Function]}
                                    placement="right"
                                    rootClose={false}
                                    show={false}
                                    target={
                                      <span
                                        class="label-help-target"
                                      >
                                        <svg
                                          aria-hidden="true"
                                          class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                          data-icon="question-circle"
                                          data-prefix="fas"
                                          focusable="false"
                                          role="img"
                                          viewBox="0 0 512 512"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                            fill="currentColor"
                                          />
                                        </svg>
                                      </span>
                                    }
                                  >
                                    <Overlay
                                      placement="right"
                                      rootClose={false}
                                      show={false}
                                      target={
                                        <span
                                          class="label-help-target"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            class="svg-inline--fa fa-question-circle fa-w-16 label-help-icon"
                                            data-icon="question-circle"
                                            data-prefix="fas"
                                            focusable="false"
                                            role="img"
                                            viewBox="0 0 512 512"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <path
                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z"
                                              fill="currentColor"
                                            />
                                          </svg>
                                        </span>
                                      }
                                      transition={[Function]}
                                    />
                                  </Overlay>
                                </span>
                              </LabelHelpTip>
                            </div>
                          </Col>
                          <Col
                            bsClass="col"
                            componentClass="div"
                            xs={9}
                          >
                            <div
                              className="col-xs-9"
                            >
                              <input
                                checked={true}
                                id="assay-design-editableResults"
                                onChange={[Function]}
                                type="checkbox"
                              />
                            </div>
                          </Col>
                        </div>
                      </Row>
                    </AssayPropertiesInput>
                  </EditableResultsInput>
                </form>
              </Form>
            </div>
          </PanelBody>
        </div>
      </Panel>
    </Uncontrolled(Panel)>
  </AssayPropertiesPanel>
  <DomainForm
    collapsible={true}
    domain={
      Immutable.Record {
        "name": "Batch Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    headerPrefix="Test Assay Protocol"
    helpURL={null}
    initCollapsed={true}
    key="0"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={false}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={true}
        domain={
          Immutable.Record {
            "name": "Batch Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        headerPrefix="Test Assay Protocol"
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className="domain-heading-collapsible"
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="domain-heading-collapsible panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Batch Fields
                  </span>
                  <span
                    className="pull-right"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className="domain-form-expand-btn"
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            448,
                            512,
                            Array [],
                            "f0fe",
                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                          ],
                          "iconName": "plus-square",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size="lg"
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                        data-icon="plus-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <DomainForm
    collapsible={true}
    domain={
      Immutable.Record {
        "name": "Sample Fields",
        "container": undefined,
        "description": undefined,
        "domainURI": undefined,
        "domainId": null,
        "allowFileLinkProperties": true,
        "allowAttachmentProperties": true,
        "allowFlagProperties": true,
        "showDefaultValueSettings": false,
        "defaultDefaultValueType": undefined,
        "defaultValueOptions": Immutable.List [],
        "fields": Immutable.List [
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field1",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:string",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Text",
              "name": "string",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
              "alternateRangeURI": "xsd:string",
              "shortDisplay": "String",
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:string",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field2",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:int",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Integer",
              "name": "int",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
              "alternateRangeURI": "xsd:int",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:int",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          },
          Immutable.Record {
            "conceptURI": undefined,
            "conditionalFormats": Immutable.List [],
            "defaultScale": undefined,
            "defaultValueType": undefined,
            "defaultValue": undefined,
            "defaultDisplayValue": undefined,
            "description": undefined,
            "dimension": undefined,
            "excludeFromShifting": false,
            "format": undefined,
            "hidden": false,
            "importAliases": undefined,
            "label": undefined,
            "lookupContainer": undefined,
            "lookupQuery": undefined,
            "lookupSchema": undefined,
            "lookupValidator": undefined,
            "measure": undefined,
            "mvEnabled": false,
            "name": "field3",
            "PHI": undefined,
            "primaryKey": undefined,
            "propertyId": undefined,
            "propertyURI": undefined,
            "propertyValidators": Immutable.List [],
            "rangeValidators": Immutable.List [],
            "rangeURI": "xsd:dateTime",
            "regexValidators": Immutable.List [],
            "recommendedVariable": false,
            "required": false,
            "scale": undefined,
            "URL": undefined,
            "shownInDetailsView": true,
            "shownInInsertView": true,
            "shownInUpdateView": true,
            "visible": true,
            "dataType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Date Time",
              "name": "dateTime",
              "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
              "alternateRangeURI": "xsd:dateTime",
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "lookupQueryValue": undefined,
            "lookupType": Immutable.Record {
              "conceptURI": undefined,
              "display": "Lookup",
              "name": "lookup",
              "rangeURI": "xsd:dateTime",
              "alternateRangeURI": undefined,
              "shortDisplay": undefined,
              "lookupSchema": undefined,
              "lookupQuery": undefined,
            },
            "original": Object {
              "conceptURI": undefined,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "rangeURI": undefined,
            },
            "updatedField": false,
            "isPrimaryKey": false,
            "lockType": "NotLocked",
          },
        ],
        "indices": Immutable.List [],
        "domainException": undefined,
        "mandatoryFieldNames": Immutable.List [],
        "reservedFieldNames": Immutable.List [],
        "newDesignFields": undefined,
        "instructions": undefined,
      }
    }
    headerPrefix="Test Assay Protocol"
    helpURL={null}
    initCollapsed={true}
    key="1"
    markComplete={false}
    modelDomains={
      Immutable.List [
        Immutable.Record {
          "name": "Batch Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
        Immutable.Record {
          "name": "Sample Fields",
          "container": undefined,
          "description": undefined,
          "domainURI": undefined,
          "domainId": null,
          "allowFileLinkProperties": true,
          "allowAttachmentProperties": true,
          "allowFlagProperties": true,
          "showDefaultValueSettings": false,
          "defaultDefaultValueType": undefined,
          "defaultValueOptions": Immutable.List [],
          "fields": Immutable.List [
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field1",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:string",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Text",
                "name": "string",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                "alternateRangeURI": "xsd:string",
                "shortDisplay": "String",
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:string",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field2",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:int",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Integer",
                "name": "int",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                "alternateRangeURI": "xsd:int",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:int",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
            Immutable.Record {
              "conceptURI": undefined,
              "conditionalFormats": Immutable.List [],
              "defaultScale": undefined,
              "defaultValueType": undefined,
              "defaultValue": undefined,
              "defaultDisplayValue": undefined,
              "description": undefined,
              "dimension": undefined,
              "excludeFromShifting": false,
              "format": undefined,
              "hidden": false,
              "importAliases": undefined,
              "label": undefined,
              "lookupContainer": undefined,
              "lookupQuery": undefined,
              "lookupSchema": undefined,
              "lookupValidator": undefined,
              "measure": undefined,
              "mvEnabled": false,
              "name": "field3",
              "PHI": undefined,
              "primaryKey": undefined,
              "propertyId": undefined,
              "propertyURI": undefined,
              "propertyValidators": Immutable.List [],
              "rangeValidators": Immutable.List [],
              "rangeURI": "xsd:dateTime",
              "regexValidators": Immutable.List [],
              "recommendedVariable": false,
              "required": false,
              "scale": undefined,
              "URL": undefined,
              "shownInDetailsView": true,
              "shownInInsertView": true,
              "shownInUpdateView": true,
              "visible": true,
              "dataType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Date Time",
                "name": "dateTime",
                "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                "alternateRangeURI": "xsd:dateTime",
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "lookupQueryValue": undefined,
              "lookupType": Immutable.Record {
                "conceptURI": undefined,
                "display": "Lookup",
                "name": "lookup",
                "rangeURI": "xsd:dateTime",
                "alternateRangeURI": undefined,
                "shortDisplay": undefined,
                "lookupSchema": undefined,
                "lookupQuery": undefined,
              },
              "original": Object {
                "conceptURI": undefined,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "rangeURI": undefined,
              },
              "updatedField": false,
              "isPrimaryKey": false,
              "lockType": "NotLocked",
            },
          ],
          "indices": Immutable.List [],
          "domainException": undefined,
          "mandatoryFieldNames": Immutable.List [],
          "reservedFieldNames": Immutable.List [],
          "newDesignFields": undefined,
          "instructions": undefined,
        },
      ]
    }
    onChange={[Function]}
    panelCls=""
    showInferFromFile={false}
  >
    <LookupProvider>
      <DomainFormImpl
        collapsible={true}
        domain={
          Immutable.Record {
            "name": "Sample Fields",
            "container": undefined,
            "description": undefined,
            "domainURI": undefined,
            "domainId": null,
            "allowFileLinkProperties": true,
            "allowAttachmentProperties": true,
            "allowFlagProperties": true,
            "showDefaultValueSettings": false,
            "defaultDefaultValueType": undefined,
            "defaultValueOptions": Immutable.List [],
            "fields": Immutable.List [
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field1",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:string",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Text",
                  "name": "string",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                  "alternateRangeURI": "xsd:string",
                  "shortDisplay": "String",
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:string",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field2",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:int",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Integer",
                  "name": "int",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                  "alternateRangeURI": "xsd:int",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:int",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
              Immutable.Record {
                "conceptURI": undefined,
                "conditionalFormats": Immutable.List [],
                "defaultScale": undefined,
                "defaultValueType": undefined,
                "defaultValue": undefined,
                "defaultDisplayValue": undefined,
                "description": undefined,
                "dimension": undefined,
                "excludeFromShifting": false,
                "format": undefined,
                "hidden": false,
                "importAliases": undefined,
                "label": undefined,
                "lookupContainer": undefined,
                "lookupQuery": undefined,
                "lookupSchema": undefined,
                "lookupValidator": undefined,
                "measure": undefined,
                "mvEnabled": false,
                "name": "field3",
                "PHI": undefined,
                "primaryKey": undefined,
                "propertyId": undefined,
                "propertyURI": undefined,
                "propertyValidators": Immutable.List [],
                "rangeValidators": Immutable.List [],
                "rangeURI": "xsd:dateTime",
                "regexValidators": Immutable.List [],
                "recommendedVariable": false,
                "required": false,
                "scale": undefined,
                "URL": undefined,
                "shownInDetailsView": true,
                "shownInInsertView": true,
                "shownInUpdateView": true,
                "visible": true,
                "dataType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Date Time",
                  "name": "dateTime",
                  "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                  "alternateRangeURI": "xsd:dateTime",
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "lookupQueryValue": undefined,
                "lookupType": Immutable.Record {
                  "conceptURI": undefined,
                  "display": "Lookup",
                  "name": "lookup",
                  "rangeURI": "xsd:dateTime",
                  "alternateRangeURI": undefined,
                  "shortDisplay": undefined,
                  "lookupSchema": undefined,
                  "lookupQuery": undefined,
                },
                "original": Object {
                  "conceptURI": undefined,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "rangeURI": undefined,
                },
                "updatedField": false,
                "isPrimaryKey": false,
                "lockType": "NotLocked",
              },
            ],
            "indices": Immutable.List [],
            "domainException": undefined,
            "mandatoryFieldNames": Immutable.List [],
            "reservedFieldNames": Immutable.List [],
            "newDesignFields": undefined,
            "instructions": undefined,
          }
        }
        headerPrefix="Test Assay Protocol"
        helpNoun="field designer"
        helpURL={null}
        initCollapsed={true}
        markComplete={false}
        modelDomains={
          Immutable.List [
            Immutable.Record {
              "name": "Batch Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
            Immutable.Record {
              "name": "Sample Fields",
              "container": undefined,
              "description": undefined,
              "domainURI": undefined,
              "domainId": null,
              "allowFileLinkProperties": true,
              "allowAttachmentProperties": true,
              "allowFlagProperties": true,
              "showDefaultValueSettings": false,
              "defaultDefaultValueType": undefined,
              "defaultValueOptions": Immutable.List [],
              "fields": Immutable.List [
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field1",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:string",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Text",
                    "name": "string",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                    "alternateRangeURI": "xsd:string",
                    "shortDisplay": "String",
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:string",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Text",
                      "name": "string",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#string",
                      "alternateRangeURI": "xsd:string",
                      "shortDisplay": "String",
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field2",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:int",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Integer",
                    "name": "int",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                    "alternateRangeURI": "xsd:int",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:int",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Integer",
                      "name": "int",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#int",
                      "alternateRangeURI": "xsd:int",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
                Immutable.Record {
                  "conceptURI": undefined,
                  "conditionalFormats": Immutable.List [],
                  "defaultScale": undefined,
                  "defaultValueType": undefined,
                  "defaultValue": undefined,
                  "defaultDisplayValue": undefined,
                  "description": undefined,
                  "dimension": undefined,
                  "excludeFromShifting": false,
                  "format": undefined,
                  "hidden": false,
                  "importAliases": undefined,
                  "label": undefined,
                  "lookupContainer": undefined,
                  "lookupQuery": undefined,
                  "lookupSchema": undefined,
                  "lookupValidator": undefined,
                  "measure": undefined,
                  "mvEnabled": false,
                  "name": "field3",
                  "PHI": undefined,
                  "primaryKey": undefined,
                  "propertyId": undefined,
                  "propertyURI": undefined,
                  "propertyValidators": Immutable.List [],
                  "rangeValidators": Immutable.List [],
                  "rangeURI": "xsd:dateTime",
                  "regexValidators": Immutable.List [],
                  "recommendedVariable": false,
                  "required": false,
                  "scale": undefined,
                  "URL": undefined,
                  "shownInDetailsView": true,
                  "shownInInsertView": true,
                  "shownInUpdateView": true,
                  "visible": true,
                  "dataType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Date Time",
                    "name": "dateTime",
                    "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                    "alternateRangeURI": "xsd:dateTime",
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "lookupQueryValue": undefined,
                  "lookupType": Immutable.Record {
                    "conceptURI": undefined,
                    "display": "Lookup",
                    "name": "lookup",
                    "rangeURI": "xsd:dateTime",
                    "alternateRangeURI": undefined,
                    "shortDisplay": undefined,
                    "lookupSchema": undefined,
                    "lookupQuery": undefined,
                  },
                  "original": Object {
                    "conceptURI": undefined,
                    "dataType": Immutable.Record {
                      "conceptURI": undefined,
                      "display": "Date Time",
                      "name": "dateTime",
                      "rangeURI": "http://www.w3.org/2001/XMLSchema#dateTime",
                      "alternateRangeURI": "xsd:dateTime",
                      "shortDisplay": undefined,
                      "lookupSchema": undefined,
                      "lookupQuery": undefined,
                    },
                    "rangeURI": undefined,
                  },
                  "updatedField": false,
                  "isPrimaryKey": false,
                  "lockType": "NotLocked",
                },
              ],
              "indices": Immutable.List [],
              "domainException": undefined,
              "mandatoryFieldNames": Immutable.List [],
              "reservedFieldNames": Immutable.List [],
              "newDesignFields": undefined,
              "instructions": undefined,
            },
          ]
        }
        onChange={[Function]}
        panelCls=""
        showHeader={true}
        showHeaderFieldCount={true}
        showInferFromFile={false}
      >
        <Uncontrolled(Panel)
          className="domain-form-panel"
        >
          <Panel
            bsClass="panel"
            bsStyle="default"
            className="domain-form-panel"
            onToggle={[Function]}
          >
            <div
              className="domain-form-panel panel panel-default"
            >
              <PanelHeading
                bsClass="panel"
                className="domain-heading-collapsible"
                componentClass="div"
                onClick={[Function]}
              >
                <div
                  className="domain-heading-collapsible panel-heading"
                  onClick={[Function]}
                >
                  <span>
                    Sample Fields (3)
                  </span>
                  <span
                    className="pull-right"
                  >
                    <FontAwesomeIcon
                      border={false}
                      className="domain-form-expand-btn"
                      fixedWidth={false}
                      flip={null}
                      icon={
                        Object {
                          "icon": Array [
                            448,
                            512,
                            Array [],
                            "f0fe",
                            "M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
                          ],
                          "iconName": "plus-square",
                          "prefix": "fas",
                        }
                      }
                      inverse={false}
                      listItem={false}
                      mask={null}
                      pull={null}
                      pulse={false}
                      rotation={null}
                      size="lg"
                      spin={false}
                      symbol={false}
                      title=""
                      transform={null}
                    >
                      <svg
                        aria-hidden="true"
                        className="svg-inline--fa fa-plus-square fa-w-14 fa-lg domain-form-expand-btn"
                        data-icon="plus-square"
                        data-prefix="fas"
                        focusable="false"
                        role="img"
                        style={Object {}}
                        viewBox="0 0 448 512"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-32 252c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92H92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z"
                          fill="currentColor"
                          style={Object {}}
                        />
                      </svg>
                    </FontAwesomeIcon>
                  </span>
                </div>
              </PanelHeading>
            </div>
          </Panel>
        </Uncontrolled(Panel)>
      </DomainFormImpl>
    </LookupProvider>
  </DomainForm>
  <WizardNavButtons
    canCancel={true}
    canFinish={true}
    canNextStep={true}
    canPreviousStep={false}
    cancel={[Function]}
    cancelText="Cancel"
    containerClassName=""
    finish={true}
    finishStyle="success"
    finishText="Finish"
    includeNext={false}
    isFinishedText="Finished"
    isFinishing={false}
    isFinishingText="Finishing..."
    nextStep={[Function]}
    nextStyle="success"
  >
    <div
      className="form-group no-margin-bottom"
    >
      <div
        className=""
      >
        <div
          className="pull-left"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="default"
            disabled={false}
            onClick={[Function]}
          >
            <button
              className="btn btn-default"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              Cancel
            </button>
          </Button>
        </div>
        <div
          className="btn-group pull-right"
        >
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsStyle="success"
            disabled={false}
            onClick={[Function]}
            type="submit"
          >
            <button
              className="btn btn-success"
              disabled={false}
              onClick={[Function]}
              type="submit"
            >
              Finish
            </button>
          </Button>
        </div>
      </div>
    </div>
  </WizardNavButtons>
</AssayDesignerPanels>
`;
