// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductMenu render error display 1`] = `
<div
  className="dropdown btn-group"
>
  <button
    aria-expanded={false}
    aria-haspopup={true}
    className="dropdown-toggle btn btn-default"
    disabled={false}
    id="product-menu"
    onClick={[Function]}
    onKeyDown={[Function]}
    role="button"
    type="button"
  >
    Menu
     
    <span
      className="caret"
    />
  </button>
  <ul
    aria-labelledby="product-menu"
    className="dropdown-menu"
    role="menu"
  >
    <div
      className="product-menu-content col-3 error"
      onClick={[Function]}
      onKeyDown={[Function]}
      onSelect={[Function]}
    >
      <span>
        Test error message
      </span>
    </div>
  </ul>
</div>
`;

exports[`ProductMenu render loading 1`] = `
<div
  className="dropdown btn-group"
>
  <button
    aria-expanded={false}
    aria-haspopup={true}
    className="dropdown-toggle btn btn-default"
    disabled={false}
    id="product-menu"
    onClick={[Function]}
    onKeyDown={[Function]}
    role="button"
    type="button"
  >
    Menu
     
    <span
      className="caret"
    />
  </button>
  <ul
    aria-labelledby="product-menu"
    className="dropdown-menu"
    role="menu"
  >
    <div
      className="product-menu-content col-3"
      onClick={[Function]}
      onKeyDown={[Function]}
      onSelect={[Function]}
    >
      <span
        className=""
      >
        <i
          aria-hidden="true"
          className="fa fa-spinner fa-spin"
        />
         
        Loading...
      </span>
    </div>
  </ul>
</div>
`;

exports[`ProductMenu render one column per section 1`] = `
<ProductMenu
  maxColumns={5}
  productId="testProduct3Columns"
>
  <DropdownButton
    id="product-menu"
    onToggle={[Function]}
    open={false}
    rootCloseEvent="mousedown"
    title="Menu"
  >
    <Uncontrolled(Dropdown)
      id="product-menu"
      onToggle={[Function]}
      open={false}
      rootCloseEvent="mousedown"
    >
      <Dropdown
        bsClass="dropdown"
        componentClass={[Function]}
        id="product-menu"
        onToggle={[Function]}
        open={false}
        rootCloseEvent="mousedown"
      >
        <ButtonGroup
          block={false}
          bsClass="btn-group"
          className="dropdown"
          justified={false}
          vertical={false}
        >
          <div
            className="dropdown btn-group"
          >
            <DropdownToggle
              bsClass="dropdown-toggle"
              bsRole="toggle"
              id="product-menu"
              key=".0"
              onClick={[Function]}
              onKeyDown={[Function]}
              open={false}
              useAnchor={false}
            >
              <Button
                active={false}
                aria-expanded={false}
                aria-haspopup={true}
                block={false}
                bsClass="btn"
                bsStyle="default"
                className="dropdown-toggle"
                disabled={false}
                id="product-menu"
                onClick={[Function]}
                onKeyDown={[Function]}
                role="button"
              >
                <button
                  aria-expanded={false}
                  aria-haspopup={true}
                  className="dropdown-toggle btn btn-default"
                  disabled={false}
                  id="product-menu"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="button"
                  type="button"
                >
                  Menu
                   
                  <span
                    className="caret"
                  />
                </button>
              </Button>
            </DropdownToggle>
            <DropdownMenu
              bsClass="dropdown-menu"
              bsRole="menu"
              key=".1"
              labelledBy="product-menu"
              onClose={[Function]}
              onSelect={[Function]}
              open={false}
              pullRight={false}
              rootCloseEvent="mousedown"
            >
              <RootCloseWrapper
                disabled={true}
                event="mousedown"
                onRootClose={[Function]}
              >
                <ul
                  aria-labelledby="product-menu"
                  className="dropdown-menu"
                  role="menu"
                >
                  <div
                    className="product-menu-content col-3 error"
                    key=".0"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onSelect={[Function]}
                  >
                    <span>
                      Test error message
                    </span>
                  </div>
                </ul>
              </RootCloseWrapper>
            </DropdownMenu>
          </div>
        </ButtonGroup>
      </Dropdown>
    </Uncontrolled(Dropdown)>
  </DropdownButton>
</ProductMenu>
`;

exports[`ProductMenu render two columns for assays 1`] = `
<ProductMenu
  maxColumns={5}
  productId="testProduct4Columns"
  sectionConfigs={
    Immutable.Map {
      "assays": Immutable.Record {
        "maxItemsPerColumn": 2,
        "maxColumns": 2,
      },
    }
  }
>
  <DropdownButton
    id="product-menu"
    onToggle={[Function]}
    open={false}
    rootCloseEvent="mousedown"
    title="Menu"
  >
    <Uncontrolled(Dropdown)
      id="product-menu"
      onToggle={[Function]}
      open={false}
      rootCloseEvent="mousedown"
    >
      <Dropdown
        bsClass="dropdown"
        componentClass={[Function]}
        id="product-menu"
        onToggle={[Function]}
        open={false}
        rootCloseEvent="mousedown"
      >
        <ButtonGroup
          block={false}
          bsClass="btn-group"
          className="dropdown"
          justified={false}
          vertical={false}
        >
          <div
            className="dropdown btn-group"
          >
            <DropdownToggle
              bsClass="dropdown-toggle"
              bsRole="toggle"
              id="product-menu"
              key=".0"
              onClick={[Function]}
              onKeyDown={[Function]}
              open={false}
              useAnchor={false}
            >
              <Button
                active={false}
                aria-expanded={false}
                aria-haspopup={true}
                block={false}
                bsClass="btn"
                bsStyle="default"
                className="dropdown-toggle"
                disabled={false}
                id="product-menu"
                onClick={[Function]}
                onKeyDown={[Function]}
                role="button"
              >
                <button
                  aria-expanded={false}
                  aria-haspopup={true}
                  className="dropdown-toggle btn btn-default"
                  disabled={false}
                  id="product-menu"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="button"
                  type="button"
                >
                  Menu
                   
                  <span
                    className="caret"
                  />
                </button>
              </Button>
            </DropdownToggle>
            <DropdownMenu
              bsClass="dropdown-menu"
              bsRole="menu"
              key=".1"
              labelledBy="product-menu"
              onClose={[Function]}
              onSelect={[Function]}
              open={false}
              pullRight={false}
              rootCloseEvent="mousedown"
            >
              <RootCloseWrapper
                disabled={true}
                event="mousedown"
                onRootClose={[Function]}
              >
                <ul
                  aria-labelledby="product-menu"
                  className="dropdown-menu"
                  role="menu"
                >
                  <div
                    className="product-menu-content col-4 error"
                    key=".0"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onSelect={[Function]}
                  >
                    <span>
                      Test error message
                    </span>
                  </div>
                </ul>
              </RootCloseWrapper>
            </DropdownMenu>
          </div>
        </ButtonGroup>
      </Dropdown>
    </Uncontrolled(Dropdown)>
  </DropdownButton>
</ProductMenu>
`;

exports[`ProductMenu render two columns for assays and samples 1`] = `
<ProductMenu
  maxColumns={5}
  productId="testProduct4Columns"
  sectionConfigs={
    Immutable.Map {
      "assays": Immutable.Record {
        "maxItemsPerColumn": 2,
        "maxColumns": 2,
      },
      "samples": Immutable.Record {
        "maxItemsPerColumn": 2,
        "maxColumns": 2,
      },
    }
  }
>
  <DropdownButton
    id="product-menu"
    onToggle={[Function]}
    open={false}
    rootCloseEvent="mousedown"
    title="Menu"
  >
    <Uncontrolled(Dropdown)
      id="product-menu"
      onToggle={[Function]}
      open={false}
      rootCloseEvent="mousedown"
    >
      <Dropdown
        bsClass="dropdown"
        componentClass={[Function]}
        id="product-menu"
        onToggle={[Function]}
        open={false}
        rootCloseEvent="mousedown"
      >
        <ButtonGroup
          block={false}
          bsClass="btn-group"
          className="dropdown"
          justified={false}
          vertical={false}
        >
          <div
            className="dropdown btn-group"
          >
            <DropdownToggle
              bsClass="dropdown-toggle"
              bsRole="toggle"
              id="product-menu"
              key=".0"
              onClick={[Function]}
              onKeyDown={[Function]}
              open={false}
              useAnchor={false}
            >
              <Button
                active={false}
                aria-expanded={false}
                aria-haspopup={true}
                block={false}
                bsClass="btn"
                bsStyle="default"
                className="dropdown-toggle"
                disabled={false}
                id="product-menu"
                onClick={[Function]}
                onKeyDown={[Function]}
                role="button"
              >
                <button
                  aria-expanded={false}
                  aria-haspopup={true}
                  className="dropdown-toggle btn btn-default"
                  disabled={false}
                  id="product-menu"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="button"
                  type="button"
                >
                  Menu
                   
                  <span
                    className="caret"
                  />
                </button>
              </Button>
            </DropdownToggle>
            <DropdownMenu
              bsClass="dropdown-menu"
              bsRole="menu"
              key=".1"
              labelledBy="product-menu"
              onClose={[Function]}
              onSelect={[Function]}
              open={false}
              pullRight={false}
              rootCloseEvent="mousedown"
            >
              <RootCloseWrapper
                disabled={true}
                event="mousedown"
                onRootClose={[Function]}
              >
                <ul
                  aria-labelledby="product-menu"
                  className="dropdown-menu"
                  role="menu"
                >
                  <div
                    className="product-menu-content col-5 error"
                    key=".0"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onSelect={[Function]}
                  >
                    <span>
                      Test error message
                    </span>
                  </div>
                </ul>
              </RootCloseWrapper>
            </DropdownMenu>
          </div>
        </ButtonGroup>
      </Dropdown>
    </Uncontrolled(Dropdown)>
  </DropdownButton>
</ProductMenu>
`;

exports[`ProductMenu render two columns with overflow link 1`] = `
<ProductMenu
  maxColumns={5}
  productId="testProductOverflowLink"
  sectionConfigs={
    Immutable.Map {
      "assays": Immutable.Record {
        "maxItemsPerColumn": 2,
        "maxColumns": 2,
      },
      "samples": Immutable.Record {
        "maxItemsPerColumn": 2,
        "maxColumns": 2,
      },
    }
  }
>
  <DropdownButton
    id="product-menu"
    onToggle={[Function]}
    open={false}
    rootCloseEvent="mousedown"
    title="Menu"
  >
    <Uncontrolled(Dropdown)
      id="product-menu"
      onToggle={[Function]}
      open={false}
      rootCloseEvent="mousedown"
    >
      <Dropdown
        bsClass="dropdown"
        componentClass={[Function]}
        id="product-menu"
        onToggle={[Function]}
        open={false}
        rootCloseEvent="mousedown"
      >
        <ButtonGroup
          block={false}
          bsClass="btn-group"
          className="dropdown"
          justified={false}
          vertical={false}
        >
          <div
            className="dropdown btn-group"
          >
            <DropdownToggle
              bsClass="dropdown-toggle"
              bsRole="toggle"
              id="product-menu"
              key=".0"
              onClick={[Function]}
              onKeyDown={[Function]}
              open={false}
              useAnchor={false}
            >
              <Button
                active={false}
                aria-expanded={false}
                aria-haspopup={true}
                block={false}
                bsClass="btn"
                bsStyle="default"
                className="dropdown-toggle"
                disabled={false}
                id="product-menu"
                onClick={[Function]}
                onKeyDown={[Function]}
                role="button"
              >
                <button
                  aria-expanded={false}
                  aria-haspopup={true}
                  className="dropdown-toggle btn btn-default"
                  disabled={false}
                  id="product-menu"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="button"
                  type="button"
                >
                  Menu
                   
                  <span
                    className="caret"
                  />
                </button>
              </Button>
            </DropdownToggle>
            <DropdownMenu
              bsClass="dropdown-menu"
              bsRole="menu"
              key=".1"
              labelledBy="product-menu"
              onClose={[Function]}
              onSelect={[Function]}
              open={false}
              pullRight={false}
              rootCloseEvent="mousedown"
            >
              <RootCloseWrapper
                disabled={true}
                event="mousedown"
                onRootClose={[Function]}
              >
                <ul
                  aria-labelledby="product-menu"
                  className="dropdown-menu"
                  role="menu"
                >
                  <div
                    className="product-menu-content col-5 error"
                    key=".0"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onSelect={[Function]}
                  >
                    <span>
                      Test error message
                    </span>
                  </div>
                </ul>
              </RootCloseWrapper>
            </DropdownMenu>
          </div>
        </ButtonGroup>
      </Dropdown>
    </Uncontrolled(Dropdown)>
  </DropdownButton>
</ProductMenu>
`;
