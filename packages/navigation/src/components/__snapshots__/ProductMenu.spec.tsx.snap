// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductMenu render error display 1`] = `
<div
  className="dropdown btn-group"
>
  <button
    aria-expanded={false}
    aria-haspopup={true}
    className="dropdown-toggle btn btn-default"
    disabled={false}
    id="product-menu"
    onClick={[Function]}
    onKeyDown={[Function]}
    role="button"
    type="button"
  >
    Menu
     
    <span
      className="caret"
    />
  </button>
  <ul
    aria-labelledby="product-menu"
    className="dropdown-menu"
    role="menu"
  >
    <div
      className="product-menu-content  error"
      onClick={[Function]}
      onKeyDown={[Function]}
      onSelect={[Function]}
    >
      <span>
        Test error message
      </span>
    </div>
  </ul>
</div>
`;

exports[`ProductMenu render loading 1`] = `
<div
  className="dropdown btn-group"
>
  <button
    aria-expanded={false}
    aria-haspopup={true}
    className="dropdown-toggle btn btn-default"
    disabled={false}
    id="product-menu"
    onClick={[Function]}
    onKeyDown={[Function]}
    role="button"
    type="button"
  >
    Menu
     
    <span
      className="caret"
    />
  </button>
  <ul
    aria-labelledby="product-menu"
    className="dropdown-menu"
    role="menu"
  >
    <div
      className="product-menu-content "
      onClick={[Function]}
      onKeyDown={[Function]}
      onSelect={[Function]}
    >
      <div
        className="menu-section col-0 menu-loading"
      >
        <span
          className=""
        >
          <i
            aria-hidden="true"
            className="fa fa-spinner fa-spin"
          />
           
          Loading...
        </span>
      </div>
    </div>
  </ul>
</div>
`;

exports[`ProductMenu render multiple sections 1`] = `
<ProductMenu
  maxColumns={5}
  model={
    Immutable.Record {
      "isError": false,
      "isLoaded": true,
      "isLoading": false,
      "sections": Immutable.List [
        Immutable.Record {
          "label": "Sample Sets",
          "url": undefined,
          "items": Immutable.List [
            Immutable.Record {
              "id": 1,
              "key": undefined,
              "label": "Sample Set 1",
              "url": undefined,
              "orderNum": undefined,
              "requiresLogin": false,
            },
            Immutable.Record {
              "id": 2,
              "key": undefined,
              "label": "Sample Set 2",
              "url": undefined,
              "orderNum": undefined,
              "requiresLogin": false,
            },
            Immutable.Record {
              "id": 3,
              "key": undefined,
              "label": "Sample Set 3",
              "url": undefined,
              "orderNum": undefined,
              "requiresLogin": false,
            },
            Immutable.Record {
              "id": 4,
              "key": undefined,
              "label": "Sample Set 4",
              "url": undefined,
              "orderNum": undefined,
              "requiresLogin": false,
            },
          ],
          "totalCount": 0,
          "itemLimit": 2,
          "key": "samples",
        },
        Immutable.Record {
          "label": "Assays",
          "url": undefined,
          "items": Immutable.List [
            Immutable.Record {
              "id": 11,
              "key": undefined,
              "label": "Assay 1",
              "url": undefined,
              "orderNum": undefined,
              "requiresLogin": false,
            },
            Immutable.Record {
              "id": 12,
              "key": undefined,
              "label": "Assay 2",
              "url": undefined,
              "orderNum": undefined,
              "requiresLogin": false,
            },
            Immutable.Record {
              "id": 13,
              "key": undefined,
              "label": "Assay 3",
              "url": undefined,
              "orderNum": undefined,
              "requiresLogin": false,
            },
            Immutable.Record {
              "id": 14,
              "key": undefined,
              "label": "Assay 4",
              "url": undefined,
              "orderNum": undefined,
              "requiresLogin": false,
            },
            Immutable.Record {
              "id": 15,
              "key": undefined,
              "label": "Assay 5",
              "url": undefined,
              "orderNum": undefined,
              "requiresLogin": false,
            },
          ],
          "totalCount": 0,
          "itemLimit": undefined,
          "key": "assays",
        },
        Immutable.Record {
          "label": "Your Items",
          "url": undefined,
          "items": Immutable.List [
            Immutable.Record {
              "id": 21,
              "key": undefined,
              "label": "Documentation",
              "url": undefined,
              "orderNum": undefined,
              "requiresLogin": false,
            },
          ],
          "totalCount": 0,
          "itemLimit": undefined,
          "key": "user",
        },
      ],
      "message": undefined,
      "productId": "testProduct3Columns",
    }
  }
>
  <DropdownButton
    id="product-menu"
    onToggle={[Function]}
    open={false}
    rootCloseEvent="mousedown"
    title="Menu"
  >
    <Uncontrolled(Dropdown)
      id="product-menu"
      onToggle={[Function]}
      open={false}
      rootCloseEvent="mousedown"
    >
      <Dropdown
        bsClass="dropdown"
        componentClass={[Function]}
        id="product-menu"
        onToggle={[Function]}
        open={false}
        rootCloseEvent="mousedown"
      >
        <ButtonGroup
          block={false}
          bsClass="btn-group"
          className="dropdown"
          justified={false}
          vertical={false}
        >
          <div
            className="dropdown btn-group"
          >
            <DropdownToggle
              bsClass="dropdown-toggle"
              bsRole="toggle"
              id="product-menu"
              key=".0"
              onClick={[Function]}
              onKeyDown={[Function]}
              open={false}
              useAnchor={false}
            >
              <Button
                active={false}
                aria-expanded={false}
                aria-haspopup={true}
                block={false}
                bsClass="btn"
                bsStyle="default"
                className="dropdown-toggle"
                disabled={false}
                id="product-menu"
                onClick={[Function]}
                onKeyDown={[Function]}
                role="button"
              >
                <button
                  aria-expanded={false}
                  aria-haspopup={true}
                  className="dropdown-toggle btn btn-default"
                  disabled={false}
                  id="product-menu"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  role="button"
                  type="button"
                >
                  Menu
                   
                  <span
                    className="caret"
                  />
                </button>
              </Button>
            </DropdownToggle>
            <DropdownMenu
              bsClass="dropdown-menu"
              bsRole="menu"
              key=".1"
              labelledBy="product-menu"
              onClose={[Function]}
              onSelect={[Function]}
              open={false}
              pullRight={false}
              rootCloseEvent="mousedown"
            >
              <RootCloseWrapper
                disabled={true}
                event="mousedown"
                onRootClose={[Function]}
              >
                <ul
                  aria-labelledby="product-menu"
                  className="dropdown-menu"
                  role="menu"
                >
                  <div
                    className="product-menu-content "
                    key=".0"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    onSelect={[Function]}
                  >
                    <div
                      className="menu-section col-3"
                      key="samples"
                    >
                      <ProductMenuSection
                        config={
                          Immutable.Record {
                            "emptyText": undefined,
                            "iconURL": undefined,
                            "iconCls": undefined,
                            "maxItemsPerColumn": 12,
                            "maxColumns": 1,
                            "seeAllURL": undefined,
                          }
                        }
                        maxColumns={1}
                        productId="testProduct3Columns"
                        section={
                          Immutable.Record {
                            "label": "Sample Sets",
                            "url": undefined,
                            "items": Immutable.List [
                              Immutable.Record {
                                "id": 1,
                                "key": undefined,
                                "label": "Sample Set 1",
                                "url": undefined,
                                "orderNum": undefined,
                                "requiresLogin": false,
                              },
                              Immutable.Record {
                                "id": 2,
                                "key": undefined,
                                "label": "Sample Set 2",
                                "url": undefined,
                                "orderNum": undefined,
                                "requiresLogin": false,
                              },
                              Immutable.Record {
                                "id": 3,
                                "key": undefined,
                                "label": "Sample Set 3",
                                "url": undefined,
                                "orderNum": undefined,
                                "requiresLogin": false,
                              },
                              Immutable.Record {
                                "id": 4,
                                "key": undefined,
                                "label": "Sample Set 4",
                                "url": undefined,
                                "orderNum": undefined,
                                "requiresLogin": false,
                              },
                            ],
                            "totalCount": 0,
                            "itemLimit": 2,
                            "key": "samples",
                          }
                        }
                      >
                        <span
                          className="menu-section-header"
                        >
                          Sample Sets
                        </span>
                        <hr />
                        <ul
                          className="col-1"
                          key="samplescol-1"
                        >
                          <li
                            key="Sample Set 1"
                          >
                            Sample Set 1
                          </li>
                          <li
                            key="Sample Set 2"
                          >
                            Sample Set 2
                          </li>
                          <li
                            key="Sample Set 3"
                          >
                            Sample Set 3
                          </li>
                          <li
                            key="Sample Set 4"
                          >
                            Sample Set 4
                          </li>
                        </ul>
                      </ProductMenuSection>
                    </div>
                    <div
                      className="menu-section col-3"
                      key="assays"
                    >
                      <ProductMenuSection
                        config={
                          Immutable.Record {
                            "emptyText": undefined,
                            "iconURL": undefined,
                            "iconCls": undefined,
                            "maxItemsPerColumn": 12,
                            "maxColumns": 1,
                            "seeAllURL": undefined,
                          }
                        }
                        maxColumns={1}
                        productId="testProduct3Columns"
                        section={
                          Immutable.Record {
                            "label": "Assays",
                            "url": undefined,
                            "items": Immutable.List [
                              Immutable.Record {
                                "id": 11,
                                "key": undefined,
                                "label": "Assay 1",
                                "url": undefined,
                                "orderNum": undefined,
                                "requiresLogin": false,
                              },
                              Immutable.Record {
                                "id": 12,
                                "key": undefined,
                                "label": "Assay 2",
                                "url": undefined,
                                "orderNum": undefined,
                                "requiresLogin": false,
                              },
                              Immutable.Record {
                                "id": 13,
                                "key": undefined,
                                "label": "Assay 3",
                                "url": undefined,
                                "orderNum": undefined,
                                "requiresLogin": false,
                              },
                              Immutable.Record {
                                "id": 14,
                                "key": undefined,
                                "label": "Assay 4",
                                "url": undefined,
                                "orderNum": undefined,
                                "requiresLogin": false,
                              },
                              Immutable.Record {
                                "id": 15,
                                "key": undefined,
                                "label": "Assay 5",
                                "url": undefined,
                                "orderNum": undefined,
                                "requiresLogin": false,
                              },
                            ],
                            "totalCount": 0,
                            "itemLimit": undefined,
                            "key": "assays",
                          }
                        }
                      >
                        <span
                          className="menu-section-header"
                        >
                          Assays
                        </span>
                        <hr />
                        <ul
                          className="col-1"
                          key="assayscol-1"
                        >
                          <li
                            key="Assay 1"
                          >
                            Assay 1
                          </li>
                          <li
                            key="Assay 2"
                          >
                            Assay 2
                          </li>
                          <li
                            key="Assay 3"
                          >
                            Assay 3
                          </li>
                          <li
                            key="Assay 4"
                          >
                            Assay 4
                          </li>
                          <li
                            key="Assay 5"
                          >
                            Assay 5
                          </li>
                        </ul>
                      </ProductMenuSection>
                    </div>
                    <div
                      className="menu-section col-3"
                      key="user"
                    >
                      <ProductMenuSection
                        config={
                          Immutable.Record {
                            "emptyText": undefined,
                            "iconURL": undefined,
                            "iconCls": undefined,
                            "maxItemsPerColumn": 12,
                            "maxColumns": 1,
                            "seeAllURL": undefined,
                          }
                        }
                        maxColumns={1}
                        productId="testProduct3Columns"
                        section={
                          Immutable.Record {
                            "label": "Your Items",
                            "url": undefined,
                            "items": Immutable.List [
                              Immutable.Record {
                                "id": 21,
                                "key": undefined,
                                "label": "Documentation",
                                "url": undefined,
                                "orderNum": undefined,
                                "requiresLogin": false,
                              },
                            ],
                            "totalCount": 0,
                            "itemLimit": undefined,
                            "key": "user",
                          }
                        }
                      >
                        <span
                          className="menu-section-header"
                        >
                          Your Items
                        </span>
                        <hr />
                        <ul
                          className="col-1"
                          key="usercol-1"
                        >
                          <li
                            key="Documentation"
                          >
                            Documentation
                          </li>
                        </ul>
                      </ProductMenuSection>
                    </div>
                  </div>
                </ul>
              </RootCloseWrapper>
            </DropdownMenu>
          </div>
        </ButtonGroup>
      </Dropdown>
    </Uncontrolled(Dropdown)>
  </DropdownButton>
</ProductMenu>
`;
